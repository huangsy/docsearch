[
  {
    "filename": "api/axis.md",
    "path": "api/axis",
    "jsonml": [
      "article",
      [
        "h1",
        "Axis"
      ],
      [
        "p",
        "坐标轴配置，BizCharts中将Axis抽离为一个单独的组件，不使用Axis组件则默认不显示所有坐标轴及相关的信息。"
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "h3",
        "父组件"
      ],
      [
        "p",
        [
          "code",
          "<Chart />"
        ],
        " ",
        [
          "code",
          "<View />"
        ]
      ],
      [
        "h3",
        "子组件"
      ],
      [
        "p",
        "无"
      ],
      [
        "h3",
        "注意事项"
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 不显示坐标轴\n<Chart width={600} height={400} data={data}>\n  <Geom type=\"interval\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "使用Axis组件时，必须指定当前坐标轴对应数据源中的字段名（字段名为name），否则该坐标轴相关配置信息将不起作用；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 指定坐标轴对应数据源中的字段名\n<Chart width={600} height={400} data={data}>\n  <Axis name=\"sold\" />\n  <Geom type=\"interval\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "一旦使用",
            [
              "code",
              "<Axis/>"
            ],
            "组件，那么所有的坐标轴都会显示，如若需要隐藏某一个坐标轴及相关信息，务必将visible参数并置为false，如下所示："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 只显示其中一条坐标轴\n<Chart width={600} height={400} data={data}>\n  <Axis name=\"sold\" />\n  <Axis name=\"genre\" visible={false} />\n  <Geom type=\"interval\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "h2",
        "API"
      ],
      [
        "h3",
        "1、name\t\t",
        [
          "em",
          " String "
        ]
      ],
      [
        "p",
        "当前坐标轴对应数据源中的字段名(必填)"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "  <Axis name=\"sold\" />"
        ]
      ],
      [
        "h3",
        "2、visible \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "当前坐标轴是否需要可见，默认值true。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "  <Axis name=\"genre\" visible={false} />"
        ]
      ],
      [
        "h3",
        "3、position \t",
        [
          "em",
          "'top'|'bottom'|'left'|'right'"
        ]
      ],
      [
        "p",
        "当前坐标轴的摆放位置。"
      ],
      [
        "h3",
        "4、title \t",
        [
          "em",
          "Object | Boolean | null"
        ]
      ],
      [
        "p",
        "当前坐标轴标题是否需要显示,及其样式配置。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "是否显示\n轴的 title 是默认不显示的, 即 ",
            [
              "code",
              "title=null"
            ],
            "，如果需要显示需要将此属性配置为 true。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": null
        },
        [
          "code",
          "  <Axis title />"
        ]
      ],
      [
        "p",
        "通过 ",
        [
          "code",
          "title={true}"
        ],
        " 渲染坐标轴标题。通过以下配置对标题进行个性化配置：参考",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ]
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "const title = {\n  autoRotate: {Boolean}, // 是否需要自动旋转，默认为 true\n  offset: {Number}, // 设置标题 title 距离坐标轴线的距离\n  textStyle: {\n\tfontSize: '12',\n\ttextAlign: 'center',\n\tfill: '#999',\n\tfontWeight: 'bold',\n\trotate: {角度}\n  }, // 坐标轴文本属性配置\n  position: 'start' || 'center' || 'end', // 标题的位置，**新增**\n}"
        ]
      ],
      [
        "p",
        "提示：当需要配置坐标轴标题文本时，在该轴的 scale 中设置 alias 属性，如下所示，更多 scale 设置请查看 scale。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales:{\n    alias:'标题名称'\n  }\n};\n\n<Chart scale={scale} >\n  <Axis name=\"sold\" title={title}/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "5、line \t",
        [
          "em",
          "Object | null"
        ]
      ],
      [
        "p",
        "设置坐标轴线的样式，包括线的颜色、粗细等。如果该属性值为 null 则表示不展示坐标轴线。样式设置细节参考",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ]
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式\n{\n  stroke: 'dddddd',\n  fill: '#ffffff',\n  lineDash: [2, 2, 3],\n  lineWidth: 3\n}"
        ]
      ],
      [
        "h3",
        "6、tickLine \t",
        [
          "em",
          "Object | null"
        ]
      ],
      [
        "p",
        "设置坐标轴的刻度线。如果该属性值为 null 则表示不展示。"
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式\nconst tickLine = {\n  lineWidth: 1, // 刻度线宽\n  stroke: '#ccc', // 刻度线的颜色\n  length: 5, // 刻度线的长度, **原来的属性为 line**,可以通过将值设置为负数来改变其在轴上的方向\n}"
        ]
      ],
      [
        "p",
        "提示：刻度线个数、范围、内容可以通过该轴的 scale 配置，如下所示，更多 scale 配置请查看 scale。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales:{\n    min: 0, // 定义数值范围的最小值\n    max: 10000, // 定义数值范围的最大值\n    ticks: [100, 1000, 2000, 3000], // 用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。\n    tickInterval: 1000, // 用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，tickCount 和 tickInterval 不可以同时声明。\n    tickCount: 10, // 定义坐标轴刻度线的条数，默认为 5\n  }\n};\n\n<Chart scale={scale} >\n  <Axis name=\"sold\" tickLine={tickLine}/>\n</Chart>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "label"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "7、label \t",
        [
          "em",
          "Object | null"
        ]
      ],
      [
        "p",
        "设置坐标轴文本的样式。如果该属性值为 null 则表示不展示坐标轴文本。"
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "const label = {\n  offset: {number}, // 数值，设置坐标轴文本 label 距离坐标轴线的距离\n  // 设置文本的显示样式，还可以是个回调函数，回调函数的参数为该坐标轴对应字段的数值\n  textStyle: {\n    textAlign: 'center', // 文本对齐方向，可取值为： start center end\n    fill: '#404040', // 文本的颜色\n    fontSize: '12', // 文本大小\n    fontWeight: 'bold', // 文本粗细\n    rotate: 30, \n    textBaseline: 'top' // 文本基准线，可取 top middle bottom，默认为middle\n  } | (text) => {\n    // text: 坐标轴对应字段的数值\n  }, \n  autoRotate: {boolean}, // 文本是否需要自动旋转，默认为 true\n  /**\n   * 用于格式化坐标轴上显示的文本信息的回调函数\n   * @param  {string} text  文本值\n   * @param  {object} item  该文本值对应的原始数据记录\n   * @param  {number} index 索引值\n   * @return {string}       返回格式化后的文本值\n   */\n  formatter(text, item, index) {},\n  /**\n   * 使用 html 渲染文本\n   * @param  {string} text  文本值\n   * @param  {object} item  该文本值对应的原始数据记录\n   * @param  {number} index 索引值\n   * @return {string}       返回 html 字符串\n   */\n  htmlTemplate(text, item, index) {}\n}"
        ]
      ],
      [
        "p",
        "提示：label显示文本等配置也可以通过该轴的 scale 配置，如下所示，更多 scale 配置请查看 scale。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales: {\n    min:0, // 定义数值范围的最小值\n    max:10000, // 定义数值范围的最大值\n    ticks:[100, 1000, 2000, 3000], // 用于指定坐标轴上刻度点的文本信息（label），当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。\n    tickInterval: 1000, // 用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，tickCount 和 tickInterval 不可以同时声明。\n    tickCount: 10, // 定义坐标轴刻度线的条数，默认为 5\n  }\n};\n\n<Chart scale={scale} >\n  <Axis name=\"sold\" label={label}/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "8、grid \t",
        [
          "em",
          " Object | null"
        ]
      ],
      [
        "p",
        "设置坐标轴网格线的样式，网格线与坐标轴线垂直。如果该属性值为 null 则表示不展示。\n更多参考",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ]
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式\nconst grid = {\n  align: 'center', // 网格顶点从两个刻度中间开始\n  type: 'line' || 'polygon', // 网格的类型\n  lineStyle: {\n\tstroke: '#d9d9d9', // 网格线的颜色\n\tlineWidth: 1, // 网格线的宽度复制代码\n\tlineDash: [4, 4] // 网格线的虚线配置，第一个参数描述虚线的实部占多少像素，第二个参数描述虚线的虚部占多少像素\n  }, // 网格线的样式配置，原有属性为 line\n  alternateColor: '#ccc' || ['#f80', '#ccc'], // 为网格设置交替的背景色，指定一个值则先渲染奇数层，两个值则交替渲染。**代替原有的 odd 和 even 属性**\n}"
        ]
      ],
      [
        "h3",
        "9、subTickCount \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "当前坐标轴次刻度线个数。"
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "<Axis subTickCount={2} />// 设置次刻度线的个数，数值类型"
        ]
      ],
      [
        "h3",
        "10、subTickLine \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "当前坐标轴次刻度线样式配置。"
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式\nconst subTickLine = {\n  lineWidth: 1, // 次刻度线宽\n  stroke: '#ddd', // 次刻度线颜色\n  strokeOpacity: 0.5, // 次刻度线颜色的透明度\n  length: 3 // 次刻度线的长度，可以为负值（表示反方向渲染）\n}"
        ]
      ],
      [
        "h2",
        "其他配置"
      ],
      [
        "p",
        "坐标轴有很多配置是需要通过配置对应的 scale 才能达到。以下列举了几个常用的 scale 配置，不同类型的 scale 配置的属性略微不同，想知道更多请查看",
        [
          "a",
          {
            "title": null,
            "href": "scale.md"
          },
          "scale文档"
        ]
      ],
      [
        "h3",
        "1、坐标轴显示范围"
      ],
      [
        "p",
        "需要设置对应 scale 中的 min、max 属性。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales:{\n    type:\"linear\",\n    min:0,\n    max:1000,\n  },\n}\n<Chart scale={scale}>\n  <Geom type=\"line\" position=\"city*sales\" />\n  <Axis name=\"sales\"/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "2、坐标轴刻度个数"
      ],
      [
        "p",
        "需要设置对应 scale 中的 tickCount 属性。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales:{\n    type:\"linear\",\n    tickCount:10,\n  },\n}\n<Chart scale={scale}>\n  <Geom type=\"line\" position=\"city*sales\" />\n  <Axis name=\"sales\"/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "3、坐标轴刻度线间距"
      ],
      [
        "p",
        "对于连续类型的数据，还支持设置坐标轴刻度线的间距（tickInterval 属性），同样需要在 scale 中进行配置，但是需要说明的是，tickInterval 为原始数据值的差值，并且 tickCount 和 tickInterval 不可以同时声明。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  sales:{\n    type:\"linear\",\n    tickInterval:100,\n  },\n}\n<Chart scale={scale}>\n  <Geom type=\"line\" position=\"city*sales\" />\n  <Axis name=\"sales\"/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "4、坐标轴两端空白"
      ],
      [
        "p",
        "对于分类数据的坐标轴两边默认会留下一定的空白，连续数据的坐标轴的两端没有空白刻度。\n",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/basement/skylark/0ad6383d14791895682958949d755f/attach/4080/900/image.png",
            "alt": "坐标轴"
          }
        ],
        "\n是否两端有空白是列定义里面 range 属性决定的，分类列的 range 的默认值是 ",
        [
          "span",
          " 1 / (count - 1), 1 - 1 / (count - 1) "
        ],
        "，可以修改这个值达到改变空白大小的目的。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  city:{\n    type:\"cat\",\n    range: [ 0, 1 ]\n  },\n}\n<Chart scale={scale}>\n  <Geom type=\"line\" position=\"city*sales\" />\n  <Axis name=\"sales\"/>\n</Chart>"
        ]
      ],
      [
        "h3",
        "5、坐标轴在其他坐标系下的显示"
      ],
      [
        "p",
        "不同的坐标系下坐标轴的显示不一样，默认的配置项也不同"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "极坐标下的坐标轴上默认不显示title，栅格线有圆形和多边形两种；"
          ]
        ],
        [
          "li",
          [
            "p",
            "theta、helix 坐标系默认不显示坐标轴；"
          ]
        ],
        [
          "li",
          [
            "p",
            "polar 坐标系发生 transpose 时也不显示坐标轴。"
          ]
        ]
      ]
    ]
  },
  {
    "filename": "api/bizcharts.md",
    "path": "api/bizcharts",
    "jsonml": [
      "article",
      [
        "h1",
        "BizCharts"
      ],
      [
        "p",
        "全局命名空间 BizCharts 包含："
      ],
      [
        "h1",
        "API"
      ],
      [
        "h2",
        "1、Component 组件"
      ],
      [
        "h3",
        "Chart"
      ],
      [
        "p",
        "图表最顶级的组件，控制着图表的创建、绘制、销毁等。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "chart.md"
          },
          "Chart api"
        ]
      ],
      [
        "h3",
        "Coord"
      ],
      [
        "p",
        "坐标系组件，设置 Chart 或者 View 的坐标系类型。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "coord.md"
          },
          "Coord api"
        ]
      ],
      [
        "h3",
        "Aixs"
      ],
      [
        "p",
        "坐标轴组件，控制图表中坐标轴的样式等。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "axis.md"
          },
          "Axis api"
        ]
      ],
      [
        "h3",
        "Geom"
      ],
      [
        "p",
        "几何标记对象，决定创建图表的类型。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "geom.md"
          },
          "Geom api"
        ],
        "。"
      ],
      [
        "h3",
        "Label"
      ],
      [
        "p",
        "几何标记对象上的文本。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "label.md"
          },
          "Label api"
        ]
      ],
      [
        "h3",
        "Legend"
      ],
      [
        "p",
        "图例。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "legend.md"
          },
          "Legend api"
        ]
      ],
      [
        "h3",
        "Guide"
      ],
      [
        "p",
        "坐标轴组件，控制图表中坐标轴的样式等。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "guide.md"
          },
          "Guide api"
        ]
      ],
      [
        "h3",
        "Facet"
      ],
      [
        "p",
        "控制 Chart 分面。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "facet.md"
          },
          "Facet api"
        ]
      ],
      [
        "h3",
        "View"
      ],
      [
        "p",
        "视图组件。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "view.md"
          },
          "View api"
        ]
      ],
      [
        "h2",
        "2、G2"
      ],
      [
        "p",
        "G2 的命名空间，在有需要的情况下用户可以直接拿到该对象去工作。"
      ],
      [
        "h2",
        "3、Animate"
      ],
      [
        "p",
        "用来注册用户自定义动画。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "../tutorial/animate.md"
          },
          "动画教程"
        ],
        "。"
      ],
      [
        "h2",
        "4、Shape"
      ],
      [
        "p",
        "构成图表具体的形状类。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "shape.md"
          },
          "Shape api"
        ],
        "。"
      ],
      [
        "h2",
        "5、setTheme"
      ],
      [
        "p",
        "设置 BizCharts 中使用的主题类型。\n详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "../tutorial/theme.md"
          },
          "theme tutorial"
        ],
        "。"
      ],
      [
        "h2",
        "6、track"
      ],
      [
        "p",
        "该方法用于 G2 情况的打点监控，默认处于开启状态，如果您不想让我们知道您的版本使用情况，请配置为 false。"
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "BizCharts.track(false);"
        ]
      ],
      [
        "h2",
        "7、PathUtil"
      ],
      [
        "p",
        "来自 G2，用于操作图形路径的工具类。具体提供的方法如下："
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "方法"
            ],
            [
              "th",
              "参数说明"
            ],
            [
              "th",
              "返回结果"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              [
                "code",
                "getBoundingClientRect(node)"
              ]
            ],
            [
              "td",
              [
                "code",
                "node"
              ],
              ":HTMLElement，dom 节点"
            ],
            [
              "td",
              "返回该节点在页面中的位置，返回结果格式为： ",
              [
                "code",
                "{top: , bottom: , left: , right}"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getStyle(dom, name)"
              ]
            ],
            [
              "td",
              [
                "code",
                "dom"
              ],
              ":HTMLElement，DOM 节点；",
              [
                "code",
                "name"
              ],
              ":String，样式名"
            ],
            [
              "td",
              "返回该节点对应样式名 name 的具体样式。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "modifyCSS(dom, css)"
              ]
            ],
            [
              "td",
              [
                "code",
                "dom"
              ],
              ":HTMLElement，DOM 节点；",
              [
                "code",
                "css"
              ],
              ":Object，样式属性"
            ],
            [
              "td",
              "修改对应节点的 css 样式，返回修改样式后的 dom 对象。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "createDom(str)"
              ]
            ],
            [
              "td",
              [
                "code",
                "str"
              ],
              ":String，Dom 字符串"
            ],
            [
              "td",
              "按照传入的 str 创建 dom 节点，并返回创建的节点。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getRatio()"
              ]
            ],
            [
              "td",
              "--"
            ],
            [
              "td",
              "返回屏幕的像素分辨率。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getWidth(el)"
              ]
            ],
            [
              "td",
              [
                "code",
                "el"
              ],
              ":HTMLElement，dom 节点"
            ],
            [
              "td",
              "返回 dom 节点的宽度，不包含 padding、border"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getHeight(el)"
              ]
            ],
            [
              "td",
              [
                "code",
                "e"
              ],
              "l:HTMLElement，dom 节点"
            ],
            [
              "td",
              "返回 dom 节点的高度，不包含 padding、border"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getOuterWidth(el)"
              ]
            ],
            [
              "td",
              [
                "code",
                "el"
              ],
              ":HTMLElement，dom 节点"
            ],
            [
              "td",
              "返回 dom 节点的宽度，包含 padding、border"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "getOuterHeight(el)"
              ]
            ],
            [
              "td",
              [
                "code",
                "el"
              ],
              ":HTMLElement，dom 节点"
            ],
            [
              "td",
              "返回 dom 节点的高度，包含 padding、border"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "addEventListener(target, eventType, callback)"
              ]
            ],
            [
              "td",
              [
                "code",
                "target"
              ],
              ":HTMLElement，DOM对象；",
              [
                "code",
                "eventType"
              ],
              ":String，事件名；",
              [
                "code",
                "callback"
              ],
              ":Function，回调函数"
            ],
            [
              "td",
              "添加事件监听器"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "requestAnimationFrame(fn)"
              ]
            ],
            [
              "td",
              [
                "code",
                "fn"
              ],
              ":Function，回调函数"
            ],
            [
              "td",
              "用于定时循环操作。"
            ]
          ]
        ]
      ],
      [
        "h2",
        "8、Util"
      ],
      [
        "p",
        "默认提供的常见的工具类，大部分基于 lodash 封装。\n如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const Util = {\n  each: require('lodash/each'),\n  map: require('lodash/map'),\n  isObject: require('lodash/isObject'),\n  isNumber: require('lodash/isNumber'),\n  isString: require('lodash/isString'),\n  isFunction: require('lodash/isFunction'),\n  ...\n};"
        ]
      ],
      [
        "h2",
        "9、",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ]
      ]
    ]
  },
  {
    "filename": "api/chart.md",
    "path": "api/chart",
    "jsonml": [
      "article",
      [
        "h1",
        "Chart"
      ],
      [
        "p",
        "图表组件，内部生成了一个 G2 chart 实例，同时控制着其他子组件的加载和更新。"
      ],
      [
        "h2",
        "子组件"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "coord.md"
              },
              [
                "code",
                "<Coord/>"
              ]
            ],
            " 坐标系组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "axis.md"
              },
              [
                "code",
                "<Axis/>"
              ]
            ],
            " 坐标轴组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "geom.md"
              },
              [
                "code",
                "<Geom/>"
              ]
            ],
            " 几何标记组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "legend.md"
              },
              [
                "code",
                "<Legend/>"
              ]
            ],
            " 图例组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "tooltip.md"
              },
              [
                "code",
                "<Tooltip/>"
              ]
            ],
            " 提示框组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "guide.md"
              },
              [
                "code",
                "<Guide/>"
              ]
            ],
            " 辅助标记组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "facet.md"
              },
              [
                "code",
                "<Facet/>"
              ]
            ],
            " 分面组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View/>"
              ]
            ],
            " 视图组件"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart height={400} data={dv} scale={cols} forceFit>\n  <Axis name=\"month\" />\n  <Axis name=\"temperature\" label={{formatter: val => `${val}°C`}}/>\n  <Tooltip crosshairs={{type : \"y\"}}/>\n  <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\n  <Geom type='point' position=\"month*temperature\" size={4} shape={'circle'} color={'city'} style={{ stroke: '#fff', lineWidth: 1}} />\n</Chart>"
        ]
      ],
      [
        "p",
        [
          "a",
          {
            "title": null,
            "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=/demo/line/series"
          },
          "在线编辑"
        ]
      ],
      [
        "h2",
        "图表布局"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://img.alicdn.com/tfs/TB1G7_0bOqAXuNjy1XdXXaYcVXa-1148-542.png",
            "alt": "e9d103b3-1707-446e-b5fe-b535f7048c8b.png"
          }
        ],
        "\n",
        [
          "code",
          "有时候坐标轴、图例等绘图区域外的组件显示不全时，可以通过调整图表各个方向的 padding 来调整最终效果"
        ]
      ],
      [
        "h2",
        "API"
      ],
      [
        "h3",
        "1、forceFit\t\t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "图表的宽度自适应开关，默认为 false，设置为 true 时表示自动取 dom（实例容器）的宽度。"
      ],
      [
        "h3",
        "2、width\t\t",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "指定图表的宽度，默认单位为 'px'，当 ",
        [
          "em",
          "forceFit: true"
        ],
        " 是宽度不生效。"
      ],
      [
        "h3",
        "3、height\t\t",
        [
          "em",
          " Number(必填) "
        ]
      ],
      [
        "p",
        "指定图表的高度，单位为 'px'。"
      ],
      [
        "blockquote",
        [
          "p",
          "宽和高未指定时，默认为 500px"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "data"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "4、data\t",
        [
          "em",
          " Array/DataSet "
        ]
      ],
      [
        "p",
        "设置图表的数据源，",
        [
          "code",
          "data"
        ],
        " 是一个包含 JSON 对象的数组或者 DataSet.View 对象。\n具体参见 ",
        [
          "a",
          {
            "title": null,
            "href": "../tutorial/data.md"
          },
          "数据"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "scale"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "5、scale\t\t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "配置数据比例尺，该配置会影响数据在图表中的展示方式。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const scale = {\n  'sales': {\n    type: 'identity' | 'linear' | 'cat' | 'time' | 'timeCat' | 'log' | 'pow', // 指定数据类型\n    alias: string, // 数据字段的别名\n    formatter: () => {}, // 格式化文本内容\n    range: array, // 输出数据的范围，默认[0, 1]，格式为 [min, max]，min 和 max 均为 0 至 1 范围的数据。\n    tickCount: number, // 设置坐标轴上刻度点的个数\n    ticks: array, // 用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示\n    sync: boolean // 当 chart 存在不同数据源的 view 时，用于统一相同数据属性的值域范围\n  }\n};\n<Chart data={data} scale={scale} />"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "!注意：除了以上属性外，不同的 type 还对应有各自的可配置属性，详见 ",
          [
            "a",
            {
              "title": null,
              "href": "./scale.md"
            },
            "Scale 度量 API"
          ],
          ";"
        ]
      ],
      [
        "h3",
        "6、placeholder\t\t",
        [
          "em",
          " string "
        ]
      ],
      [
        "p",
        "图表source为空时显示的内容，未设置该属性时为G2 默认样式。",
        [
          "code",
          "<Chart placeholder />"
        ],
        " 则为Bizcharts 定义的无数据提示。\n默认值:  ",
        [
          "code",
          "<div style={{ position: 'relative', top: '48%', textAlign: 'center' }}>暂无数据</div>"
        ],
        " ;会在图表区域的中间显示 \"暂无数据\" 。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "padding"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "7、padding\t\t",
        [
          "em",
          " Object | Number | Array "
        ]
      ],
      [
        "p",
        "图表内边距。\n有如下配置格式。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//有时候坐标轴、图例等绘图区域外的组件显示不全时，可以通过调整图表各个方向的 padding 来调整最终效果\n<Chart padding={[ 20, 30, 20, 30]} />\n<Chart padding={20} />\n<Chart padding={{ top: 20, right: 30, bottom: 20, left: 30 }} />\n<Chart padding=\"auto\" />\n<Chart padding={[20, 'auto', 30, 'auto']} />\n<Chart padding={['20%', '30%']} />"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "padding 为数字以及数组类型时使用方法同 CSS 盒模型。"
          ]
        ],
        [
          "li",
          [
            "p",
            "padding 中存在 'auto'，时会自动计算边框，目前仅考虑 axis 和 legend 占用的边框。"
          ]
        ],
        [
          "li",
          [
            "p",
            "另外也支持设置百分比，如 padding: ",
            [
              "span",
              " '20%', '30%' "
            ],
            "，该百分比相对于整个图表的宽高。"
          ]
        ],
        [
          "li",
          [
            "p",
            "padding 为数字以及数组类型时使用方法同 CSS 盒模型。"
          ]
        ],
        [
          "li",
          [
            "p",
            "padding 中存在 'auto'，时会自动计算边框，目前仅考虑 axis 和 legend 占用的边框。"
          ]
        ]
      ],
      [
        "h3",
        "8、animate\t\t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "图表动画开关，默认为 true，即开启动画。"
      ],
      [
        "h3",
        "9、background\t\t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "设置图表整体的边框和背景样式，是一个对象，包含如下属性："
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式有\n{\n  fill: string, // 图表背景色\n  fillOpacity: number, // 图表背景透明度\n  stroke: string, // 图表边框颜色\n  strokeOpacity: number, // 图表边框透明度\n  opacity: number, // 图表整体透明度\n  lineWidth: number, // 图表边框粗度\n  radius: number // 图表圆角大小\n}"
        ]
      ],
      [
        "h3",
        "10、plotBackground\t\t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "图表绘图区域的边框和背景样式，是一个对象，包含如下属性："
      ],
      [
        "pre",
        {
          "lang": "javascript"
        },
        [
          "code",
          "//可配置样式有\n{\n  fill: string, // 图表背景色\n  fillOpacity: number, // 图表背景透明度\n  stroke: string, // 图表边框颜色\n  strokeOpacity: number, // 图表边框透明度\n  opacity: number, // 图表整体透明度\n  lineWidth: number, // 图表边框粗度\n  radius: number // 图表圆角大小\n}"
        ]
      ],
      [
        "h3",
        "11、pixelRatio   ",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "设置设备像素比，默认取浏览器的值 ",
        [
          "em",
          "window.devicePixelRatio"
        ],
        "。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "filter"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "12、filter   ",
        [
          "em",
          "Array"
        ]
      ],
      [
        "p",
        "过滤数据，如果存在对应的图例，则过滤掉的字段置灰。\nArray:[",
        [
          "span",
          "fieldString1, callback1"
        ],
        ", ",
        [
          "span",
          "fieldString2, callback2"
        ],
        "]"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart filter={[['x', (val) => {return val > 20;}]]}/>"
        ]
      ],
      [
        "h3",
        "13、className   ",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "设置图表最外层div的类名。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart className=\"chart1\" />"
        ]
      ],
      [
        "h3",
        "14、style   ",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "设置图表最外层div的样式。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const style={fontSize: '12'}\n<Chart style={style} />"
        ]
      ],
      [
        "h2",
        "事件属性"
      ],
      [
        "p",
        [
          "code",
          "<chart/>"
        ],
        "组件提供了各种事件，方便用户扩展交互。基本的事件用法如下："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<chart\n  onEvent={e => {\n    //do something\n  }}\n/>"
        ]
      ],
      [
        "p",
        "更新属性时，如果某事件不指定监听函数，表示删除该事件。"
      ],
      [
        "p",
        "下面列出了 ",
        [
          "code",
          "<chart/>"
        ],
        "支持的所有事件属性。"
      ],
      [
        "h3",
        "1、onGetG2Instance"
      ],
      [
        "p",
        "获取 chart 实例的回调。每当生成一个新 chart 时就会调用该函数，并以新生成的 chart 作为回调参数。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<chart\n  onGetG2Instance={g2Chart => {\n\tg2Chart.animate(false);\n\tconsole.log(g2Chart);\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "2、onPlotMove"
      ],
      [
        "p",
        "鼠标在绘图区域移动时触发，在图表的绘图区域外不触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "ev"
            ],
            " 表示事件触发时返回的对象，包含以下属性"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x：当前鼠标所在的画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y：当前鼠标所在的画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "target：canvas 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "toElement：当前 dom 元素；"
              ]
            ],
            [
              "li",
              [
                "p",
                "shape: 当前鼠标所在的 shape 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "views: Array，当前鼠标所在的视图。"
              ]
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<chart\n  onPlotMove={ev => {\n\tvar point = {\n\t  x: ev.x,\n\t  y: ev.y\n\t};\n\tvar items = chart.getTooltipItems(point);\n\tconsole.log(items);\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "3、onPlotEnter"
      ],
      [
        "p",
        "鼠标进入绘图区域时触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "ev"
            ],
            " 表示事件触发时返回的对象，包含以下属性"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x：当前鼠标所在的画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y：当前鼠标所在的画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "target：canvas 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "toElement：当前 dom 元素；"
              ]
            ],
            [
              "li",
              [
                "p",
                "views: Array，当前鼠标所在的视图。"
              ]
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<chart\n  onPlotEnter={ev => {\n\tvar point = {\n\t  x: ev.x,\n\t  y: ev.y\n\t};\n\tvar items = chart.getTooltipItems(point);\n\tconsole.log(items);\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "4、onPlotLeave"
      ],
      [
        "p",
        "当鼠标移出绘图区域时触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "ev"
            ],
            " 表示事件触发时返回的对象，包含以下属性"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x：当前鼠标所在的画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y：当前鼠标所在的画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "target：canvas 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "toElement：当前 dom 元素；"
              ]
            ],
            [
              "li",
              [
                "p",
                "views: Array，当前鼠标所在的视图。"
              ]
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<chart\n  onPlotEnter={ev => {\n\tvar point = {\n\t  x: ev.x,\n\t  y: ev.y\n\t};\n\tvar items = chart.getTooltipItems(point);\n\tconsole.log(items);\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "5、onPlotClick"
      ],
      [
        "p",
        "鼠标点击绘图区域时触发的事件。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "ev"
            ],
            " 表示事件触发时返回的对象，包含以下属性"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x：当前鼠标所在的画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y：当前鼠标所在的画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "target：canvas 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "toElement：当前 dom 元素；"
              ]
            ],
            [
              "li",
              [
                "p",
                "views: Array，当前鼠标所在的视图；"
              ]
            ],
            [
              "li",
              [
                "p",
                "shape：点击的图表 shape，可能为空；"
              ]
            ],
            [
              "li",
              [
                "p",
                "data：选中图形代表的数据，可能为空；"
              ]
            ],
            [
              "li",
              [
                "p",
                "geom：选中的图形，可能为空。"
              ]
            ]
          ]
        ]
      ],
      [
        "h3",
        "6、onPlotDblClick"
      ],
      [
        "p",
        "鼠标双击绘图区域时触发的事件。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "ev"
            ],
            ": 事件触发时返回的对象，包含以下属性"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x：当前鼠标所在的画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y：当前鼠标所在的画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "target：canvas 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "toElement：当前 dom 元素；"
              ]
            ],
            [
              "li",
              [
                "p",
                "views: Array，当前鼠标所在的视图；"
              ]
            ],
            [
              "li",
              [
                "p",
                "shape：点击的图表 shape，可能为空；"
              ]
            ],
            [
              "li",
              [
                "p",
                "data：选中图形代表的数据，可能为空；"
              ]
            ],
            [
              "li",
              [
                "p",
                "geom：选中的图形，可能为空。"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "onTooltipChange"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "7、onTooltipChange"
      ],
      [
        "p",
        "tooltip 信息更新改变的时候触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "ev：事件触发时返回的对象，包含以下属性："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "tooltip: 当前生成的 tooltip 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "x: 画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y: 画布上的 y 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "items: 当前 tooltip 中的数据项。"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        "可以通过该事件回调函数，改变 items 中的内容来动态调整 tooltip 的显示内容。\n示例代码:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart\n  onTooltipChange={(ev)=>{\n    var items = ev.items; // tooltip显示的项\n\tvar origin = items[0]; // 将一条数据改成多条数据\n\tvar range = origin.point._origin.range;\n\titems.splice(0); // 清空\n\titems.push({\n\t  name: '开始值',\n\t  title: origin.title,\n\t  marker: true,\n\t  color: origin.color,\n\t  value: range[0]\n\t});\n\titems.push({\n\t  name: '结束值',\n\t  marker: true,\n\t  title: origin.title,\n\t  color: origin.color,\n\t  value: range[1]\n\t});\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "8、onTooltipShow"
      ],
      [
        "p",
        "tooltip 显示时触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "ev：事件触发时返回的对象，包含以下属性："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "tooltip: 当前生成的 tooltip 对象；"
              ]
            ],
            [
              "li",
              [
                "p",
                "x: 画布上的 x 坐标；"
              ]
            ],
            [
              "li",
              [
                "p",
                "y: 画布上的 y 坐标。"
              ]
            ]
          ]
        ]
      ],
      [
        "h3",
        "9、onTooltipHide"
      ],
      [
        "p",
        "tooltip 隐藏或者消失时触发。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "ev：事件触发时返回的对象，包含以下属性："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "tooltip: 当前生成的 tooltip 对象。"
              ]
            ]
          ]
        ]
      ],
      [
        "h3",
        "10、图形元素事件"
      ],
      [
        "p",
        "图形元素事件属性名 = on + 图形元素名称 + 基础事件名。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "图形元素名称有："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": null
        },
        [
          "code",
          "Point, Area, Line, Path, Interval, Schema, Polygon, Edage, AxisTitle, AxisLabel, AxisTicks, AxisLine, AxisGrid, LegendTitle, LegendItem, LegendMarker, LegendText, GuideText, GuideLine, GuideRegion, GuideImage, Label"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "基础事件名有:"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": null
        },
        [
          "code",
          "Mouseenter, Mousemove, Mouseleave, Click, Dblclick, Mousedown, Mouseup, Touchstart, Touchmove, Touchend"
        ]
      ],
      [
        "p",
        "代码示例："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart onPointMouseenter={function(ev){//some code}}/>"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          [
            "a",
            {
              "title": null,
              "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/series"
            },
            "在线DEMO"
          ]
        ]
      ]
    ]
  },
  {
    "filename": "api/connector.md",
    "path": "api/connector",
    "jsonml": [
      "article",
      [
        "h1",
        "Connector 数据接入"
      ],
      [
        "p",
        "一个数据视图（DataSet.View）实例在接入数据时就会用到 Connector，其语法如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(data, {\n  type: connectorName,\n  ...otherOptions\n});"
        ]
      ],
      [
        "p",
        "举个例子："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const testCSV = `Expt,Run,Speed\n 1,1,850\n 1,2,740\n 1,3,900\n 1,4,1070`;\n\nconst dv = new DataSet.View().source(testCSV, {\n  type: 'csv'\n});\n\nconsole.log(dv.rows);\n/*\n * dv.rows:\n * [\n *   {Expt: \" 1\", Run: \"1\", Speed: \"850\"}\n *   {Expt: \" 1\", Run: \"2\", Speed: \"740\"}\n *   {Expt: \" 1\", Run: \"3\", Speed: \"900\"}\n *   {Expt: \" 1\", Run: \"4\", Speed: \"1070\"}\n * ]\n */"
        ]
      ],
      [
        "p",
        "上述代码中，数据视图实例 ",
        [
          "code",
          "dv"
        ],
        " 使用 ",
        [
          "code",
          "csv"
        ],
        " 类型的 Connector 载入了一段 CSV 文本。"
      ],
      [
        "p",
        "目前 DataSet 支持以下几种常用的 Connector："
      ],
      [
        "h2",
        "default 默认"
      ],
      [
        "p",
        "直接调用 ",
        [
          "code",
          "dv.source(data)"
        ],
        "，不通过配置项指定使用的 Connector 时，则有以下两种默认的情形："
      ],
      [
        "p",
        "第一种，data 传入的是具体数组数据，那么"
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.rows = deepClone(data);"
        ]
      ],
      [
        "p",
        "第二种，data 传入的是另一个 DataView 的实例或者实例的名称，那么"
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.rows = deepClone(ds.getView(otherDv).rows);"
        ]
      ],
      [
        "h2",
        "dsv"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(dsvStr, {\n  type: 'dsv',   // 指定使用dsv connector\n  delimiter: '|' // 指定分隔符\n})"
        ]
      ],
      [
        "h2",
        "csv"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(csvStr, {\n  type: 'csv',   // 指定使用dsv connector\n  delimiter: ',' // 指定分隔符\n})"
        ]
      ],
      [
        "h2",
        "tsv"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(tsvStr, {\n  type: 'tsv' // 指定使用tsv connector\n})"
        ]
      ],
      [
        "h2",
        "GeoJSON"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(geojsonData, {\n  type: 'GeoJSON', // 别名 geo / geojson\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "dv.dataType 会被更改为 'geo'，从而 dv 可以执行一些 Geo 相关的实例方法。"
        ]
      ],
      [
        "h2",
        "TopoJSON"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(topojsonData, {\n  type: 'TopoJSON', // 别名 topojson\n  object: 'xxx'     // TopoJSON 相当于多个 GeoJSON 合并起来做了压缩，其中每一个 object 都相当于一份 GeoJSON 数据，指定 object 就是从中提取一份 Geo 数据\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "dv.dataType 会被更改为 'geo'，从而 dv 可以执行一些 Geo 相关的实例方法。"
        ]
      ],
      [
        "h2",
        "hierarchy"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(tree, {\n  type: 'hierarchy',        // 别名 tree\n  children: d => d.children // 可选，函数，返回子树\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "dv.dataType 会被变更为 'hierarchy' ，从而 dv 可以执行一些树形结构相关的实例方法和 Transform。"
        ],
        [
          "p",
          "dv.root 为根节点"
        ]
      ],
      [
        "h2",
        "graph"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.source(graph, {\n  type: 'graph',\n  nodes: d => d.nodes, // 节点集对应字段\n  edges: d => d.edges  // 边集对应字段\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "dv.dataType 会被变更为 'graph'，从而 dv 可以执行图相关的实例方法和 Transform。"
        ]
      ]
    ]
  },
  {
    "filename": "api/coord.md",
    "path": "api/coord",
    "jsonml": [
      "article",
      [
        "h1",
        "Coord"
      ],
      [
        "p",
        "坐标系组件。\n坐标系是将两种位置标度结合在一起组成的 2 维定位系统，描述了数据是如何映射到图形所在的平面。BizCharts 将坐标系抽象为组件，并且包含两种类型坐标系极坐标系（polar、theta、helix 均属于极坐标）和笛卡尔坐标系，目前所有的坐标系均是 2 维的。"
      ],
      [
        "h2",
        "Parent Component"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "chart.md"
              },
              [
                "code",
                "<Chart />"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View />"
              ]
            ]
          ]
        ]
      ],
      [
        "h2",
        "Child Component"
      ],
      [
        "p",
        " ",
        [
          "coord"
        ],
        " 组件下不能嵌套其他图表组件。"
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "Coord组件用来描述图表中各元素绘制时所处的坐标系，一般一个图表中只存在一个坐标系；但是",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View />"
              ]
            ],
            "中可以有独立坐标系存在；若没有特别说明，则默认当前图表的坐标系为",
            [
              "strong",
              "直角坐标系（rect）"
            ],
            "。"
          ]
        ],
        [
          "li",
          [
            "p",
            "默认采用笛卡尔坐标系，若要改变坐标系可以通过",
            [
              "a",
              {
                "title": null,
                "href": "#type"
              },
              "type"
            ],
            "属性改变。"
          ]
        ]
      ],
      [
        "p",
        "例如下图展示的层叠柱状图，在不同坐标系下就变换成了其他的图表类型："
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/fd9ba64b-b569-4c1d-acb9-d4dad3500258/attach/2378/44af7b435f0d3f88/image.png",
            "alt": "image"
          }
        ]
      ],
      [
        "p",
        "上图左侧为层叠柱状图，中间的饼图则是层叠柱状图在极坐标下对 x y 两个坐标轴进行转置后的结果，其中 x 轴被映射为半径，y 轴被映射成了角度。而最右边的牛眼图则相反，y 轴映射为半径。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "极坐标默认的起始角度和结束角度如下图所示：\n",
            [
              "img",
              {
                "src": "https://zos.alipayobjects.com/skylark/85950a42-9579-44cb-b656-8dd28c9a014a/attach/2378/d648679184c6977c/image.png",
                "width": "214px"
              }
            ]
          ]
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "type"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "1、type \t",
        [
          "em",
          " String "
        ]
      ],
      [
        "p",
        "坐标系类型;不同类型的坐标系所支持的配置属性也不一样。具体见各类型属性说明。"
      ],
      [
        "p",
        "BizCharts 中支持的坐标系有："
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "类型"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#rect"
                },
                "rect"
              ]
            ],
            [
              "td",
              "默认类型，直角坐标系，由 x, y 两个垂直的维度构成。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#polar"
                },
                "polar"
              ]
            ],
            [
              "td",
              "极坐标系，由角度和半径 2 个维度构成。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#theta"
                },
                "theta"
              ]
            ],
            [
              "td",
              "一种半径固定的极坐标系，常用于饼图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#helix"
                },
                "helix"
              ]
            ],
            [
              "td",
              "螺旋坐标系，基于阿基米德螺旋线。"
            ]
          ]
        ]
      ],
      [
        "h3",
        "2、rotate \t  ",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "坐标系旋转，angle 表示旋转的度数，单位为角度。"
      ],
      [
        "h3",
        "3、scale \t  ",
        [
          "em",
          " Array "
        ]
      ],
      [
        "p",
        "放大、缩小，默认按照坐标系中心放大、缩小。\n参数为长度2的数组，第一个值代表 x 方向缩放比例，第二个值代表 y 方向缩放比例。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Coord scale={[0.7, 1.2]} />"
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/rmsportal/bAISlaEvIUpqIFVBiXKo.gif",
            "alt": "image"
          }
        ]
      ],
      [
        "h3",
        "4、reflect \t  ",
        [
          "em",
          " 'x' | 'y' | Array"
        ]
      ],
      [
        "p",
        "镜像, 沿 x 方向镜像或者沿 y 轴方向映射。默认值为：'y'.\n如果参赛是个数组，将依次调用.例如",
        [
          "span",
          "'x', 'y'"
        ],
        " 则先执行x方向翻转",
        [
          "code",
          "reflect('x')"
        ],
        " 再执行y方向翻转",
        [
          "code",
          "reflect('y')"
        ],
        ",以此类推。\n",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/3e02d865-fcfc-4afd-9ffa-66a1299b31b5/attach/2378/4225fd7483f54155/image.png",
            "alt": "image"
          }
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "rect"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "直角坐标系（rect）"
      ],
      [
        "p",
        "无额外配置参数。"
      ],
      [
        "h2",
        "极坐标系（polar/theta/clock/gauge）"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://img.alicdn.com/tfs/TB1nBh1vHSYBuNjSspiXXXNzpXa-1200-280.png",
            "alt": "5.png"
          }
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "polar"
          }
        ],
        [
          ""
        ],
        "\n",
        [
          "span",
          {
            "id": "theta"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        [
          "code",
          "polar"
        ],
        "、",
        [
          "code",
          "theta"
        ],
        "类型的极坐标系，其可配置的参数如下："
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "radius"
            ],
            [
              "td",
              "设置半径，值为 0 至 1 的小数"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "innerRadius"
            ],
            [
              "td",
              "内部极坐标系的半径，",
              [
                "span",
                "0 - 1"
              ],
              "的小数"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "startAngle"
            ],
            [
              "td",
              "起始角度(弧度), 整个极坐标系开始的弧度值"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "endAngle"
            ],
            [
              "td",
              "结束角度(弧度),整个极坐标系结束的弧度值"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//polar 示例\n<coord type=\"polar\" radius={0.5} startAngle={-Math.PI / 6} endAngle={7 * Math.PI /6}/>"
        ]
      ],
      [
        "p",
        "效果如图：\n",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/YbxpoBRuIrNsaMNOCmcG.png",
            "width": "104px"
          }
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//theta 示例\n<coord type=\"theta\" innerRadius={0.5}/>"
        ]
      ],
      [
        "p",
        "效果如图：\n",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/xQxbzqQTjELOvrKSFEkh.png",
            "width": "100px"
          }
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "gauge"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        [
          "code",
          "gauge"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "startAngle"
            ],
            [
              "td",
              "起始角度（弧度）"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "endAngle"
            ],
            [
              "td",
              "结束角度（弧度）"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "clock"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        [
          "code",
          "clock"
        ]
      ],
      [
        "p",
        "无额外配置属性。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "// 这里只显示部分核心代码\n<Chart width={600} height={400} data={val} scale={cols} padding={100}>\n\t<Coord type='gauge' startAngle={-9/8 * Math.PI} endAngle={1/8 * Math.PI} />\n\t<Axis name=\"value\" />\n\t<Geom type=\"point\" position=\"value\" />\n</Chart>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "map"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "地理坐标系（map）"
      ],
      [
        "blockquote",
        [
          "p",
          "地理坐标系，支持不同类型的地理投影。"
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://os.alipayobjects.com/s/prod/antv/static/images/g2/10-map/world-albers-df1c49630c8e60fdd3cecdbff2705e0f.png",
            "alt": null
          }
        ]
      ],
      [
        "p",
        "对于 ",
        [
          "code",
          "map"
        ],
        " 类型的坐标系，情况比较特殊，对于不同的投影支持的可配置属性不同。如下所示："
      ],
      [
        "blockquote",
        [
          "p",
          "适用于中国地图的 albers 投影"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "projection"
            ],
            [
              "td",
              "指定投影方法"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "albers"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "basic"
            ],
            [
              "td",
              "指定投影方法的基本参数，",
              [
                "span",
                "λ0, φ0, φ1, φ2"
              ],
              " 分别表示中央经度、坐标起始纬度、第一标准纬度、第二标准纬度度"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "110, 0, 25, 47"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "指定投影后最大的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "16.573, -13.613"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "指定投影后最小的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "-27.187, -49.739"
              ]
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "适用于世界地图的 albers 投影"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "projection"
            ],
            [
              "td",
              "指定投影方法"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "albers"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "basic"
            ],
            [
              "td",
              "指定投影方法的基本参数，",
              [
                "span",
                "λ0, φ0, φ1, φ2"
              ],
              " 分别表示中央经度、坐标起始纬度、第一标准纬度、第二标准纬度度"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "0, 0, 0, 60"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "指定投影后最大的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "161.89, 120.635"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "指定投影后最小的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "-144.485, -27.666"
              ]
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "适用与中国地图的 mercator 投影"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "projection"
            ],
            [
              "td",
              "指定投影方法"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "mercator"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "指定投影后最大的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "161.89, 120.635"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "指定投影后最小的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "-144.485, -27.666"
              ]
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "适用于世界地图的 mercator 投影"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "projection"
            ],
            [
              "td",
              "指定投影方法"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "mercator"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "指定投影后最大的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "134.77, 63.68"
              ]
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "指定投影后最小的坐标点"
            ],
            [
              "td",
              "Array"
            ],
            [
              "td",
              [
                "span",
                "73.60, 18.48"
              ]
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "helix"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "螺旋坐标系（helix）"
      ],
      [
        "blockquote",
        [
          "p",
          "螺旋坐标系，常用于周期性数据。"
        ]
      ],
      [
        "p",
        "对于螺旋坐标系，其可配置的参数如下："
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "可选值"
            ],
            [
              "th",
              "默认值"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "radius"
            ],
            [
              "td",
              "设置半径，值为 0 至 1 的小数"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "startAngle"
            ],
            [
              "td",
              "螺旋线起点弧度"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ],
          [
            "tr",
            [
              "td",
              "endAngle"
            ],
            [
              "td",
              "螺线线终点弧度"
            ],
            [
              "td",
              "Number"
            ],
            [
              "td"
            ],
            [
              "td"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//示例\n<Coord type=\"helix\" startAngle={0.5 * Math.PI} endAngle={12.5 * Math.PI} radius={0.8}/>"
        ]
      ],
      [
        "p",
        "效果如图：\n",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/EWHCatHynDfQTPByyfVp.png",
            "width": "140px"
          }
        ]
      ]
    ]
  },
  {
    "filename": "api/dataset.md",
    "path": "api/dataset",
    "jsonml": [
      "article",
      [
        "h1",
        "DataSet"
      ],
      [
        "p",
        "全局命名空间 ",
        [
          "code",
          "DataSet"
        ],
        "，同时也是数据集类的构造函数。"
      ],
      [
        "h2",
        "常量 Constants"
      ],
      [
        "h3",
        "DataSet.CONSTANTS"
      ],
      [
        "p",
        "常量，譬如 ",
        [
          "code",
          "DataSet.HIERARCHY"
        ],
        " 是树形结构的名称。"
      ],
      [
        "h3",
        "DataSet.connectors"
      ],
      [
        "p",
        "存储已注册的 Connector（key-value 对）。"
      ],
      [
        "h3",
        "DataSet.transforms"
      ],
      [
        "p",
        "存储已注册的 Transform（key-value 对）。"
      ],
      [
        "h2",
        "类 Classes"
      ],
      [
        "h3",
        "DataSet"
      ],
      [
        "p",
        "数据集构造函数。"
      ],
      [
        "h4",
        "new DataSet()"
      ],
      [
        "p",
        [
          "code",
          "new DataSet(options = {})"
        ],
        " 创建并返回 DataSet 实例。具体参数见示例代码。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "options"
            ],
            [
              "td",
              "Object"
            ],
            [
              "td",
              "是"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const ds = new DataSet({\n  state: { // 指定初始化状态量\n    foo: 'bar'\n  }\n});"
        ]
      ],
      [
        "h4",
        "ds.isDataSet"
      ],
      [
        "p",
        "判断是否是 DataSet 时使用，",
        [
          "code",
          "ds.isDataSet === true"
        ]
      ],
      [
        "h4",
        "ds.views"
      ],
      [
        "p",
        "存储所有挂在数据集上的数据视图（key-value对）。"
      ],
      [
        "h4",
        "ds.state"
      ],
      [
        "p",
        "存储数据集上的状态量（key-value对）。"
      ],
      [
        "h4",
        "ds.createView()"
      ],
      [
        "blockquote",
        [
          "p",
          "alias ds.view()"
        ]
      ],
      [
        "p",
        [
          "code",
          "ds.createView([name, ]options = {})"
        ],
        " 创建并返回一个数据视图实例。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "是"
            ]
          ],
          [
            "tr",
            [
              "td",
              "options"
            ],
            [
              "td",
              "Object"
            ],
            [
              "td",
              "是"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const dv0 = ds.createView();\nconst dv1 = ds.createView('foo');\nconst dv2 = ds.createView('bar', {\n  watchingStates: [ 'fakeState' ]\n});"
        ]
      ],
      [
        "h5",
        "options.watchingStates"
      ],
      [
        "p",
        "创建数据视图实例时，传入的 ",
        [
          "code",
          "watchingStates"
        ],
        " 是用于指定该数据视图监听的 ",
        [
          "code",
          "states"
        ],
        " 状态量的。默认监听所有状态量（也就是任何状态量变更都会导致数据视图重新计算），如果指定为空数组 ",
        [
          "code",
          "[]"
        ],
        "，则不监听任何状态量，如果指定为非空数组，则只监听数组元素对应的状态量变更。"
      ],
      [
        "h4",
        "ds.getView()"
      ],
      [
        "p",
        [
          "code",
          "ds.getView(name)"
        ],
        " 返回 name 对应的数据视图实例。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const dv = ds.getView('foo');"
        ]
      ],
      [
        "h4",
        "ds.setView()"
      ],
      [
        "p",
        [
          "code",
          "ds.setView(name, dv)"
        ],
        " 设置 name 对应的数据视图实例为 dv。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "dv"
            ],
            [
              "td",
              "DataSet.View"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "ds.setView('foo', new DataSet.View());"
        ]
      ],
      [
        "h4",
        "ds.setState()"
      ],
      [
        "p",
        [
          "code",
          "ds.setState(name, value)"
        ],
        " 设置状态量 name 的值为 value。"
      ],
      [
        "blockquote",
        [
          "p",
          "注意！这个操作会使得关联了状态量 name 的数据视图对象重新执行所有数据处理流程。这个接口为数据集合上挂载的数据视图之间提供了通信通道。"
        ],
        [
          "p",
          "注意！更改状态量必须调用这个接口，而不能直接用 ",
          [
            "code",
            "ds.state.xxx = 'yyy'"
          ],
          " 这种方式。"
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "value"
            ],
            [
              "td",
              "Any"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "ds.setState('foo', 'bar');"
        ]
      ],
      [
        "h4",
        "ds.on()"
      ],
      [
        "p",
        [
          "code",
          "ds.on(name, callback)"
        ],
        " 监听数据集上的 name 事件。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "callback"
            ],
            [
              "td",
              "Function"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "p",
        "目前支持的事件有"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "statechange"
            ],
            " 状态量变化事件，在调用 ",
            [
              "code",
              "setState()"
            ],
            " 方法后触发。"
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "注意！这个事件在状态量改变后不是同步触发的，而是在 setState 被调用后",
          [
            "strong",
            "异步触发"
          ],
          "的。"
        ],
        [
          "p",
          "目前搜索监听了某个 state 值的数据视图自动监听这个事件。"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "ds.on('statechange', (name, value) => {\n  console.log(`state ${name}'s value has been changed to ${value}!`)\n});"
        ]
      ],
      [
        "h4",
        "ds.emit()"
      ],
      [
        "p",
        [
          "code",
          "ds.emit(name, ..params)"
        ],
        " 手动触发数据集上的 name 事件。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "params"
            ],
            [
              "td",
              "Arguments"
            ],
            [
              "td",
              "是"
            ]
          ]
        ]
      ],
      [
        "p",
        "目前支持的事件有"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "statechange"
            ],
            " 状态量变化事件，触发后状态量关联的数据视图会重新执行所有数据处理流程。"
          ]
        ]
      ],
      [
        "h3",
        "DataSet.View"
      ],
      [
        "blockquote",
        [
          "p",
          "alias DataSet.DataView"
        ]
      ],
      [
        "p",
        "数据视图构造函数。"
      ],
      [
        "h4",
        "new View()"
      ],
      [
        "p",
        [
          "code",
          "const dv = new DataSet.View(ds, options = {})"
        ],
        " 创建并返回数据视图实例，具体参数见代码。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "ds"
            ],
            [
              "td",
              "DataSet"
            ],
            [
              "td",
              "是"
            ]
          ],
          [
            "tr",
            [
              "td",
              "options"
            ],
            [
              "td",
              "Object"
            ],
            [
              "td",
              "是"
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const dv0 = new DataSet.View();\nconst dv1 = new DataSet.View(ds, {\n  watchingStates: [ 'foo' ] // 监听 `foo` 状态量变化，默认监听 ds 上的所有状态量\n});"
        ]
      ],
      [
        "h4",
        "dv.isView"
      ],
      [
        "blockquote",
        [
          "p",
          "alias dv.isDataView"
        ]
      ],
      [
        "h4",
        "dv.loose"
      ],
      [
        "p",
        "是否关联了数据集。",
        [
          "code",
          "ds.createView()"
        ],
        "方式创建的数据视图实例为 ",
        [
          "code",
          "false"
        ],
        "，",
        [
          "code",
          "new DataSet.View(options)"
        ],
        " 方式创建的则为 ",
        [
          "code",
          "true"
        ],
        "。"
      ],
      [
        "h4",
        "dv.dataType"
      ],
      [
        "p",
        "数据类型，默认为 ",
        [
          "code",
          "DataSet.TABLE"
        ],
        "，可选值有：",
        [
          "code",
          "DataSet.TABLE"
        ],
        "（普通二维数据），",
        [
          "code",
          "DataSet.GEO"
        ],
        "（地理数据）， ",
        [
          "code",
          "DataSet.HIERARCHY"
        ],
        "（树结构数据），和",
        [
          "code",
          "DataSet.GRAPH"
        ],
        "（图数据）。"
      ],
      [
        "h4",
        "dv.origin"
      ],
      [
        "p",
        "存储原始数据。"
      ],
      [
        "h4",
        "dv.rows"
      ],
      [
        "p",
        "存储处理后的数据。"
      ],
      [
        "h4",
        "dv.transforms"
      ],
      [
        "p",
        "存储已应用的 transform（数组）。"
      ],
      [
        "h4",
        "dv.source()"
      ],
      [
        "p",
        [
          "code",
          "dv.source(data, options)"
        ],
        " 载入数据。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "data"
            ],
            [
              "td",
              "String / Array / Object / DataView"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "options"
            ],
            [
              "td",
              "Object"
            ],
            [
              "td",
              "是"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "code",
          "data"
        ],
        " 是原始数据，可能是字符串，也可能是数组、对象，或者另一个数据视图实例。",
        [
          "code",
          "options"
        ],
        " 里指定了载入数据使用的 ",
        [
          "code",
          "connector"
        ],
        " 和载入时使用的配置项。"
      ],
      [
        "p",
        "详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "./connector.html"
          },
          "Connector API"
        ]
      ],
      [
        "h4",
        "dv.transform()"
      ],
      [
        "p",
        [
          "code",
          "dv.transform(options)"
        ],
        " 执行数据处理数据。执行完这个函数后，transform会被"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "options"
            ],
            [
              "td",
              "Object"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "code",
          "options"
        ],
        " 里指定了处理数据使用的 ",
        [
          "code",
          "transform"
        ],
        " 和数据处理的配置项。"
      ],
      [
        "p",
        "详细文档见 ",
        [
          "a",
          {
            "title": null,
            "href": "./transform.html"
          },
          "Transform API"
        ]
      ],
      [
        "h2",
        "方法 Functions"
      ],
      [
        "h3",
        "DataSet.registerConnector()"
      ],
      [
        "p",
        [
          "code",
          "DataSet.registerConnector(name, callback)"
        ],
        " 注册一个数据连接函数，注册后所有数据视图都可以使用 ",
        [
          "code",
          "name"
        ],
        " 来引用这个数据连接函数，从而接入某种数据源。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "callback"
            ],
            [
              "td",
              "Function"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "code",
          "callback"
        ],
        " 接受两个参数：原始数据和配置项。返回值就是 DataView 实例所需要的数据。举个简单例子，如果要注册一个接入 CSV 数据的 Connector，则实现如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const _ = require('lodash');\nconst {\n  csvParse\n} = require('d3-dsv');\n\nDataSet.registerConnector('csv', (data, options = {}) => {\n  const delimiter = options.delimiter || ',';\n  if (!isString(delimiter)) {\n    throw new TypeError('Invalid delimiter: must be a string!');\n  }\n  return dsvFormat(delimiter).parse(str);\n});\n\nconst testCSV = `Expt,Run,Speed\n 1,1,850\n 1,2,740\n 1,3,900\n 1,4,1070`;\n\nconst dv = new DataSet.View().source(testCSV, {\n  type: 'csv'\n});\n\nconsole.log(dv.rows);\n/*\n * dv.rows:\n * [\n *   {Expt: \" 1\", Run: \"1\", Speed: \"850\"}\n *   {Expt: \" 1\", Run: \"2\", Speed: \"740\"}\n *   {Expt: \" 1\", Run: \"3\", Speed: \"900\"}\n *   {Expt: \" 1\", Run: \"4\", Speed: \"1070\"}\n * ]\n */"
        ]
      ],
      [
        "h3",
        "DataSet.getConnector()"
      ],
      [
        "p",
        [
          "code",
          "DataSet.getConnector(name)"
        ],
        " 返回 ",
        [
          "code",
          "name"
        ],
        " 对应的 Connector。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "h3",
        "DataSet.registerTransform()"
      ],
      [
        "p",
        [
          "code",
          "DataSet.registerTransform(name, callback)"
        ],
        " 注册一个数据处理函数，注册后所有数据视图都可以使用 ",
        [
          "code",
          "name"
        ],
        " 来引用这个数据处理函数，从而进行某种数据处理。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ],
          [
            "tr",
            [
              "td",
              "callback"
            ],
            [
              "td",
              "Function"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "code",
          "callback"
        ],
        " 接受两个参数：数据视图（DataSet.View）实例和配置项。举个简单例子，如果要注册一个过滤数据的 Transform，则实现如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "// 承接上述 Connector 的代码\nDataSet.registerTransform('filter', (dv, options = {}) => {\n  dv.rows = dv.rows.filter(options.callback || (row => !!row));\n});\n\ndv.transform({\n  type: 'filter',\n  callback(row) {\n    return row.Run !== \"1\";\n  }\n})\n\nconsole.log(dv.rows);\n/*\n * dv.rows:\n * [\n *   {Expt: \" 1\", Run: \"2\", Speed: \"740\"}\n *   {Expt: \" 1\", Run: \"3\", Speed: \"900\"}\n *   {Expt: \" 1\", Run: \"4\", Speed: \"1070\"}\n * ]\n */"
        ]
      ],
      [
        "h3",
        "DataSet.getTransform()"
      ],
      [
        "p",
        [
          "code",
          "DataSet.getTransform(name)"
        ],
        " 返回 ",
        [
          "code",
          "name"
        ],
        " 对应的 Transform。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "参数"
            ],
            [
              "th",
              "类型"
            ],
            [
              "th",
              "是否可选"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "name"
            ],
            [
              "td",
              "String"
            ],
            [
              "td",
              "否"
            ]
          ]
        ]
      ]
    ]
  },
  {
    "filename": "api/facet.md",
    "path": "api/facet",
    "jsonml": [
      "article",
      [
        "h1",
        "Facet"
      ],
      [
        "p",
        "分面组件，将一份数据按照某个维度分隔成若干子集，然后创建一个图表的矩阵，将每一个数据子集绘制到图形矩阵的窗格中，所有子图采用相同的图表类型，并进行了一定的设计，使得它们之间方便进行比较。"
      ],
      [
        "p",
        "总结起来，分面其实提供了两个功能："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "按照指定的维度划分数据集；"
          ]
        ],
        [
          "li",
          [
            "p",
            "对图表进行排版。"
          ]
        ]
      ],
      [
        "p",
        "对于探索型数据分析来说，分面是一个强大有力的工具，能帮你迅速地分析对比出数据各个子集模式的异同。"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://gw.alipayobjects.com/zos/rmsportal/HlUJdjfYCEeeOKsBREnp.png",
            "alt": "e68863a6-f139-444f-a800-75613046dcc4.png"
          }
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "shuoming"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "父组件"
      ],
      [
        "p",
        [
          "a",
          {
            "title": null,
            "href": "chart.md"
          },
          [
            "code",
            "<Chart />"
          ]
        ],
        " "
      ],
      [
        "h2",
        "子组件"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "3.1.x 版本开始",
            [
              "em",
              "不支持"
            ],
            " ",
            [
              "code",
              "<Facet />"
            ],
            "组件下嵌套函数。\n正式版将会支持如下写法(3.1.0-beta.1暂不支持)："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet>\n  <View>\n    <Geom />\n  </View>\n</Facet>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "3.0.x 版本允许 ",
            [
              "code",
              "<Facet />"
            ],
            " 组件下嵌套一个返回组件的匿名函数。参见如下"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet type='matrix' fields = {['cut','clarity']}>\n  //该匿名函数会转为 `eachView:function`\n  {(view, facet)=>{\n    if(facet.colIndex == 0){\n\t  return\n\t  <View data={facet.data}>\n\t\t<Axis visible={false} name='carat' />\n\t\t<Axis  name='price' />\n\t\t<Geom type=\"point\" position='carat*price' color='cut' />\n\t  </View>;\n\t} else\n\t{\n\treturn\n\t  <View data={facet.data}>\n\t    <Geom type=\"point\" position='carat*price' color='cut' />\n\t  </View>;\n\t}\n  }}\n</Facet>"
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "blockquote",
        [
          "p",
          "以下是 ",
          [
            "code",
            "<Facet/>"
          ],
          " 组件的通用属性，不同的类型可配置的属性有略微差别，具体见各个类型的分面说明。"
        ]
      ],
      [
        "h3",
        "1、type \t",
        [
          "em",
          " 'rect' | 'list' | 'circle' | 'tree' | 'mirror' "
        ]
      ],
      [
        "p",
        "分面类型。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "类型"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "链接"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "rect"
            ],
            [
              "td",
              "默认类型，指定 2 个维度作为行列，形成图表的矩阵。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#rect"
                },
                "参见rect"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "list"
            ],
            [
              "td",
              "指定一个维度，可以指定一行有几列，超出自动换行。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#list"
                },
                "参见list"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "circle"
            ],
            [
              "td",
              "指定一个维度，沿着圆分布。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#circle"
                },
                "参见circle"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "tree"
            ],
            [
              "td",
              "指定多个维度，每个维度作为树的一级，展开多层图表。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#tree"
                },
                "参见tree"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "mirror"
            ],
            [
              "td",
              "指定一个维度，形成镜像图表。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#mirror"
                },
                "参见mirror"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "matrix"
            ],
            [
              "td",
              "指定 2 个维度，形成矩阵分面图表。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#matrix"
                },
                "参见matrix"
              ]
            ]
          ]
        ]
      ],
      [
        "h3",
        "2、fields \t",
        [
          "em",
          " String | Array "
        ]
      ],
      [
        "p",
        "设定数据划分的维度，是数据的字段名，包含多个维度时使用数组传入。不同 ",
        [
          "code",
          "type"
        ],
        " 的分面可传入字段个数不同，详见",
        [
          "a",
          {
            "title": null,
            "href": "#facetType"
          },
          "分面类型说明"
        ],
        "。"
      ],
      [
        "h3",
        "3、padding \t",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "设置每个 view 之间的间距。",
        [
          "code",
          "padding"
        ],
        " 是view 的内部边距，所以不会影响布局。"
      ],
      [
        "h3",
        "4、showTitle \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "是否显示分面的标题，默认为 true，即展示。"
      ],
      [
        "h3",
        "5、autoSetAxis \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "是否自动设置坐标轴的文本，避免重复和遮挡，默认为 true，即自动设置。"
      ],
      [
        "h3",
        "6、colTitle \t",
        [
          "em",
          " Object | null "
        ]
      ],
      [
        "p",
        "分面列标题设置，可设置属性如下，如果属性值为 null，表示不展示列标题。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet\n  rowTitle={{\n\toffsetY: -15,\n\tstyle: {\n\tfontSize: 14,\n\ttextAlign: 'center',\n\tfill: '#444'\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "7、rowTitle \t",
        [
          "em",
          " Object | null "
        ]
      ],
      [
        "p",
        "分面行标题设置，可设置属性如下，如果属性值为 null，表示不展示列标题"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet\n  rowTitle={{\n\toffsetX: -15,\n\tstyle: {\n\tfontSize: 14,\n\ttextAlign: 'center',\n\tfill: '#444'\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "8、eachView \t",
        [
          "em",
          " Function "
        ]
      ],
      [
        "p",
        "facet 中每个 view 的配置。该属性比较特殊，可以直接等于一个函数，或者作为一个返回 View 的匿名函数嵌套在 ",
        [
          "code",
          "<Facet> Function <Facet>"
        ],
        " 组件中使用。\n代码如下，也可参见",
        [
          "a",
          {
            "title": null,
            "href": "#shuoming"
          },
          "使用说明"
        ],
        "。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet type='matrix' fields = {['cut','clarity']} eachView={(view, facet) => {\n  view.point().position('carat*price');\n}}／>"
        ]
      ],
      [
        "p",
        "!注意：",
        [
          "code",
          "showTitle"
        ],
        " 和 ",
        [
          "code",
          "autoSetAxis"
        ],
        " 用于控制分面的默认行为；",
        [
          "code",
          "colTitle"
        ],
        " 和 ",
        [
          "code",
          "rowTitle"
        ],
        " 是通过 ",
        [
          "code",
          "chart.guild().text()"
        ],
        " 来实现的，所以所有 ",
        [
          "code",
          "chart.guild().text()"
        ],
        " 的参数都生效。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "facetType"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h1",
        [
          "a",
          {
            "title": null,
            "href": "#facetType"
          },
          "分面类型"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "rect"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "rect 矩形分面"
      ],
      [
        "p",
        "rect 矩形分面是 BizCharts 的默认分面类型。支持按照一个或者两个维度的数据划分，按照先列后行的顺序。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Facet type='rect' fields = {['cut','clarity']}>\n  //该匿名函数会转为 `eachView:function` 属性\n  {(view, facet)=>{\n    view.point().position('carat*price').color('cut');\n  }}\n</Facet>"
        ]
      ],
      [
        "p",
        "分面矩阵每列按照 ",
        [
          "code",
          "cut"
        ],
        " 字段划分，每行按照 ",
        [
          "code",
          "clarity"
        ],
        " 字段划分。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "list"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "list 水平列表分面"
      ],
      [
        "p",
        "该类型分面可以通过设置 ",
        [
          "code",
          "scale"
        ],
        " 属性来指定每行可显示分面的个数，超出时会自动换行。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "circle"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "circle 圆形分面"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "tree"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "tree 树形分面"
      ],
      [
        "p",
        "提供了 ",
        [
          "code",
          "line"
        ],
        " 和 ",
        [
          "code",
          "lineSmooth"
        ],
        " 两个属性，用于配置连接各个分面的线的样式，其中："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "line，用于配置线的显示属性。"
          ]
        ],
        [
          "li",
          [
            "p",
            "lineSmooth，各个树节点的连接线是否是平滑的曲线，默认为 false。"
          ]
        ]
      ],
      [
        "p",
        "下图展示了树形多层级的分面。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "mirror"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "mirror 镜像分面"
      ],
      [
        "p",
        "通过配置 ",
        [
          "code",
          "transpose"
        ],
        " 属性为 true，可以将镜像分面翻转。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "matrix"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "matrix 矩阵分面"
      ]
    ]
  },
  {
    "filename": "api/geom.md",
    "path": "api/geom",
    "jsonml": [
      "article",
      [
        "h1",
        "Geom 几何标记"
      ],
      [
        "p",
        "几何标记对象，决定创建图表的类型，具体的概念介绍请参见 。"
      ],
      [
        "h2",
        "什么是几何标记"
      ],
      [
        "p",
        "即我们所说的点、线、面这些几何图形。BizCharts 中并没有特定的图表类型（柱状图、散点图、折线图等）的概念，用户可以单独绘制某一种类型的图表，如饼图，也可以绘制混合图表，比如折线图和柱状图的组合。"
      ],
      [
        "p",
        "BizCharts 生成的图表的类型，是由几何标记和坐标系共同决定的。可以通过下图直观得理解什么是几何标记：\n",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/ffXoDNzwnXNHoaxtjbfY.png",
            "style": "width: 75%;"
          }
        ]
      ],
      [
        "h2",
        "几何标记和图表类型"
      ],
      [
        "p",
        "虽然 BizCharts 没有特定的图表类型概念，",
        [
          "strong",
          "但是仍基本支持所有传统图表类型的绘制"
        ],
        "。"
      ],
      [
        "p",
        "下表展示了 BizCharts 中的 geom 几何标记类型和传统图表的对应关系，更多的图表详见 BizCharts 官网的 ",
        [
          "a",
          {
            "title": null,
            "href": "https://alibaba.github.io/BizCharts/demo.html"
          },
          "demo"
        ],
        "。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "geom 类型"
            ],
            [
              "th",
              "图表类型"
            ],
            [
              "th",
              "备注"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "point"
            ],
            [
              "td",
              "点图、折线图中的点"
            ],
            [
              "td",
              "点的形状有很多，也可以使用图片代表点",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/point/bubble"
                },
                "气泡图"
              ],
              "，同时点也可以在不同坐标系下显示，所以可以扩展出非常多的图表类型。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "path"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/other/path"
                },
                "路径图"
              ],
              "，地图上的路径"
            ],
            [
              "td",
              "路径图是无序的线图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "line"
            ],
            [
              "td",
              "折线图、曲线图、",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/line/step"
                },
                "阶梯线图"
              ]
            ],
            [
              "td",
              "在极坐标系下可以转换成雷达图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "area"
            ],
            [
              "td",
              "区域图（面积图）、层叠区域图、",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/area/range"
                },
                "区间区域图"
              ]
            ],
            [
              "td",
              "极坐标系下可用于绘制雷达区域图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "interval"
            ],
            [
              "td",
              "柱状图、直方图、南丁格尔玫瑰图、饼图、条形环图（玉缺图）、漏斗图等"
            ],
            [
              "td",
              "通过坐标系的转置、变化，可以生成各种常见的图表类型；所有的图表都可以进行层叠、分组。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "polygon"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/heatmap/heatmap"
                },
                "色块图（像素图）"
              ],
              "、",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/heatmap/image"
                },
                "热力图"
              ],
              "、",
              [
                "a",
                {
                  "title": null,
                  "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/map/china"
                },
                "地图"
              ]
            ],
            [
              "td",
              "多个点可以构成多边形。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "schema"
            ],
            [
              "td",
              "k 线图，箱型图"
            ],
            [
              "td",
              "自定义的图表类型。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "edge"
            ],
            [
              "td",
              "树图、流程图、关系图"
            ],
            [
              "td",
              "与点一起构建关系图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "heatmap"
            ],
            [
              "td",
              "热力图"
            ],
            [
              "td",
              "--"
            ]
          ]
        ]
      ],
      [
        "h2",
        "父组件"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "chart.md"
              },
              [
                "code",
                "<Chart />"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View />"
              ]
            ]
          ]
        ]
      ],
      [
        "h2",
        "子组件"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "label.md"
              },
              [
                "code",
                "<Label />"
              ]
            ]
          ]
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "blockquote",
        [
          "p",
          "更多",
          [
            "a",
            {
              "title": null,
              "href": "graphic.md"
            },
            "图形属性"
          ]
        ],
        [
          "h3",
          "1、type    ",
          [
            "em",
            " String "
          ]
        ],
        [
          "p",
          "几何标记类型，目前 BizCharts 支持的几何标记类型如下："
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "type"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              [
                "code",
                "point"
              ]
            ],
            [
              "td",
              "点，用于点图的构建。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "path"
              ]
            ],
            [
              "td",
              "路径，无序的点连接而成的一条线。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "line"
              ]
            ],
            [
              "td",
              "线，点按照 x 轴连接成一条线，构成线图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "area"
              ]
            ],
            [
              "td",
              "填充线图跟坐标系之间构成区域图，也可以指定上下范围。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "interval"
              ]
            ],
            [
              "td",
              "使用矩形或者弧形，用面积来表示大小关系的图形，一般构成柱状图、饼图等图表。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "polygon"
              ]
            ],
            [
              "td",
              "多边形，可以用于构建热力图、地图等图表类型。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "schema"
              ]
            ],
            [
              "td",
              "k线图，箱型图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "edge"
              ]
            ],
            [
              "td",
              "树图、流程图、关系图。"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "heatmap"
              ]
            ],
            [
              "td",
              "热力图。"
            ]
          ]
        ]
      ],
      [
        "p",
        "同时 BizCharts 默认提供了如下 8 中几何标记和",
        [
          "a",
          {
            "title": null,
            "href": "geom.md#adjust"
          },
          "数据调整"
        ],
        "的组合类型。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "type"
            ],
            [
              "th",
              "描述"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              [
                "code",
                "pointStack"
              ]
            ],
            [
              "td",
              "层叠点图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "pointJitter"
              ]
            ],
            [
              "td",
              "扰动点图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "pointDodge"
              ]
            ],
            [
              "td",
              "分组点图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "intervalStack"
              ]
            ],
            [
              "td",
              "层叠柱状图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "intervalDodge"
              ]
            ],
            [
              "td",
              "分组柱状图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "intervalSymmetric"
              ]
            ],
            [
              "td",
              "对称柱状图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "areaStack"
              ]
            ],
            [
              "td",
              "层叠区域图"
            ]
          ],
          [
            "tr",
            [
              "td",
              [
                "code",
                "schemaDodge"
              ]
            ],
            [
              "td",
              "分组箱型图"
            ]
          ]
        ]
      ],
      [
        "h3",
        "2、adjust    ",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "声明几何标记对象的数据调整方式，可用于绘制层叠图、扰动图、分组图等。支持单一的数据调整方式也支持各种数据调整方式的组合。\n支持的调整类型包括： 'stack', 'dodge', 'jitter', 'symmetric'。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Geom\n  type= \"point\"\n  adjust= {'stack'}\n  // or\n  adjust= {['dodge', 'stack']}\n  // or\n  adjust= {[\n    {\n      type: 'dodge',\n      marginRatio: 0, // 数值范围为 0 至 1，用于调整分组中各个柱子的间距\n      dodgeBy: 'xx', // 声明按照 xx 字段进行分组，一般不需要声明\n    }\n  ]}\n/>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "position"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "3、position    ",
        [
          "em",
          " String "
        ]
      ],
      [
        "p",
        "位置属性的映射；用于确定由数据中的哪几个字段来确定数据在平面坐标系的位置。通俗地解释，即确定 x 轴和 y 轴的数据字段。它是唯一一个可以用于编码分类又可用于编码定序或者定量的数据属性。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Geom position=\"x*y\" />\n<Geom position={['x', 'y']} />"
        ]
      ],
      [
        "p",
        "使用 ",
        [
          "code",
          "*"
        ],
        " 连接，position 属性会对多个字段进行数据的映射，如：cut",
        [
          "em",
          "price，x"
        ],
        "y 等，用于二维坐标系图表的绘制。"
      ],
      [
        "p",
        "以 chart.point().position('x",
        [
          "em",
          "y') 为例，point 代表图形，即最后需要生成点图，而 position 代表位置，position('x"
        ],
        "y') 代表数据在图形中的位置由 x 和 y 这两个维度的变量决定，x * y 的数据处理结果可以理解为："
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://gw.alipayobjects.com/zos/rmsportal/EcuDeyeTOsztVOuxmZPe.png",
            "alt": "image"
          }
        ]
      ],
      [
        "p",
        "(x1, y1) 这样的数值对，最后就会被转换为画布上对应的坐标点。"
      ],
      [
        "p",
        "另外，也可以以数组格式传入：",
        [
          "code",
          "chart.geom().position([ 'fieldA', 'fieldB' ])"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "color"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "4、color    ",
        [
          "em",
          " String | Array "
        ]
      ],
      [
        "p",
        "将数据值映射到图形的颜色上的方法。"
      ],
      [
        "p",
        "color 支持的映射值如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "em",
              "'field'"
            ],
            "，field 为数据字段名，内部会使用主题中的默认颜色进行数据值到颜色值的映射；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom color='cut'/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'field', colors"
            ],
            "，将数据值映射至指定的颜色值 colors（可以是字符串也可以是数组），此时用于通常映射分类数据；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom color={['city', ['#ff0000', '#00ff00']]}/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'field', 'color1-color2-colorN')"
            ],
            "，指定颜色的渐变路径，用于映射连续的数据；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom color={['price', '#ff0000-#00ff00']}/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'field', callback)"
            ],
            "，使用回调函数进行颜色值的自定义；可以使用多个字段使用*号连接\n\t\t注意：\n\t\t    color 属性的回调函数一般返回的单个颜色，因为 G2 中所有的 shape 仅支持单个颜色\n\t\t    color 属性的回调函数也可以返回数组，数组中有多个颜色，但是这时候需要 shape 支持多颜色的解析，详细情况查看 ",
            [
              "a",
              {
                "title": null,
                "href": "shape.md"
              },
              "自定义shape"
            ],
            "。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom\n  color={['cut', (cut)=>{\n\t//some code\n\t  if(cut < 1000)\n\t    return '#00ff00';\n\t  else\n\t    return '#ff0000';\n\t}]}\n/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "color('#ffffff')， 直接指定颜色常量，不进行数据映射。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom color='ffffff'/>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "shape"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "5、shape    ",
        [
          "em",
          " String | Array"
        ]
      ],
      [
        "p",
        "将数据值映射到图形的形状上的方法。"
      ],
      [
        "p",
        "shape 支持的映射值如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "'field'，将指定的字段映射到内置的 shapes 数组中；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom shape='city'/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'field', shapes"
            ],
            "，用户自己提供 shapes 数据，来进行数据映射；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom shape={['city', ['circle', 'rect']]} />"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'fields', callback"
            ],
            "，使用回调函数获取 shape，用于个性化的 shape 定制，可以根据单个或者多个字段确定；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom\n  shape={['city', (city)=>{\n    if(city == 'hangzhou'){\n\t  return circle;\n\t}\n\treturn 'rect';\n  }]}\n/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "'shapeType'，指定常量，将所有数据值映射到固定的 shape。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom shape='circle' />"
        ]
      ],
      [
        "p",
        "另外 BizCharts 提供了自定义 shape 的功能，用户可以自己绘制需要的 shape，详见",
        [
          "a",
          {
            "title": null,
            "href": "shape.md"
          },
          "自定义 shape"
        ],
        "。"
      ],
      [
        "p",
        "注：使用几何标记实现各种图表类型时，对于每一种几何标记来说，图形在绘制的时候有不同的形状（shape)，在",
        [
          "a",
          {
            "title": null,
            "href": "geom.md"
          },
          "几何标记"
        ],
        " 章节已列出了目前 BizCharts 提供的 Geom 默认支持的 shape。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "size"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "6、size    ",
        [
          "em",
          " String | Array | Number "
        ]
      ],
      [
        "p",
        "对于不同的几何标记含义不完全一致："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "对于 point 点来说，size 对应着点的半径；"
          ]
        ],
        [
          "li",
          [
            "p",
            "对于 line 线来说，size 对应着线的粗细；"
          ]
        ],
        [
          "li",
          [
            "p",
            "对于 interval 柱状图来说，size 对应着柱子的宽度。"
          ]
        ]
      ],
      [
        "p",
        "size 支持映射值如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "'field'，指定映射到 size 的字段，使用内置的默认大小范围为 ",
            [
              "span",
              "1, 10"
            ],
            "；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom size='count'/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "['field', ",
            [
              "span",
              " min, max "
            ],
            "]，指定映射到 size 字段外，还提供了 size 的最大值和最小值范围；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom size={['count', [1, 10]]}/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "span",
              "'fields', callback)"
            ],
            "，使用回调函数映射 size，用于个性化的 size 定制，可以使用多个字段进行映射；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom size={['count', (count)=>{\n  if(count > 1000)\n    return 10;\n  else return 1;\n}]}/>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "Number，直接指定像素大小。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom size={3}/>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "opacity"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "7、opacity    ",
        [
          "em",
          " String | Array | Number "
        ]
      ],
      [
        "p",
        "将数据值映射到图形的透明度上的方法。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom opacity='field'/> // 使用字段映射到透明度\n<Geom opacity={0.2}/> // 常量，但是数值范围为 0 - 1\n<Geom opacity={['count', (count)=>{ // 回调函数\n  if(count > 1000)\n    return 0.6;\n  return 0.1;\n}]}/>"
        ]
      ],
      [
        "h3",
        "8、style    ",
        [
          "em",
          " Object | Array "
        ]
      ],
      [
        "p",
        "配置几何图形的样式。\n当 style 的值是 Object 时，该 Object 中只能设置固定样式。\n当 style 的值是 Array 时，可以通过回调函数根据具体的数据去动态配置样式。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//代码示例\n<Geom\n  style={{\n    lineWidth:1\n  }}\n  //或者\n  style={['sales*city', {\n    lineWidth:1,\n\tstroke:(sales, city)=>{\n\t  if(city === 'hangzhou' && sales > 1000)\n\t\treturn \"#ff0000\";\n\t  return \"#00ff00\";\n\t}\n   }]}\n/>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "tooltip"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "9、tooltip    ",
        [
          "em",
          " Boolean | String | Array "
        ]
      ],
      [
        "p",
        "将数据值映射到 Tooltip 上。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "Boolean 该几何标记是否需要显示 tooltip，默认值 false；"
          ]
        ],
        [
          "li",
          [
            "p",
            "String 格式为 a",
            [
              "em",
              "b"
            ],
            "c，该几何标记上 tooltip 需要显示的数据字段，每个地段将会显示为一行。"
          ]
        ],
        [
          "li",
          [
            "p",
            "Array 格式为 ",
            [
              "span",
              "a",
              [
                "em",
                "b"
              ],
              "c, callback"
            ],
            ",该几何标记上 tooltip 需要显示的数据字段,同时可以在 callback 中调整数据的显示格式。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Geom tooltip={false} />\n<Geom\n  tooltip={['sales*city', (sales, city)=>{\n    return {\n\t  name:'xxx',\n\t  value:city + ':' + sales\n\t}\n  }]}\n/>"
        ]
      ],
      [
        "h3",
        "10、select    ",
        [
          "em",
          " Boolean | Array "
        ]
      ],
      [
        "p",
        "开启、关闭以及设置 shape 对于鼠标 click 事件的响应效果。BizCharts 默认仅为饼图开启了选中效果。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "Boolean，是否打开 对于鼠标 click 事件的响应效果。"
          ]
        ],
        [
          "li",
          [
            "p",
            "Array，",
            [
              "span",
              "Boolean, configObject"
            ],
            "。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Geom\n  select={[true, {\n    mode: 'single' || 'multiple', // 选中模式，单选、多选\n\tstyle: { }, // 选中后 shape 的样式\n\tcancelable: true | false, // 选中之后是否允许取消选中，默认允许取消选中\n\tanimate: true | false // 选中是否执行动画，默认执行动画\n  }]}\n/>"
        ]
      ],
      [
        "h3",
        "11、active    ",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "图形激活交互开关。"
      ],
      [
        "h3",
        "12、animate    ",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "定义几何标记上的动画效果，具体配置参数及使用参见",
        [
          "a",
          {
            "title": null,
            "href": "../tutorial/animate.md"
          },
          "animate文档"
        ]
      ]
    ]
  },
  {
    "filename": "api/graphic.md",
    "path": "api/graphic",
    "jsonml": [
      "article",
      [
        ""
      ],
      [
        "h1",
        "canvas 属性"
      ],
      [
        "p",
        "由于 G2 使用的是 canvas，绘制的所有图形都支持 canvas 的属性，本章列出常用的属性，详细信息参考",
        [
          "a",
          {
            "title": null,
            "href": "http://www.w3school.com.cn/tags/html_ref_canvas.asp"
          },
          " canvas 属性"
        ],
        "。"
      ],
      [
        "h2",
        "通用属性"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "fill"
            ],
            " 设置用于填充绘画的颜色、渐变或模式；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "stroke"
            ],
            " 设置用于笔触的颜色、渐变或模式；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "shadowColor"
            ],
            " 设置用于阴影的颜色；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "shadowBlur"
            ],
            "  设置用于阴影的模糊级别；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "shadowOffsetX"
            ],
            " 设置阴影距形状的水平距离；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "shadowOffsetY"
            ],
            " 设置阴影距形状的垂直距离；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "opacity"
            ],
            " 设置绘图的当前 alpha 或透明值；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "globalCompositeOperation"
            ],
            " 设置新图像如何绘制到已有的图像上。"
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          [
            "strong",
            "！注意："
          ]
        ]
      ],
      [
        "p",
        "G2 对图形属性进行了缩写"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "fillStyle 缩写为 ",
            [
              "code",
              "fill"
            ],
            "；"
          ]
        ],
        [
          "li",
          [
            "p",
            "stokeStyle 缩写为 ",
            [
              "code",
              "stroke"
            ],
            "；"
          ]
        ],
        [
          "li",
          [
            "p",
            "globalAlpha 缩写为 ",
            [
              "code",
              "opacity"
            ],
            "。"
          ]
        ]
      ],
      [
        "h2",
        "线条样式"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_linecap.asp"
              },
              [
                "code",
                "lineCap"
              ]
            ],
            " 设置线条的结束端点样式；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_linejoin.asp"
              },
              [
                "code",
                "lineJoin"
              ]
            ],
            "  设置两条线相交时，所创建的拐角形状；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_linewidth.asp"
              },
              [
                "code",
                "lineWidth"
              ]
            ],
            " 设置当前的线条宽度；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_miterlimit.asp"
              },
              [
                "code",
                "miterLimit"
              ]
            ],
            "  设置最大斜接长度。"
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          [
            "strong",
            "！注意："
          ]
        ]
      ],
      [
        "ol",
        [
          "li",
          [
            "p",
            "G2 在现有线的样式基础上增加了虚线的支持："
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "lineDash"
            ],
            "：设置线的虚线样式，可以指定一个数组。一组描述交替绘制线段和间距（坐标空间单位）长度的数字。 如果数组元素的数量是奇数， 数组的元素会被复制并重复。例如， ",
            [
              "span",
              "5, 15, 25"
            ],
            " 会变成 ",
            [
              "span",
              "5, 15, 25, 5, 15, 25"
            ],
            "。"
          ]
        ]
      ],
      [
        "p",
        "这个属性取决于浏览器是否支持 setLineDash 函数，详情参考",
        [
          "a",
          {
            "title": null,
            "href": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"
          },
          "setLineDash"
        ],
        "。"
      ],
      [
        "ol",
        [
          "li",
          [
            "p",
            "G2 在现有线的基础上增加了首尾箭头的绘制支持："
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "startArrow"
            ],
            ": true|boolean，是否渲染起点箭头"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "endArrow"
            ],
            ": true|boolean，是否渲染终点箭头"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "arrowAngle"
            ],
            ": number，角度，箭头的夹角大小"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "arrowRadius"
            ],
            ": number，箭头长度"
          ]
        ]
      ],
      [
        "h2",
        "文本属性"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_font.asp"
              },
              [
                "code",
                "font"
              ]
            ],
            "  设置文本内容的当前字体属性；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_textalign.asp"
              },
              [
                "code",
                "textAlign"
              ]
            ],
            " 设置文本内容的当前对齐方式, 支持的属性：center|end|left|right|start；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "http://www.w3school.com.cn/tags/canvas_textbaseline.asp"
              },
              [
                "code",
                "textBaseline"
              ]
            ],
            "  设置在绘制文本时使用的当前文本基线, 支持的属性:top|middle|bottom。"
          ]
        ]
      ],
      [
        "p",
        [
          "strong",
          "！注意："
        ]
      ],
      [
        "p",
        "G2 提供了额外的几个文本属性，便于用户设置字体，具体的含义参考",
        [
          "a",
          {
            "title": null,
            "href": "http://www.w3school.com.cn/tags/canvas_font.asp"
          },
          "font 组成"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "fontStyle"
            ],
            " 对应 font-style；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "fontVariant"
            ],
            " 对应 font-variant；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "fontWeight"
            ],
            " 对应 font-weight；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "fontSize"
            ],
            " 对应 font-size；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "fontFamily"
            ],
            " 对应 font-family；"
          ]
        ]
      ],
      [
        "h2",
        "渐变色"
      ],
      [
        "p",
        "G2 中提供了线性渐变、放射状/环形渐变两种形式，使用方式如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "线性渐变 "
          ]
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/ieWkhtoHOijxweuNFWdz.png",
            "style": "width: 50%;"
          }
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "说明：",
          [
            "code",
            "l"
          ],
          " 表示使用线性渐变，绿色的字体为可变量，由用户自己填写。"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "// example\n// 使用渐变色描边，渐变角度为 0，渐变的起始点颜色 #ffffff，中点的渐变色为 #7ec2f3，结束的渐变色为 #1890ff\nstroke: 'l(0) 0:#ffffff 0.5:#7ec2f3 1:#1890ff'"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "放射状/环形渐变"
          ]
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/qnvmbtSBGxQlcuVOWkdu.png",
            "style": "width: 50%;"
          }
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "说明：",
          [
            "code",
            "r"
          ],
          " 表示使用放射状渐变，绿色的字体为可变量，由用户自己填写，开始圆的 x y r 值均为相对值，0 至 1 范围。"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "// example\n// 使用渐变色填充，渐变起始圆的圆心坐标为被填充物体的包围盒中心点，半径为(包围盒对角线长度 / 2) 的 0.1 倍，渐变的起始点颜色 #ffffff，中点的渐变色为 #7ec2f3，结束的渐变色为 #1890ff\nfill: 'r(0.5, 0.5, 0.1) 0:#ffffff 1:#1890ff'"
        ]
      ],
      [
        "h2",
        "纹理"
      ],
      [
        "p",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/NjtjUimlJtmvXljsETAJ.png",
            "style": "width: 50%;"
          }
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "说明：",
          [
            "code",
            "p"
          ],
          " 表示使用纹理，绿色的字体为可变量，由用户自己填写。"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "a"
            ],
            ": 该模式在水平和垂直方向重复；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "x"
            ],
            ": 该模式只在水平方向重复；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "y"
            ],
            ": 该模式只在垂直方向重复；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "code",
              "n"
            ],
            ": 该模式只显示一次（不重复）。"
          ]
        ]
      ],
      [
        "p",
        "纹理的内容可以直接是图片或者 ",
        [
          "a",
          {
            "title": null,
            "href": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs"
          },
          "Data URLs"
        ],
        "。"
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "// example\n// 使用纹理填充，在水平和垂直方向重复图片\nfill: 'p(a)https://gw.alipayobjects.com/zos/rmsportal/ibtwzHXSxomqbZCPMLqS.png'"
        ]
      ]
    ]
  },
  {
    "filename": "api/guide.md",
    "path": "api/guide",
    "jsonml": [
      "article",
      [
        "h1",
        "Guide"
      ],
      [
        "p",
        "用于绘制图表的辅助元素。"
      ],
      [
        "p",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/ekrHtCkdfMttjnAXqApH.png",
            "width": "500px"
          }
        ]
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "<Guide />"
            ],
            " 组件只可以作为 ",
            [
              "a",
              {
                "title": null,
                "href": "chart.md"
              },
              [
                "code",
                "<Chart />"
              ]
            ],
            " 组件 或者 ",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View />"
              ]
            ],
            " 的子组件，同时 ",
            [
              "code",
              "<Guide />"
            ],
            " 组件下只能嵌套以下Guide子组件。"
          ]
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "组件"
            ],
            [
              "th",
              "说明"
            ],
            [
              "th",
              "属性"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "Guide.Line"
            ],
            [
              "td",
              "辅助线（可带文本），例如表示平均值或者预期分布的直线。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#line"
                },
                "参见Line"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "Guide.Image"
            ],
            [
              "td",
              "辅助图片，在图表上添加辅助图片。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#image"
                },
                "参见Image"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "Guide.Text"
            ],
            [
              "td",
              "辅助文本，指定位置添加文本说明。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#text"
                },
                "参见Text"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "Guide.Region"
            ],
            [
              "td",
              "辅助框，框选一段图区，设置背景、边框等。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#region"
                },
                "参见Region"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "Guide.Html"
            ],
            [
              "td",
              "辅助 html，指定位置添加自定义 html，显示自定义信息。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#html"
                },
                "参见Html"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "Guide.Arc"
            ],
            [
              "td",
              "辅助弧线。"
            ],
            [
              "td",
              [
                "a",
                {
                  "title": null,
                  "href": "#arc"
                },
                "参见Arc"
              ]
            ]
          ]
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "不同辅助标记组件所支持的配置属性也不一样，主要差异为坐标位置属性差异:"
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "Text, Html 中使用 position"
              ]
            ],
            [
              "li",
              [
                "p",
                "Line, Region, Image, Arc 中使用 start、end 字段"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "strong",
          "位置值说明"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "Object 使用图表 x,y 对应的原始数据例如： {time: ‘2010-01-01’, value: 200}"
          ]
        ],
        [
          "li",
          [
            "p",
            "Array 数组来配置位置 ",
            [
              "span",
              "x, y"
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "pre",
            {
              "lang": null
            },
            [
              "code",
              "\t- x，y 都是原始数据 [‘2010-01-01’]\n\t- x，y 可以使用原始数据的替代字符串 ‘min’, ‘max’, ‘median’ , 例如：[‘median’, 200]\n\t- x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 ‘%’, 例如[‘50%’, ‘50%’] 使得辅助元素居中"
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "Function 回调函数，可以动态的确定辅助元素的位置"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "// 应用于数据动态更新，辅助元素的位置根据数据变化\n<Guide>\n  <Text\n    content='最大值'\n    position={(xScale, yScale)=>{\n      return []; //位置信息\n    }}\n  />\n</Guide>"
        ]
      ],
      [
        "h2",
        "使用示例"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://img.alicdn.com/tfs/TB16XZ8bOqAXuNjy1XdXXaYcVXa-1186-510.png",
            "alt": "e051f3e7-35ab-4895-8aa6-89fba3045da9.png"
          }
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart width={600} height={400} data={data}>\n  <Guide>\n    <Region start={[-1, 0]} end={[1, ranges[0]]} style={{fill: '#e96e33',\n    fillOpacity: 0.5}}/>\n    <Region start={[-1, ranges[0]]} end={[1, ranges[1]]} style={{fill: '#f9ca47',\n    fillOpacity: 0.5}}/>\n    <Region start={[-1, ranges[1]]} end={[1, ranges[2]]} style={{fill: '#88bb34',\n    fillOpacity: 0.5}}/>\n  </Guide>\n</Chart>"
        ]
      ],
      [
        "p",
        [
          "a",
          {
            "title": null,
            "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/other/bullet-graph"
          },
          "demo链接"
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "h2",
        "Guide"
      ],
      [
        "p",
        [
          "code",
          "<Guide>"
        ],
        " 本身并没有属性需要配置，该组件作为一个管理标签，用来管理其子组件的渲染与更新。任意Guide更新会导致这这组内的其他Guide重绘。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "line"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Line"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Line\n    top={boolean} // 指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n    start= {object} | {function} | {array} // 辅助线起始位置，值为原始数据值，支持 callback\n    end= {object} | {function} | {array} // 辅助线结束位置，值为原始数据值，支持 callback\n    lineStyle= {{\n      stroke: '#999', // 线的颜色\n      lineDash: [ 0, 2, 2 ], // 虚线的设置\n      lineWidth: 3 // 线的宽度\n    }} // 图形样式配置\n    text={{\n      position: 'start' | 'center' | 'end' | '39%' | 0.5, // 文本的显示位置\n      autoRotate: {boolean}, // 是否沿线的角度排布，默认为 true\n      style: {object}, // 文本图形样式配置\n      content: {string}, // 文本的内容\n      offsetX: {number}, // x 方向的偏移量\n      offsetY: {number} // y 方向的偏移量\n    }}\n  />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、top \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层。"
      ],
      [
        "h3",
        "2、start \t",
        [
          "em",
          "Object | Function | Array"
        ]
      ],
      [
        "p",
        "指定辅助线的起始位置，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x，y 都是原始数据 ",
                [
                  "span",
                  " '2010-01-01', 200 "
                ],
                ";"
              ]
            ],
            [
              "li",
              [
                "p",
                "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
                [
                  "span",
                  " 'median', 200 "
                ]
              ]
            ],
            [
              "li",
              [
                "p",
                "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
                [
                  "span",
                  " '50%', '50%' "
                ],
                " 使得辅助元素居中"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "h3",
        "4、end \t",
        [
          "em",
          "Object | Function | Array"
        ]
      ],
      [
        "p",
        "指定辅助线的结束位置，使用同 start。"
      ],
      [
        "h3",
        "5、lineStyle \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "辅助线样式配置。\n",
        [
          "span",
          {
            "id": "text"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "6、text ",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "辅助线可以带文本，该属性使用如下："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Line\n    text={{\n      position: 'start' | 'center' | 'end' | '39%' | 0.5, // 文本的显示位置，值除了指定的常量外，还可以是百分比或者小数\n      autoRotate: {boolean}, // 指定文本是否沿着线的方向排布，默认为 true，即沿着线排布\n      // 设置文本的显示样式\n      style: {\n        fill: 'red'\n      },\n      content: {string}, // 文本的内容\n      offsetX: {number}, // x 方向的偏移量\n      offsetY: {number} // y 方向的偏移量\n    }}\n  />\n</Guide>"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "text"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Text"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Text\n    top= {boolean} // 指定 guide 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n    position= {object} | {function} | {array} // 文本的起始位置，值为原始数据值，支持 callback\n    content= {string} // 显示的文本内容\n    style= {{\n      fill: '#666', // 文本颜色\n      fontSize: '12', // 文本大小\n      fontWeight: 'bold' // 文本粗细\n      rotate: 30 // 旋转角度\n    }} // 文本的图形样式属性\n    offsetX= {number} // x 方向的偏移量\n    offsetY= {number} // y 方向偏移量\n  />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、top \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "指定 giude 是否绘制在 canvas 最上层。\n默认值:false, 即绘制在最下层。"
      ],
      [
        "h3",
        "2、position \t",
        [
          "em",
          " Object|Function|Array "
        ]
      ],
      [
        "p",
        "指定辅助文本的显示位置，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ]
        ],
        [
          "li",
          [
            "p",
            "x，y 都是原始数据 ",
            [
              "span",
              " '2010-01-01', 200 "
            ],
            ";"
          ]
        ],
        [
          "li",
          [
            "p",
            "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
            [
              "span",
              " 'median', 200 "
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
            [
              "span",
              " '50%', '50%'"
            ],
            " 使得辅助元素居中"
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Text position={(xScale, yScale) => [x, y]} > // 返回位置信息\n</Guide>"
        ]
      ],
      [
        "h3",
        "3、content \t",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "辅助文本的显示内容。"
      ],
      [
        "h3",
        "4、style \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "用于设置辅助文本的显示样式。"
      ],
      [
        "h3",
        "5、offsetX \t",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "x 方向的偏移量。"
      ],
      [
        "h3",
        "6、offsetY \t",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "y 方向的偏移量。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "image"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Image"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  // 辅助图片 image，只是指定了 start，则该点表示图片左上角坐标\n  <Image\n    top = {boolean} // 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n    start= {object} | {function} | {array} // 图片起始位置， 值为原始数据值，支持 callback\n    src= {string} // 图片路径\n    width= {number}\n    height= {number}\n    offsetX= {number} // x 方向的偏移量\n    offsetY= {number} // y 方向偏移量\n    />\n    // 辅助图片 image，通过指定 start 和 end 确定图片的位置和宽高\n    <Image\n      top = {boolean} // 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n      start= {object} | {function} | {array} // 图片起始位置， 值为原始数据值，支持 callback\n      end= {array} | {function} | {array} // 图片结束位置， 值为原始数据值，支持 callback\n      src= {string} // 图片路径\n      width= {number}\n      height= {number}\n      offsetX= {number} // x 方向的偏移量\n      offsetY= {number} // y 方向偏移量\n    />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、top \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "指定 giude 是否绘制在 canvas 最上层。\n默认值:false, 即绘制在最下层。"
      ],
      [
        "h3",
        "2、start \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "指定辅助图片的起始位置，即图片的左上角，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x，y 都是原始数据 ",
                [
                  "span",
                  " '2010-01-01', 200 "
                ],
                ";"
              ]
            ],
            [
              "li",
              [
                "p",
                "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
                [
                  "span",
                  " 'median', 200 "
                ]
              ]
            ],
            [
              "li",
              [
                "p",
                "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
                [
                  "span",
                  " '50%', '50%' "
                ],
                " 使得辅助元素居中"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "h3",
        "3、end \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "可选，指定辅助图片的结束位置，即图片的右下角，该属性用法同 start。当 start 和 end 属性同时声明时，即指定了图片的宽度和高度。"
      ],
      [
        "h3",
        "4、src \t",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "指定图片的地址，可以是路径，也可以是 base64 编码。"
      ],
      [
        "h3",
        "5、width \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "当仅指定了 start 属性时，用于设置图片的宽度。"
      ],
      [
        "h3",
        "6、height \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "当仅指定了 start 属性时，用于设置图片的高度。"
      ],
      [
        "h3",
        "7、offsetX \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "x 方向的偏移量。"
      ],
      [
        "h3",
        "8、offsetY \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "y 方向的偏移量。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "region"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Region"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Region\n    top={boolean} // 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n    start= {object} | {function} | {array} // 辅助框起始位置，值为原始数据值，支持 callback \n    end= {object} | {function} | {array}// 辅助框结束位置，值为原始数据值，支持 callback\n    style= {{\n      lineWidth: 0, // 辅助框的边框宽度\n      fill: '#f80', // 辅助框填充的颜色\n      fillOpacity: 0.1, // 辅助框的背景透明度\n      stroke: '#ccc' // 辅助框的边框颜色设置\n    }} // 辅助框的图形样式属性\n    />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、top \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "指定 giude 是否绘制在 canvas 最上层。\n默认值:false, 即绘制在最下层。"
      ],
      [
        "h3",
        "2、start \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "指定辅助背景框的起始位置，即背景框的左上角，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x，y 都是原始数据 ",
                [
                  "span",
                  " '2010-01-01', 200 "
                ],
                ";"
              ]
            ],
            [
              "li",
              [
                "p",
                "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
                [
                  "span",
                  " 'median', 200 "
                ]
              ]
            ],
            [
              "li",
              [
                "p",
                "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
                [
                  "span",
                  " '50%', '50%' "
                ],
                " 使得辅助元素居中"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "h3",
        "3、end \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "指定辅助背景框的结束位置，即背景框的右下角，该属性用法同 start。"
      ],
      [
        "h3",
        "4、style \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "辅助框图形样式属性。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "html"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Html"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Html\n    position={object} | {function} | {array} // html 的中心位置， 值为原始数据值，支持 callback\n    alignX='left' | 'middle' | 'right'\n    alignY='top' | 'middle' | 'bottom'\n    offsetX={number}\n    offsetY={number}\n    html={string} // html 代码\n    zIndex={number}\n  />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、position \t",
        [
          "em",
          "Object | Function |Array"
        ]
      ],
      [
        "p",
        "设置 html 的显示位置，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x，y 都是原始数据 ",
                [
                  "span",
                  " '2010-01-01', 200 "
                ],
                ";"
              ]
            ],
            [
              "li",
              [
                "p",
                "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
                [
                  "span",
                  " 'median', 200 "
                ]
              ]
            ],
            [
              "li",
              [
                "p",
                "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
                [
                  "span",
                  " '50%', '50%' "
                ],
                " 使得辅助元素居中"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "h3",
        "2、zIndex \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "html 层级。"
      ],
      [
        "h3",
        "3、alignX \t",
        [
          "em",
          "'left' | 'middle' | 'right'"
        ]
      ],
      [
        "p",
        "html 的水平对齐方式，可取值为： left、middle、right，默认值为 middle。"
      ],
      [
        "h3",
        "4、alignY \t",
        [
          "em",
          "'top' | 'middle' | 'bottom'"
        ]
      ],
      [
        "p",
        "html 的垂直对齐方式，可取值为： top、middle、bottom，默认值为 middle。"
      ],
      [
        "h3",
        "5、offsetX \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "x 方向的偏移量。"
      ],
      [
        "h3",
        "6、offsetY \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "y 方向的偏移量。"
      ],
      [
        "h3",
        "7、html \t",
        [
          "em",
          "String | Function"
        ]
      ],
      [
        "p",
        "需要显示的 html 内容。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "arc"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h2",
        "Arc"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Guide>\n  <Arc\n    top={object} // 指定 giude 是否绘制在 canvas 最上层，默认为 false, 即绘制在最下层\n    start={object} | {function} | {array} // 辅助框起始位置，值为原始数据值，支持 callback \n    end={object} | {function} | {array}// 辅助框结束位置，值为原始数据值，支持 callback\n    style={object} // 图形样式属性\n  />\n</Guide>"
        ]
      ],
      [
        "h3",
        "1、top \t",
        [
          "em",
          "boolean"
        ]
      ],
      [
        "p",
        "指定 giude 是否绘制在 canvas 最上层。\n默认值： false, 即绘制在最下层。"
      ],
      [
        "h3",
        "2、start \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "指定辅助圆弧的起始位置，该值的类型如下："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "object: 使用图表 x,y 对应的原始数据例如： { time: '2010-01-01', value: 200 }"
          ]
        ],
        [
          "li",
          [
            "p",
            "array: 数组来配置位置 ",
            [
              "span",
              " x, y "
            ],
            "，根据数组中的值的存在以下几种形式："
          ],
          [
            "ul",
            [
              "li",
              [
                "p",
                "x，y 都是原始数据 ",
                [
                  "span",
                  " '2010-01-01', 200 "
                ],
                ";"
              ]
            ],
            [
              "li",
              [
                "p",
                "x，y 可以使用原始数据的替代字符串 'min', 'max', 'median' , 例如：",
                [
                  "span",
                  " 'median', 200 "
                ]
              ]
            ],
            [
              "li",
              [
                "p",
                "x, y 都是用百分比的形式，在绘图区域定位，字符串中存在 '%', 例如 ",
                [
                  "span",
                  " '50%', '50%' "
                ],
                " 使得辅助元素居中"
              ]
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "function: 回调函数，可以动态的确定辅助元素的位置，应用于数据动态更新，辅助元素的位置根据数据变化的场景"
          ]
        ]
      ],
      [
        "h3",
        "3、end \t",
        [
          "em",
          "Object|Function|Array"
        ]
      ],
      [
        "p",
        "指定辅助圆弧的结束位置，该属性用法同 start。"
      ],
      [
        "h3",
        "4、style \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "设置圆弧的显示样式。"
      ]
    ]
  },
  {
    "filename": "api/label.md",
    "path": "api/label",
    "jsonml": [
      "article",
      [
        "h1",
        "Label"
      ],
      [
        "p",
        [
          "a",
          {
            "title": null,
            "href": "geom.md"
          },
          [
            "code",
            "<Geom>"
          ]
        ],
        " 几何标记上的标注文本组件。"
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "p",
        [
          "code",
          "<Label ／>"
        ],
        " 组件只能够被嵌套在 ",
        [
          "a",
          {
            "title": null,
            "href": "geom.md"
          },
          [
            "code",
            "<Geom/>"
          ]
        ],
        " 组件内,如下所示。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Geom>\n  <Label content='sales' />\n</Geom>"
        ]
      ],
      [
        "h2",
        "API"
      ],
      [
        "h3",
        "1、content \t",
        [
          "em",
          " String | Array:",
          [
            "span",
            "String, Function"
          ],
          " "
        ]
      ],
      [
        "p",
        "指定 label 上显示的文本内容，可以是数据纬度，也可以自定义。\n使用示例:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label content=\"常量字符串\" />\n// 使用数据\n<Label content=\"sales*date\"/>\n// 使用回调函数\n<Label content={[\"sales*date\", (sales, date)=>{\n    return `${data}:${sales}`;\n  }]}\n/>"
        ]
      ],
      [
        "h3",
        "2、labelLine     ",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "文本距离几何线的配置，如果值为 false，表示不展示文本线。默认不展示。\n使用示例:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label\n  content=\"some label\"\n  labelLine={{\n    lineWidth: 1, // 线的粗细\n    stroke: '#ff8800', // 线的颜色\n    lineDash: [ 2, 1 ], // 虚线样式\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "3、offset   ",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "设置文本距离几何图形的的距离"
      ],
      [
        "h3",
        "4、textStyle   ",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "文本的图形样式。其他样式请参考",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label\n content='sales'\n textStyle={{\n   textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n   fill: '#404040', // 文本的颜色\n   fontSize: '12', // 文本大小\n   fontWeight: 'bold', // 文本粗细\n   rotate: 30,\n   textBaseline: 'top' // 文本基准线，可取 top middle bottom，默认为middle\n }}\n/>"
        ]
      ],
      [
        "p",
        "样式值支持回调："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label\n  content='sales'\n  textStyle={(sales) => {\n      let textAlign = 'center', // 文本对齐方向，可取值为： start middle end\n      let fill = (sales > 1000) ? '#ff0000' : '#00ff00';\n\t    return {textAlign: textAlign, fill: fill};\n\t  }\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "5、autoRotate  \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "是否需要自动旋转。\n默认值：true"
      ],
      [
        "h3",
        "6、formatter  \t",
        [
          "em",
          " Function "
        ]
      ],
      [
        "p",
        "用于格式化坐标轴上显示的文本信息。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label\n  content='name'\n  formatter={(text, item, index)=>{\n    // text 为每条记录 x 属性的值\n    // item 为映射后的每条数据记录，是一个对象，可以从里面获取你想要的数据信息\n    // index 为每条记录的索引\n\tvar point = item.point; // 每个弧度对应的点\n\tvar percent = point['percent'];\n\tpercent = (percent * 100).toFixed(2) + '%';\n\treturn name + ' ' + percent;\n  }}\n/>"
        ]
      ],
      [
        "h3",
        "7、htmlTemplate  \t",
        [
          "em",
          " Function "
        ]
      ],
      [
        "p",
        "自定义 html 文本"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Label\n  content='name'\n  htmlTemplate={(text, item, index)=>{\n    // text 为每条记录 x 属性的值\n    // item 为映射后的每条数据记录，是一个对象，可以从里面获取你想要的数据信息\n    // index 为每条记录的索引\n\tvar point = item.point; // 每个弧度对应的点\n\tvar percent = point['percent'];\n\tpercent = (percent * 100).toFixed(2) + '%';\n\t// 自定义 html 模板\n\treturn '<span class=\"title\" style=\"display: inline-block;width: 50px;\">' + text + '</span><br><span style=\"color:' + point.color + '\">' + percent + '</span>';\n  }\n/>"
        ]
      ]
    ]
  },
  {
    "filename": "api/legend.md",
    "path": "api/legend",
    "jsonml": [
      "article",
      [
        "h1",
        "Legend"
      ],
      [
        "p",
        "配置图表图例。"
      ],
      [
        "h2",
        "什么是图例"
      ],
      [
        "blockquote",
        [
          "p",
          "图例（legend）是图表的辅助元素，使用颜色、大小、形状区分不同的数据类型，用于图表中数据的筛选。G2 会根据设置图形属性映射以及数据的类型自动生成不同的图例。\nshape, color, size 只有当 ",
          [
            "code",
            "<Geom />"
          ],
          " 组件上有这三个属性中任意一个时，并且将 ",
          [
            "code",
            "<Legend>"
          ],
          " 组件的 name 属性跟这个属性的字段关联上，才会显示图例；"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "shape 属性，会根据不同的 shape 类型生成图例；"
          ]
        ],
        [
          "li",
          [
            "p",
            "color 属性, 会赋予不同的图例项不同的颜色来区分图形；"
          ]
        ],
        [
          "li",
          [
            "p",
            "size 属性, 在图例上显示图形的大小。"
          ]
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/9f146402-1e62-4029-b3b8-3d32029af1d6/attach/2378/eb826d75a0bb34cb/image.png",
            "alt": "image | center"
          }
        ]
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "<Legend />"
            ],
            " 组件只可以作为 ",
            [
              "a",
              {
                "title": null,
                "href": "chart.md"
              },
              [
                "code",
                "<Chart />"
              ]
            ],
            " 的子组件，同时",
            [
              "code",
              "<Legend />"
            ],
            "组件下不能嵌套其他组件。"
          ]
        ],
        [
          "li",
          [
            "p",
            "当且仅当配置了",
            [
              "code",
              "<Legend />"
            ],
            "，图表才会展示图例。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "// Basic Usage\n<Chart width={600} height={400} data={data}>\n  <Legend />\n  <Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "使用 ",
            [
              "code",
              "<Legend/>"
            ],
            " 组件时，可以指定当前图例对应数据源中的字段名（字段名为name），不指定则默认设置所有图例；"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "// 指定图例对应数据源中的字段名\n<Chart width={600} height={400} data={data}>\n    // Geom 组件上必须有 `shape, color, size `中某个属性值为 genre 字段，才会有图例出现。\n\t<Legend name=\"genre\" position=\"right\" title={null} dx={20} />\n\t<Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>\n\n// 不指定图例对应数据源中的字段名，则默认设置所有图例\n<Chart width={600} height={400} data={data}>\n\t<Legend position=\"right\" title={null} dx={20} />\n\t// Geom 组件上必须有 `shape, color, size `中某个属性值为 genre 字段，才会有图例出现。\n\t<Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "一旦使用 ",
            [
              "code",
              "<Legend/>"
            ],
            " 组件，那么所有的图例都会显示，如若需要隐藏某一个图例，务必将 visible 参数并置为 false，如下所示："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "<Chart width={600} height={400} data={data}>\n\t<Legend name=\"genre\" visible={false} />\n\t<Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "p",
        "分类类型和连续类型的配置有一定的区别，下面列出了这两种类型支持的可配置的属性："
      ],
      [
        "h2",
        "分类图例"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://img.alicdn.com/tfs/TB1roBwhrYI8KJjy0FaXXbAiVXa-450-232.png",
            "alt": "image | center"
          }
        ]
      ],
      [
        "h3",
        "1、name\t\t",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "图例的对应到数据源中的数据字段名，不传则默认设置所有图例。"
      ],
      [
        "h3",
        "2、visible\t\t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "该图例是否可见。\n默认值:true。"
      ],
      [
        "h3",
        "3、position\t\t",
        [
          "em",
          "‘top’|‘left’|‘right’|‘bottom’"
        ]
      ],
      [
        "p",
        "设置图例的显示位置，可设置的值为：top、right、bottom、left，分别表示上、右、下、左。默认为 bottom。"
      ],
      [
        "h3",
        "4、title\t\t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "图例标题的显示样式设置，如果值为 null，表示不展示图例标题，默认不展示。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart width={600} height={400} data={data}>\n  <Legend name=\"genre\" title={{\n      textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n      fill: '#404040', // 文本的颜色\n      fontSize: '12', // 文本大小\n      fontWeight: 'bold', // 文本粗细\n      rotate: 30, // 文本旋转角度，以角度为单位，仅当 autoRotate 为 false 时生效\n      textBaseline: 'top' // 文本基准线，可取 top middle bottom，默认为middle\n  }} />\n\t<Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "h3",
        "5、offsetX\t\t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "图例 x 方向的偏移值，数值类型，数值单位为 'px'，默认值为 0。"
      ],
      [
        "h3",
        "6、offsetY \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "图例 Y 方向的偏移值，数值类型，数值单位为 'px'，默认值为 0。"
      ],
      [
        "h3",
        "7、itemGap \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，表示图例每项之间的间距，如果是水平排布则为左右间距，如果是竖直排布则为上下间距。"
      ],
      [
        "h3",
        "8、itemMarginBottom \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，表示各个图例项垂直方向的间距。"
      ],
      [
        "h3",
        "9、itemWidth \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，设置图例项的宽度，当图例有很多图例项，并且用户想要这些图例项能垂直对齐时，此时这个属性可帮用户实现此效果。"
      ],
      [
        "h3",
        "10、unChecked \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，用于取消选中的图例文本颜色。"
      ],
      [
        "h3",
        "11、background \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，用于设置图例的背景样式。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Legend name=\"genre\" background={{\n  fill:\"#ff0000\",\n  fillOpacity:0.5,\n}} />"
        ]
      ],
      [
        "h3",
        "12、allowAllCanceled \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，表示是否允许所有图例项被取消选中，默认为 false，即必须保留一个被选中的图例项。"
      ],
      [
        "h3",
        "13、itemFormatter \t",
        [
          "em",
          "Function"
        ]
      ],
      [
        "p",
        "回调函数，用于格式化图例每项的文本显示。"
      ],
      [
        "h3",
        "14、marker \t",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，用于设置图例的 marker 样式，默认按照 geom 的类型显示。\n可选项如下:"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "type"
            ],
            [
              "th",
              "shape"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "circle"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/circle.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "square"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/square.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "bowtie"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/bowtie.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "diamond"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/diamond.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hexagon"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hexagon.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "triangle"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/triangle.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "triangle-down"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/triangle-down.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "tick"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/tick.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "plus"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/plus.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hyphen"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hyphen.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "line"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/line.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowCircle"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowCircle.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowSquare"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowSquare.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowBowtie"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowBowtie.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowDiamond"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowDiamond.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowHexagon"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowHexagon.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowTriangle"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowTriangle.png",
                  "alt": null
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "hollowTriangle-down"
            ],
            [
              "td",
              [
                "img",
                {
                  "title": null,
                  "src": "https://antv.alipay.com/assets/image/g2/tutorial/hollowTriangle-down.png",
                  "alt": null
                }
              ]
            ]
          ]
        ]
      ],
      [
        "h3",
        "15、textStyle \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "图例的背景样式配置。参考",
        [
          "a",
          {
            "title": null,
            "href": "./graphic.md"
          },
          "绘图属性"
        ],
        "Text的样式"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Legend name=\"genre\" textStyle={{\n  textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n  fill: '#404040', // 文本的颜色\n  fontSize: '12', // 文本大小\n  fontWeight: 'bold', // 文本粗细\n  rotate: 30, // 文本旋转角度，以角度为单位，仅当 autoRotate 为 false 时生效\n  textBaseline: 'top' // 文本基准线，可取 top middle bottom，默认为middle\n}} />"
        ]
      ],
      [
        "h3",
        "16、clickable \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，设置图例项是否允许点击，默认为 true，即允许点击。"
      ],
      [
        "h3",
        "17、hoverable ",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "对分类类型的图例生效，设置是否开启鼠标 hover 至图例的交互效果，默认为 true，即开启动画。"
      ],
      [
        "h3",
        "18、selectedMode \t",
        [
          "em",
          "'single' | 'multiple'"
        ]
      ],
      [
        "p",
        "针对分类类型图例，当 clickable 为 true 时该配置项生效，用于设置图例的选中交互模式，可配置的属性:"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "selectedMode: 'single'：表示开启单选模式；"
          ]
        ],
        [
          "li",
          [
            "p",
            "selectedMode: 'multiple'：表示开启多选模式，默认为 multiple。"
          ]
        ]
      ],
      [
        "h3",
        "19、onHover \t",
        [
          "em",
          "Function"
        ]
      ],
      [
        "p",
        "针对分类类型的图例，用于自定义鼠标 hover 图例项的交互，当 hoverable 为 false 不生效。"
      ],
      [
        "h3",
        "20、onClick \t",
        [
          "em",
          "Function"
        ]
      ],
      [
        "p",
        "针对分类类型的图例，用于自定义鼠标点击图例项的交互，当 clickable 为 false 不生效。"
      ],
      [
        "h2",
        "分类 html 自定义图例"
      ],
      [
        "p",
        "分类 html 自定义图例大部分属性跟分类图例是一样的，需要额外设置以下属性。"
      ],
      [
        "h3",
        "1、useHtml ",
        [
          "em",
          "Boolean | Function"
        ]
      ],
      [
        "p",
        "针对分类类型图例，用于开启是否使用 html 渲染图例，默认为 false，true 表示使用 html 渲染图例。"
      ],
      [
        "h3",
        "2、container ",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "当 useHtml 为 true 时生效，用于指定生成图例的 dom 容器，那么该值必须为 dom 容器的 id 值为分类类型的话，则支持传入索引值。"
      ],
      [
        "h3",
        "3、containerTpl ",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "当 useHtml 为 true 时生效，用于指定图例容器的模板，默认值如下："
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "<!-- 图例最外层容器 -->\n<div class=\"g2-legend\" style=\"position:absolute;top:20px;right:60px;width:auto;\">\n  <!-- 图例标题 -->\n  <h4 class=\"g2-legend-title\"></h4>\n  <!-- 图例项列表容器 -->\n  <ul class=\"g2-legend-item-list\" style=\"list-style-type:none;margin:0;padding:0;\"></ul>\n</div>"
        ]
      ],
      [
        "h3",
        "4、itemTpl ",
        [
          "em",
          "String | Function"
        ]
      ],
      [
        "p",
        "当 useHtml 为 true 时生效，用于指定生成图例的图例项 html 模板，默认值如下："
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "<!-- 图例最外层容器 -->\n<li class=\"g2-legend-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\" style=\"cursor: pointer;font-size: 14px;\">\n  <!-- marker -->\n  <i class=\"g2-legend-marker\" style=\"width:10px;height:10px;border-radius:50%;display:inline-block;margin-right:10px;background-color: {color};\"></i>\n  <!-- 图例项文本 -->\n  <span class=\"g2-legend-text\">{value}</span>\n</li>"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "!注意：自定义模板时必须包含各个 dom 节点的 class，样式可以自定义。"
        ],
        [
          "h3",
          "5、g2-legend | g2-legend-item | g2-legend-list-item | g2-legend-marker | g2-legend-text |  ",
          [
            "em",
            "Object"
          ]
        ],
        [
          "p",
          "当用户使用html时，可以通过向",
          [
            "legend"
          ],
          " 组件传递 html原生支持的的class名来修改模板样式；"
        ],
        [
          "pre",
          {
            "lang": "jsx"
          },
          [
            "code",
            "<Legend position='bottom'\n  useHtml={true}\n  g2-legend = {{\n    marginLeft: '100px',\n    marginTop: '-107px'\n  }}\n  g2-legend-list={{\n    border: 'none'\n  }}\n/>"
          ]
        ],
        [
          "p",
          "demo详情，请",
          [
            "a",
            {
              "title": null,
              "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/other/cutomize-legend"
            },
            "点击这里"
          ]
        ]
      ],
      [
        "h3",
        "6、scroll ",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "当用户使用 html 的时候，超出高度或者宽度会自动换行。"
      ],
      [
        "h2",
        "连续图例"
      ],
      [
        "p",
        "连续图例部分属性跟分类图例是一样的(name, position, offsetX, offsetY, title)，需要额外设置以下属性。"
      ],
      [
        "h3",
        "1、slidable \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "针对连续图例，用于设置连续图例是否允许滑动，默认为 true，即开启滑动操作。"
      ],
      [
        "h3",
        "2、width \t",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "针对连续图例，用于设置图例的宽度。"
      ],
      [
        "h3",
        "2、height ",
        [
          "em",
          "Number"
        ]
      ],
      [
        "p",
        "针对连续图例，用于设置图例的高度。"
      ],
      [
        "h2",
        "自定义混合图例"
      ],
      [
        "p",
        "自定义图例大部分属性跟普通图例一样，需要额外配置的属性有。"
      ],
      [
        "h3",
        "1、custom \t",
        [
          "em",
          "Boolean"
        ]
      ],
      [
        "p",
        "默认为 false，当 custom 为 true，表示不使用默认生成的图例，允许用户自定义图例，包括具体的图例项以及 click、hover 交互。"
      ],
      [
        "p",
        "自定义图例时需要用户自己声明具体的图例项 items(该属性是一个对象数组，数组中每一项为一个对象类型，结构为： { value: '', marker:{fill: 'red'}})以及图例项的 hover 和 click 事件。"
      ],
      [
        "h3",
        "2、items \t",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "自定义图例的配置。需要用户自己声明具体的图例项（每个图例项结构为 { value: '', fill: '', marker: '' }）以及图例项的 hover 和 click 事件。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Legend\n  custom={true},\n  items={[\n    { value: 'waiting', fill: '#3182bd', marker: 'shape' },\n    { value: 'call', fill: '#99d8c9', marker: 'shape' },\n    { value: 'people', fill: '#fdae6b', marker: 'shape' },\n  ]}\n  onHover={ev => {}} // 自定义 hover 事件\n  onClick={ev => {}} // 自定义 click 事件\n/>"
        ]
      ],
      [
        "h2",
        [
          "a",
          {
            "title": null,
            "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/other/double-axes"
          },
          "示例"
        ]
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 略...\n<Chart height={400} data={dv} scale={cols} forceFit>\n  <Axis name=\"month\" />\n  <Axis name=\"temperature\" label={{formatter: val => `${val}°C`}}/>\n  <Legend />\n  <Tooltip crosshairs={{type : \"y\"}}/>\n  <Geom type=\"line\" position=\"month*temperature\" size={2} color={'city'} />\n  <Geom type='point' position=\"month*temperature\" size={4} shape={'circle'} color={'city'} style={{ stroke: '#fff', lineWidth: 1}} />\n</Chart>"
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://img.alicdn.com/tfs/TB1..5Ma8fH8KJjy1XbXXbLdXXa-1600-856.png",
            "alt": "image | left "
          }
        ]
      ]
    ]
  },
  {
    "filename": "api/scale.md",
    "path": "api/scale",
    "jsonml": [
      "article",
      [
        "h1",
        "scale 度量"
      ],
      [
        "p",
        "度量 Scale，是数据空间到图形空间的转换桥梁，负责原始数据到 ",
        [
          "span",
          "0, 1"
        ],
        " 区间数值的相互转换工作。针对不同的数据类型对应不同类型的度量。"
      ],
      [
        "h2",
        "度量分类"
      ],
      [
        "p",
        "度量的类型是由原始数据的值类型所决定的，所以在介绍度量的类型之前，需要了解下 BizCharts 对数据的分类方式。"
      ],
      [
        "p",
        "根据数据的类型，支持以下几种度量类型："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "strong",
              "identity"
            ],
            "，常量类型的数值，也就是说数据的某个字段是不变的常量；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "linear"
            ],
            "，连续的数字 ",
            [
              "span",
              "1,2,3,4,5"
            ],
            "；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "cat"
            ],
            "，分类, ",
            [
              "span",
              "'男','女'"
            ],
            "；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "time"
            ],
            "，连续的时间类型；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "timeCat"
            ],
            "，非连续的时间，比如股票的时间不包括周末或者未开盘的日期；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "log"
            ],
            "，连续非线性的 Log 数据 将 ",
            [
              "span",
              "1,10,100,1000"
            ],
            " 转换成",
            [
              "span",
              "0,1,2,3"
            ],
            "；"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "strong",
              "pow"
            ],
            "，连续非线性的 pow 数据 将 ",
            [
              "span",
              "2,4,8,16,32"
            ],
            " 转换成 ",
            [
              "span",
              "1,2,3,4,5"
            ],
            "。"
          ]
        ]
      ],
      [
        "h2",
        "使用示例:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "var data = [\n  {\"month\":\"一月\",\"temperature\":7,\"city\":\"tokyo\"},\n  {\"month\":\"二月\",\"temperature\":6.9,\"city\":\"newYork\"},\n  {\"month\":\"三月\",\"temperature\":9.5,\"city\":\"tokyo\"},\n  {\"month\":\"四月\",\"temperature\":14.5,\"city\":\"tokyo\"},\n  {\"month\":\"五月\",\"temperature\":18.2,\"city\":\"berlin\"}\n]\nvar scale = {\n  month: {\n    alias: '月份' // 为属性定义别名\n  },\n  temperature: {\n    alias: '温度' // 为属性定义别名\n  }\n};\n<Chart scale={scale}/>"
        ]
      ],
      [
        "p",
        "在上述数据中，",
        [
          "code",
          "month"
        ],
        " 代表月份，",
        [
          "code",
          "temperature"
        ],
        " 代表温度，",
        [
          "code",
          "city"
        ],
        " 代表城市，其中 ",
        [
          "code",
          "month"
        ],
        " 和 ",
        [
          "code",
          "city"
        ],
        " 都是分类类型数据，但是不同的是 ",
        [
          "code",
          "month"
        ],
        " 作为月份是有序的分类类型，而 ",
        [
          "code",
          "city"
        ],
        " 是无序的分类类型，而 ",
        [
          "code",
          "temperature"
        ],
        " 是连续的数值类型。"
      ],
      [
        "p",
        "对于 BizCharts 生成的所有度量对象，均拥有以下属性，这些属性均可以由用户进行配置。"
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "{\n  type: string, // 度量的类型\n  range: array, // 数值范围区间，即度量转换的范围，默认为 [0, 1]\n  alias: string, // 为数据属性定义别名，用于图例、坐标轴、tooltip 的个性化显示\n  ticks: array, // 存储坐标轴上的刻度点文本信息\n  tickCount: number, // 坐标轴上刻度点的个数，不同的度量类型对应不同的默认值\n  formatter: function, // 回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴、图例、tooltip 上的显示\n}"
        ]
      ],
      [
        "h2",
        "Scale 类型详解"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "linear"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "linear"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "nice"
            ],
            [
              "td",
              "默认为 true，用于优化数值范围，使绘制的坐标轴刻度线均匀分布。例如原始数据的范围为 ",
              [
                "span",
                "3, 97"
              ],
              "，如果 nice 为 true，那么就会将数值范围调整为 ",
              [
                "span",
                "0, 100"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "定义数值范围的最小值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "定义数值范围的最大值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "定义坐标轴刻度线的条数，默认为 5"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickInterval"
            ],
            [
              "td",
              "用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，",
              [
                "strong",
                "tickCount 和 tickInterval 不可以同时声明。"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "cat"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "cat"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "定义坐标轴刻度线的条数，默认为 5"
            ]
          ],
          [
            "tr",
            [
              "td",
              "values"
            ],
            [
              "td",
              "具体的分类的值，一般用于指定具体的顺序和枚举的对应关系"
            ]
          ]
        ]
      ],
      [
        "p",
        [
          "code",
          "values"
        ],
        " 属性常用于 2 个场景："
      ],
      [
        "ol",
        [
          "li",
          [
            "p",
            "需要制定分类的顺序时，例如：c 字段有'最大','最小'和'适中'3种类型，我们想指定这些数值在坐标轴或者图例上的显示顺序时："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const defs = {\n  'c': {\n    type: 'cat',\n    values: [ '最小','适中','最大' ]\n  }\n};"
        ]
      ],
      [
        "ol",
        [
          "li",
          [
            "p",
            "数据字段中的数据是数值类型，但是需要转换成分类类型，",
            [
              "strong",
              "这个时候需要注意原始数据必须是索引值"
            ],
            "。"
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const data = [\n  { month: 0, tem: 7, city: \"tokyo\" },\n  { month: 1, tem: 6.9, city: \"tokyo\" },\n  { month: 2, tem: 9.5, city: \"tokyo\" },\n  { month: 3, tem: 14.5, city: \"tokyo\" },\n  { month: 4, tem: 18.2, city: \"tokyo\" },\n  { month: 5, tem: 21.5, city: \"tokyo\" },\n  { month: 6, tem: 25.2, city: \"tokyo\" }\n];\nconst defs = {\n  'month':{\n    type: 'cat',\n    values: [ '一月','二月','三月','四月','五月','六月','七月' ] // 这时候 month 的原始值是索引值\n  }\n};\n\nconst chart = new G2.Chart({\n  id: 'c1',\n  width: 400,\n  height: 250\n});\nchart.source(data,defs);\nchart.interval().position('month*tem').color('month');\nchart.render();"
        ]
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/97e5078a-45b9-4db6-8d51-db506eaa2444/attach/3378/1aea882afb2ef64d/image.png",
            "alt": "image"
          }
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "log"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "log"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "nice"
            ],
            [
              "td",
              "是否将 ticks 进行优化，变更数据的最小值、最大值，使得每个 tick 都是用户易于理解的数据"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "最小值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "最大值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "base"
            ],
            [
              "td",
              "Log 的基数，默认是2"
            ]
          ],
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "定义坐标轴刻度线的条数，默认为 5"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickInterval"
            ],
            [
              "td",
              "用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，",
              [
                "strong",
                "tickCount 和 tickInterval 不可以同时声明。"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        "注：最小值和最大值悬殊非常大时可以用 log 平滑一下数据。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "pow"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "pow"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "nice"
            ],
            [
              "td",
              "是否将 ticks 进行优化，变更数据的最小值、最大值，使得每个 tick 都是用户易于理解的数据"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "最小值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "最大值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "exponent"
            ],
            [
              "td",
              "指数，默认 2"
            ]
          ],
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "定义坐标轴刻度线的条数，默认为 5"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickInterval"
            ],
            [
              "td",
              "用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，",
              [
                "strong",
                "tickCount 和 tickInterval 不可以同时声明。"
              ]
            ]
          ]
        ]
      ],
      [
        "p",
        "注：最小值和最大值悬殊非常大时可以用 pow 平滑一下数据。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "time"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "time"
      ],
      [
        "p",
        "是 linear 度量的一种，连续的时间度量类型，",
        [
          "strong",
          "默认会对数据做排序"
        ],
        "。"
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "nice"
            ],
            [
              "td",
              "是否将 ticks 进行优化，变更数据的最小值、最大值，使得每个 tick 都是用户易于理解的数据"
            ]
          ],
          [
            "tr",
            [
              "td",
              "min"
            ],
            [
              "td",
              "最小值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "max"
            ],
            [
              "td",
              "最大值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "mask"
            ],
            [
              "td",
              "数据的格式化格式 默认：'yyyy-mm-dd',"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "坐标点的个数，默认是 5，但不一定是准确值。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickInterval"
            ],
            [
              "td",
              "用于指定坐标轴各个标度点的间距，是原始数据之间的间距差值，",
              [
                "strong",
                "time 类型需要转换成时间戳"
              ],
              "，",
              [
                "strong",
                "tickCount 和 tickInterval 不可以同时声明。"
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ]
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "说明：mask 的占位符标准同 ",
          [
            "a",
            {
              "title": null,
              "href": "https://momentjs.com/docs/#/displaying/format/"
            },
            "moment"
          ],
          ";"
        ]
      ],
      [
        "p",
        "目前 G2 会自动识别如下形式的时间格式，当用户需要生成 time 类型的度量时，建议将原始时间数据转换为如下形式："
      ],
      [
        "ol",
        [
          "li",
          [
            "p",
            "时间戳，如 1436237115500；"
          ]
        ],
        [
          "li",
          [
            "p",
            "时间字符串： '2015-03-01'，'2015-03-01 12:01:40'，'2015/01/05'，'2015-03-01T16:00:00.000Z'。"
          ]
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "timeCat"
          }
        ],
        " ",
        [
          ""
        ]
      ],
      [
        "h3",
        "timeCat"
      ],
      [
        "p",
        "时间分类类型，是一种分类类型的时间度量类型，",
        [
          "strong",
          "默认会对数据做排序"
        ],
        "。timeCat 不同于 time，是一种有序的分类数据。"
      ],
      [
        "p",
        "例如股票交易的日期，此时如果使用 time 类型，那么由于节假日没有数据，折线图、k 线图就会发生断裂，所以此时需要使用 timeCat 类型度量将日期转换为有序的分类数据，该度量默认会对数据做排序，如下图所示："
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/27036dff-5843-48a4-95f5-53b56f8b2d9a/attach/3378/0940215d294981b8/image.png",
            "alt": "image"
          }
        ]
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "属性名"
            ],
            [
              "th",
              "说明"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "nice"
            ],
            [
              "td",
              "是否将 ticks 进行优化，变更数据的最小值、最大值，使得每个 tick 都是用户易于理解的数据"
            ]
          ],
          [
            "tr",
            [
              "td",
              "mask"
            ],
            [
              "td",
              "数据的格式化格式 默认：'yyyy-mm-dd',"
            ]
          ],
          [
            "tr",
            [
              "td",
              "tickCount"
            ],
            [
              "td",
              "坐标点的个数，默认是5。但不一定是准确值"
            ]
          ],
          [
            "tr",
            [
              "td",
              "values"
            ],
            [
              "td",
              "具体的分类的值，一般用于指定具体的顺序和枚举的对应关系"
            ]
          ],
          [
            "tr",
            [
              "td",
              "alias"
            ],
            [
              "td",
              "别名"
            ]
          ],
          [
            "tr",
            [
              "td",
              "range"
            ],
            [
              "td",
              "输出数据的范围，默认",
              [
                "span",
                "0, 1"
              ],
              "，格式为 ",
              [
                "span",
                "min, max"
              ],
              "，min 和 max 均为 0 至 1 范围的数据。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "formatter"
            ],
            [
              "td",
              "回调函数，用于格式化坐标轴刻度点的文本显示，会影响数据在坐标轴 axis、图例 legend、tooltip 上的显示。"
            ]
          ],
          [
            "tr",
            [
              "td",
              "ticks"
            ],
            [
              "td",
              "用于指定坐标轴上刻度点的文本信息，当用户设置了 ticks 就会按照 ticks 的个数和文本来显示。"
            ]
          ]
        ]
      ]
    ]
  },
  {
    "filename": "api/shape.md",
    "path": "api/shape",
    "jsonml": [
      "article",
      [
        "h1",
        "shape"
      ],
      [
        "p",
        "几何图形，BizCharts 中保留了 G2 提供的十多个几何图形，同时也支持用户通过 ",
        [
          "code",
          "Shape"
        ],
        " 上的接口自定义几何图形。"
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "p",
        "自定义 ",
        [
          "code",
          "Shape"
        ],
        " 的使用如下："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "var Shape = BizCharts.Shape;\n//往对应的 geomType 上注册名字为 shapeName 的 Shape\nvar shapeObj = Shape.registerShape('geomType', 'shapeName', {\n  getPoints: function(pointInfo) {\n    // 获取每种 shape 绘制的关键点\n  },\n  draw: function(cfg, container) {\n    // 自定义最终绘制的逻辑\n  }\n});\n\nReactDOM.render((\n <Chart>\n   //在对应 geomType 的 <Geom /> 中使用注册过的名字为 shapeName 几何图形\n   <Geom type='interval' shape='shapeName' />\n </Chart>\n), container)"
        ]
      ],
      [
        "h2",
        "方法"
      ],
      [
        "h3",
        "getPoints"
      ],
      [
        "p",
        [
          "code",
          "getPoints"
        ],
        " 方法用于计算绘制每种 shape 的关键点，在 G2 中每种几何形状都是由特定的几个关键点通过线连接而成。"
      ],
      [
        "p",
        [
          "code",
          "getPoints"
        ],
        " 方法中传入的参数 pointInfo 数据结构如下，所有的数值都是归一化后的结果（即 0 至 1 范围内的数据）："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "{\n  size: 0.1, // 形状的尺寸，不同的 shape 该含义不同，0 - 1 范围的数据\n  x: 0.2, // 该点归一化后的 x 坐标\n  y: 0.13, // 该点归一化后的 y 坐标\n  y0: 0.1 // 整个数据集 y 轴对应数据的最小值，也是归一化后的数据，注意如果 y 对应的源数据是数组则 y 也将是个数组\n}"
        ]
      ],
      [
        "p",
        "下表列出了 G2 各个 geom 几何形状的关键点形成机制："
      ],
      [
        "table",
        [
          "thead",
          [
            "tr",
            [
              "th",
              "geom 类型"
            ],
            [
              "th",
              "解释"
            ]
          ]
        ],
        [
          "tbody",
          [
            "tr",
            [
              "td",
              "point"
            ],
            [
              "td",
              "点的绘制很简单，只要获取它的坐标以及大小即可，其中的 ",
              [
                "code",
                "size"
              ],
              " 属性代表的是点的半径。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/940c75cf-8400-415a-9e2d-040ce46e6a03/attach/3378/269e0e2c77a555a5/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "line"
            ],
            [
              "td",
              "线其实是由无数个点组成，在 G2 中我们将参与绘制的各个数据转换成坐标上的点然后通过线将逐个点连接而成形成线图，其中的 ",
              [
                "code",
                "size"
              ],
              " 属性代表的是线的粗细。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/f9b84b83-1cc8-4b81-9319-f643ef0e280a/attach/3378/d49e02be2f48a136/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "area"
            ],
            [
              "td",
              "area 面其实是在 line 线的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/dbcd60f3-7662-4ebd-8e0e-85d7d754d0c7/attach/3378/f67277978d5d8e3e/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "interval"
            ],
            [
              "td",
              "interval 默认的图形形状是矩形，而矩形实际是由四个点组成的，在 G2 中我们根据 pointInfo 中的 x、y、size 以及 y0 这四个值来计算出这四个点，然后顺时针连接而成。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/f36a2e27-13e8-4d55-8c93-b698e15bcc1f/attach/3378/94a6515e2eb60265/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "polygon"
            ],
            [
              "td",
              "polygon 多边形其实也是由多个点连接而成，在 pointInfo 中 x 和 y 都是数组结构。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/b4f6981c-ccd3-4237-97bd-dd88950758ea/attach/3378/ed2b5c05a1ff3581/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "schema"
            ],
            [
              "td",
              "schema 作为一种自定义的几何图形，在 G2 中默认提供了 box 和 candle 两种 shape，分别用于绘制箱型图和股票图，注意这两种形状的矩形部分四个点的连接顺序都是顺时针，并且起始点均为左下角，这样就可以无缝转换至极坐标。",
              [
                "br"
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/340c229d-be30-4f98-8a2a-8d55c8422645/attach/3378/1bfed6f3f5f90e13/image.png",
                  "alt": "image"
                }
              ],
              [
                "img",
                {
                  "title": null,
                  "src": "https://zos.alipayobjects.com/skylark/8afa13da-95d1-4282-a08b-f1c421b0d972/attach/3378/d82c45d3a526bd80/image.png",
                  "alt": "image"
                }
              ]
            ]
          ],
          [
            "tr",
            [
              "td",
              "edge"
            ],
            [
              "td",
              "edge 边同 line 线一致，区别就是 edge 是一个线段，连接边的两个端点即可。"
            ]
          ]
        ]
      ],
      [
        "h3",
        "draw"
      ],
      [
        "p",
        [
          "code",
          "getPoints"
        ],
        " 用于计算绘制 shape 的关键点，那么 ",
        [
          "code",
          "draw"
        ],
        " 方法就是用来定义如何连接这些关键点的。"
      ],
      [
        "h4",
        "参数"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "cfg"
            ],
            ": object"
          ]
        ]
      ],
      [
        "p",
        "该参数包含经过图形映射后的所有数据以及该数据对应的原始数据，结构如下图所示："
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/505c6cb1-fde7-4714-98b6-43cb77099f19/attach/3378/332f7e3e64bc48f5/image.png",
            "alt": "image"
          }
        ]
      ],
      [
        "p",
        "原始数据存储于 cfg.origin._origin 中，通过 getPoints 计算出的图形关键点都储存于 points 中。而 cfg 对象中的 color、size、shape 都是通过映射之后的图形属性数据，可以直接使用。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "container"
            ],
            ": G2.G.Group"
          ]
        ]
      ],
      [
        "p",
        "图形容器，需要将自定义的 shape 加入该容器中才能最终渲染出来。"
      ],
      [
        "p",
        [
          "strong",
          "另外我们还提供了一些工具类方法，帮助用户快速将归一化后的数据转换为画布上的坐标"
        ],
        "，使用的时候直接在上述两个方法内通过如下方式调用即可："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "Shape.registerShape('interval', 'rect', {\n  getPoints(pointInfo) {\n    // ...\n  },\n  draw(cfg, container) {\n    // ...\n    path = this.parsePath(path);\n    // ...\n  }\n});"
        ]
      ],
      [
        "h3",
        "parsePoint"
      ],
      [
        "p",
        "方法名： ",
        [
          "code",
          "shapeObj.parsePoint(point)"
        ]
      ],
      [
        "p",
        "说明：将 0 - 1 范围内的点转化为画布上的实际坐标。"
      ],
      [
        "h4",
        "参数"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "point"
            ],
            ": object"
          ]
        ]
      ],
      [
        "p",
        "结构如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "{\n  x: 0.3,\n  y: 0.34\n}"
        ]
      ],
      [
        "h3",
        "parsePoints"
      ],
      [
        "p",
        "方法名：",
        [
          "code",
          "shapeObj.parsePoints(points)"
        ]
      ],
      [
        "p",
        "说明：将一组 0 - 1 范围内的点转化为画布上的实际坐标。"
      ],
      [
        "h4",
        "参数"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "point"
            ],
            ": Array"
          ]
        ]
      ],
      [
        "p",
        "结构如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "[\n  { x: 0.3, y: 0.34 },\n  { x: 0.3, y: 0.34 }\n]"
        ]
      ],
      [
        "h3",
        "parsePath"
      ],
      [
        "p",
        "方法名：",
        [
          "code",
          "shapeObj.parsePath(path, isCircle)"
        ]
      ],
      [
        "p",
        "说明：将形状的关键点连接之后形成的 path，如果依然是归一化后的数据的话，就可以调用该方法将其转化了画布上的坐标值。"
      ],
      [
        "h4",
        "参数"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "path"
            ],
            ": String"
          ]
        ]
      ],
      [
        "p",
        "连接各个关键的路径，例如：'M0 0C0,0,0.0315...5785,0,0.675,0,0.675z'。"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "isCircle"
            ],
            ": Boolean"
          ]
        ]
      ],
      [
        "p",
        "是否是极坐标。如果是极坐标，该方法会自动进行转曲。"
      ],
      [
        "h4",
        "代码示例"
      ],
      [
        "p",
        "下面通过一个例子来加深下理解。"
      ],
      [
        "div",
        {
          "id": "c1"
        }
      ],
      [
        "pre",
        {
          "lang": "js+"
        },
        [
          "code",
          "const Shape = G2.Shape;\nShape.registerShape('interval', 'triangle', {\n  getPoints(cfg) {\n    const x = cfg.x;\n    const y = cfg.y;\n    const y0 = cfg.y0;\n    const width = cfg.size;\n    return [\n      { x: x - width / 2, y: y0 },\n      { x: x, y: y },\n      { x: x + width / 2, y: y0 }\n    ]\n  },\n  draw(cfg, group) {\n    const points = this.parsePoints(cfg.points); // 将0-1空间的坐标转换为画布坐标\n    const polygon = group.addShape('polygon', {\n      attrs: {\n        points: [\n          [ points[0].x, points[0].y ],\n          [ points[1].x, points[1].y ],\n          [ points[2].x, points[2].y ]\n        ],\n        fill: cfg.color\n      }\n    });\n    return polygon; // 将自定义Shape返回\n  }\n});\n\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 }\n];\n\nconst chart = new G2.Chart({\n  id: 'c1',\n  height : 300,\n  forceFit: true,\n});\n\nchart.source(data);\nchart.interval().position('genre*sold').color('genre').shape('triangle');\nchart.render();"
        ]
      ],
      [
        "p",
        "自定义 Shape 的完整代码如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const Shape = G2.Shape;\nShape.registerShape('interval', 'triangle', {\n  getPoints(cfg) {\n    const x cfg.x;\n    const y = cfg.y;\n    const y0 = cfg.y0;\n    const width = cfg.size;\n    return [\n      { x: x - width / 2, y: y0 },\n      { x: x, y: y },\n      { x: x + width / 2, y: y0 }\n    ]\n  },\n  draw(cfg, group) {\n    const points = this.parsePoints(cfg.points); // 将0-1空间的坐标转换为画布坐标\n    const polygon = group.addShape('polygon', {\n      attrs: {\n        points: [\n          [ points[0].x, points[0].y ],\n          [ points[1].x, points[1].y ],\n          [ points[2].x, points[2].y ]\n        ],\n        fill: cfg.color\n      }\n    });\n    return polygon; // 将自定义Shape返回\n  }\n});"
        ]
      ]
    ]
  },
  {
    "filename": "api/theme.md",
    "path": "api/theme",
    "jsonml": [
      "article",
      [
        "h1",
        "Theme"
      ],
      [
        "p",
        "以下是默认主题的详细样式，你可以根据这些主题样式属性自定义主题。"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "const DEFAULT_COLOR = '#1890FF';\nconst COLOR_PLATE_8 = [ '#1890FF', '#2FC25B', '#FACC14', '#223273', '#8543E0', '#13C2C2', '#3436C7', '#F04864' ];\nconst COLOR_PLATE_16 = [ '#1890FF', '#41D9C7', '#2FC25B', '#FACC14', '#E6965C', '#223273', '#7564CC', '#8543E0',\n  '#5C8EE6', '#13C2C2', '#5CA3E6', '#3436C7', '#B381E6', '#F04864', '#D598D9' ];\nconst COLOR_PLATE_24 = [ '#1890FF', '#66B5FF', '#41D9C7', '#2FC25B', '#6EDB8F', '#9AE65C', '#FACC14', '#E6965C',\n  '#57AD71', '#223273', '#738AE6', '#7564CC', '#8543E0', '#A877ED', '#5C8EE6', '#13C2C2', '#70E0E0', '#5CA3E6',\n  '#3436C7', '#8082FF', '#DD81E6', '#F04864', '#FA7D92', '#D598D9' ];\nconst COLOR_PIE = [ '#1890FF', '#13C2C2', '#2FC25B', '#FACC14', '#F04864', '#8543E0', '#3436C7', '#223273' ];\nconst COLOR_PIE_16 = [ '#1890FF', '#73C9E6', '#13C2C2', '#6CD9B3', '#2FC25B', '#9DD96C', '#FACC14', '#E6965C',\n  '#F04864', '#D66BCA', '#8543E0', '#8E77ED', '#3436C7', '#737EE6', '#223273', '#7EA2E6' ];\n\nconst FONT_FAMILY = '\"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"sans-serif\"';\n// tooltip's dom element classname\nconst TOOLTIP_CONTAINER_CLASS = 'g2-tooltip';\nconst TOOLTIP_TITLE_CLASS = 'g2-tooltip-title';\nconst TOOLTIP_LIST_CLASS = 'g2-tooltip-list';\nconst TOOLTIP_LIST_ITEM_CLASS = 'g2-tooltip-list-item';\nconst TOOLTIP_MARKER_CLASS = 'g2-tooltip-marker';\n\nconst Theme = {\n  defaultColor: DEFAULT_COLOR, // default theme color\n  plotCfg: {\n    padding: [ 20, 20, 95, 80 ]\n  },\n  fontFamily: FONT_FAMILY,\n  defaultLegendPosition: 'bottom',\n  colors: COLOR_PLATE_8,\n  colors_16: COLOR_PLATE_16,\n  colors_24: COLOR_PLATE_24,\n  colors_pie: COLOR_PIE,\n  colors_pie_16: COLOR_PIE_16,\n  shapes: {\n    point: [ 'hollowCircle', 'hollowSquare', 'hollowDiamond', 'hollowBowtie', 'hollowTriangle',\n      'hollowHexagon', 'cross', 'tick', 'plus', 'hyphen', 'line' ],\n    line: [ 'line', 'dash', 'dot' ],\n    area: [ 'area' ]\n  },\n  markerRadius: 4,\n  sizes: [ 1, 10 ],\n  opacities: [ 0.1, 0.9 ],\n  axis: {\n    top: {\n      position: 'top',\n      title: null,\n      label: {\n        offset: 14,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 20,\n          textBaseline: 'middle'\n        },\n        autoRotate: true\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4\n      }\n    },\n    bottom: {\n      position: 'bottom',\n      title: null,\n      label: {\n        offset: 22,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 20,\n          textBaseline: 'middle'\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4\n      }\n    },\n    left: {\n      position: 'left',\n      title: null,\n      label: {\n        offset: 12,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 20,\n          textBaseline: 'middle'\n        }\n      },\n      line: null,\n      tickLine: null,\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [ 3, 3 ]\n        },\n        hideFirstLine: true\n      }\n    },\n    right: {\n      position: 'right',\n      title: null,\n      label: {\n        offset: 12,\n        autoRotate: true,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 20,\n          textBaseline: 'middle'\n        }\n      },\n      line: null,\n      tickLine: null,\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [ 3, 3 ]\n        },\n        hideFirstLine: true\n      }\n    },\n    circle: {\n      zIndex: 1,\n      title: null,\n      label: {\n        offset: 12,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          lineHeight: 20\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [ 3, 3 ]\n        },\n        hideFirstLine: true\n      }\n    },\n    radius: {\n      zIndex: 0,\n      label: {\n        offset: 12,\n        textStyle: {\n          fill: '#545454',\n          fontSize: 12,\n          textBaseline: 'middle',\n          lineHeight: 20\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#BFBFBF',\n        length: 4\n      },\n      grid: {\n        lineStyle: {\n          stroke: '#E9E9E9',\n          lineWidth: 1,\n          lineDash: [ 3, 3 ]\n        },\n        type: 'circle'\n      }\n    },\n    helix: {\n      grid: null,\n      label: null,\n      title: null,\n      line: {\n        lineWidth: 1,\n        stroke: '#BFBFBF'\n      },\n      tickLine: {\n        lineWidth: 1,\n        length: 4,\n        stroke: '#BFBFBF'\n      }\n    }\n  },\n  label: {\n    offset: 20,\n    textStyle: {\n      fill: '#545454',\n      fontSize: 12,\n      textBaseline: 'middle'\n    }\n  },\n  treemapLabels: {\n    offset: 10,\n    textStyle: {\n      fill: '#fff',\n      fontSize: 12,\n      textBaseline: 'top',\n      fontStyle: 'bold'\n    }\n  },\n  innerLabels: {\n    textStyle: {\n      fill: '#fff',\n      fontSize: 12,\n      textBaseline: 'middle'\n    }\n  },\n  // 在theta坐标系下的饼图文本内部的样式\n  thetaLabels: {\n    labelLine: {\n      lineWidth: 1\n    },\n    labelHeight: 14,\n    offset: 30\n  },\n  legend: {\n    right: {\n      position: 'right',\n      layout: 'vertical',\n      itemMarginBottom: 8,\n      width: 16,\n      height: 156,\n      title: null,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20\n      }, // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    left: {\n      position: 'left',\n      layout: 'vertical',\n      itemMarginBottom: 8,\n      width: 16,\n      height: 156,\n      title: null,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20\n      }, // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    top: {\n      position: 'top',\n      offset: 6,\n      layout: 'horizontal',\n      title: null,\n      itemGap: 10,\n      width: 156,\n      height: 16,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20\n      }, // 图例项文本的样式\n      unCheckColor: '#bfbfbf'\n    },\n    bottom: {\n      position: 'bottom',\n      offset: 58,\n      layout: 'horizontal',\n      title: null,\n      itemGap: 24,\n      width: 156,\n      height: 16,\n      textStyle: {\n        fill: '#8C8C8C',\n        fontSize: 12,\n        textAlign: 'start',\n        textBaseline: 'middle',\n        lineHeight: 20\n      },\n      unCheckColor: '#bfbfbf'\n    }\n  },\n  tooltip: {\n    crosshairs: false,\n    offset: 15,\n    // css style for tooltip\n    [`${TOOLTIP_CONTAINER_CLASS}`]: {\n      position: 'absolute',\n      visibility: 'hidden',\n      whiteSpace: 'nowrap',\n      zIndex: 999,\n      transition: 'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), left 0.4s cubic-bezier(0.23, 1, 0.32, 1), top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',\n      backgroundColor: 'rgba(0, 0, 0, 0.65)',\n      borderRadius: '4px',\n      color: 'rgb(255, 255, 255)',\n      fontSize: '12px',\n      fontFamily: FONT_FAMILY,\n      lineHeight: '20px',\n      padding: '10px 10px 6px 10px'\n    },\n    [`${TOOLTIP_TITLE_CLASS}`]: {\n      marginBottom: '4px'\n    },\n    [`${TOOLTIP_LIST_CLASS}`]: {\n      margin: 0,\n      listStyleType: 'none',\n      padding: 0\n    },\n    [`${TOOLTIP_LIST_ITEM_CLASS}`]: {\n      marginBottom: '4px'\n    },\n    [`${TOOLTIP_MARKER_CLASS}`]: {\n      width: '7px',\n      height: '7px',\n      borderRadius: '50%',\n      border: '1px solid #fff',\n      display: 'inline-block',\n      marginRight: '8px'\n    }\n  },\n  tooltipMarker: {\n    symbol: (x, y, r, ctx, marker) => {\n      const color = marker.get('color');\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, Math.PI * 2, false);\n      ctx.fill();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.fillStyle = '#fff';\n      ctx.strokeStyle = color;\n      ctx.globalAlpha = 0.3;\n      ctx.lineWidth = 4;\n      ctx.arc(x, y, 7, 0, Math.PI * 2, false);\n      ctx.stroke();\n      ctx.restore();\n    },\n    radius: 4\n  },\n  tooltipCrosshairsRect: {\n    type: 'rect',\n    style: {\n      fill: '#CCD6EC',\n      opacity: 0.3\n    }\n  },\n  tooltipCrosshairsLine: {\n    style: {\n      stroke: 'rgba(0, 0, 0, 0.25)',\n      lineWidth: 1\n    }\n  },\n  shape: {\n    point: {\n      lineWidth: 1,\n      fill: DEFAULT_COLOR,\n      radius: 4\n    },\n    hollowPoint: {\n      fill: '#fff',\n      lineWidth: 1,\n      stroke: DEFAULT_COLOR,\n      radius: 3\n    },\n    interval: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 0.85\n    },\n    pie: {\n      lineWidth: 1,\n      stroke: '#fff'\n    },\n    hollowInterval: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 1\n    },\n    area: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 0.3\n    },\n    polygon: {\n      lineWidth: 0,\n      fill: DEFAULT_COLOR,\n      fillOpacity: 1\n    },\n    hollowPolygon: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 1\n    },\n    hollowArea: {\n      fill: '#fff',\n      stroke: DEFAULT_COLOR,\n      fillOpacity: 0,\n      lineWidth: 1\n    },\n    line: {\n      stroke: DEFAULT_COLOR,\n      lineWidth: 2,\n      fill: null\n    }\n  },\n  guide: {\n    line: {\n      lineStyle: {\n        stroke: DEFAULT_COLOR,\n        lineDash: [ 0, 2, 2 ],\n        lineWidth: 1\n      },\n      text: {\n        position: 'end',\n        autoRotate: true,\n        style: {\n          fill: '#545454',\n          fontSize: 12,\n          textAlign: 'center'\n        }\n      }\n    },\n    text: {\n      style: {\n        fill: '#545454',\n        fontSize: 12,\n        textBaseline: 'middle',\n        textAlign: 'start'\n      }\n    },\n    region: {\n      style: {\n        lineWidth: 0,\n        fill: '#000',\n        fillOpacity: 0.04\n      }\n    },\n    html: {\n      alignX: 'middle',\n      alignY: 'middle'\n    }\n  },\n  pixelRatio: null\n};"
        ]
      ]
    ]
  },
  {
    "filename": "api/tooltip.md",
    "path": "api/tooltip",
    "jsonml": [
      "article",
      [
        "h1",
        "Tooltip"
      ],
      [
        "p",
        "提示信息(tooltip)组件，是指当鼠标悬停在图表上的某点时，以提示框的形式展示该点的数据，比如该点的值，数据单位等。\n",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/VLNhkKRALafPtDCIZFqA.png",
            "width": "415px"
          }
        ]
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "<Tooltip />"
            ],
            " 坐标系组件只可以作为 ",
            [
              "a",
              {
                "title": null,
                "href": "chart.md"
              },
              [
                "code",
                "<Chart />"
              ]
            ],
            " 或 ",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View />"
              ]
            ],
            " 组件的子组件，同时",
            [
              "code",
              "<Tooltip />"
            ],
            "组件下不能嵌套其他图表组件。"
          ]
        ],
        [
          "li",
          [
            "p",
            "BizCharts 当且仅当",
            [
              "code",
              "<Tooltip />"
            ],
            "存在时图表才展示tooltip，如下所示："
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart width={600} height={400} data={data}>\n  <Tooltip /> // 开启图表tooltip功能\n  <Geom type=\"bar\" position=\"genre*sold\" color=\"genre\" />\n</Chart>"
        ]
      ],
      [
        "h2",
        "Tooltip 组成"
      ],
      [
        "p",
        [
          "img",
          {
            "title": null,
            "src": "https://zos.alipayobjects.com/skylark/750725d4-2e58-4420-b886-4abe1c0335c2/attach/2378/ad8fe2daa557ad62/image.png",
            "alt": null
          }
        ]
      ],
      [
        "h1",
        "API"
      ],
      [
        "blockquote",
        [
          "p",
          "BizCharts 将 G2 中 ",
          [
            "em",
            "chart.tooltip(option)"
          ],
          " 中 option 上最顶层的配置属性平坦到了 ",
          [
            "tooltip"
          ],
          " 组件属性上。"
        ]
      ],
      [
        "h3",
        "1、showTitle \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "是否展示提示信息的标题，默认为 true，即展示，通过设置为 false 来隐藏标题。"
      ],
      [
        "h3",
        "2、crosshairs \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "是一个对象类型，用于设置 tooltip 的辅助线或者辅助框。"
      ],
      [
        "p",
        "  默认我们为 geom 为 ‘line’, ‘area’, ‘path’, ‘areaStack’ 开启了垂直辅助线；geom 为‘interval’ 默认会展示矩形背景框。如下图所示："
      ],
      [
        "p",
        "  ",
        [
          "img",
          {
            "src": "https://gw.alipayobjects.com/zos/rmsportal/rCwHiXNfIVepGgMWKqdf.png",
            "style": "width: 100%; max-width: 600px;"
          }
        ]
      ],
      [
        "p",
        "  该属性可支持的配置如下："
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "//可配置值\n//geom为 'line', 'area', 'path', 'areaStack 时默认会展示垂直辅助线\n//geom为 'interval' 默认会展示矩形背景框\n<Tooltip crosshairs={{\n  //rect: 矩形框,x: 水平辅助线,y: 垂直辅助线,cross: 十字辅助线。\n  type: 'rect' || 'x' || 'y' || 'cross',\n  style: {\n    lineWidth:2,\n\t  stroke:\"#ff0000\",\n  }\n}}/> "
        ]
      ],
      [
        "h3",
        "3、offset \t",
        [
          "em",
          " Number "
        ]
      ],
      [
        "p",
        "  设置 tooltip 距离鼠标的偏移量。"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "containerTpl"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "4、containerTpl \t",
        [
          "em",
          " String "
        ]
      ],
      [
        "p",
        "tooltip 默认的容器模板，默认值如下："
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "<div class=\"g2-tooltip\">\n  <!-- tooltip 标题 -->\n  <div class=\"g2-tooltip-title\" style=\"margin:10px 0;\"></div>\n  <!-- tooltip 内容列表容器 -->\n  <ul class=\"g2-tooltip-list\"></ul>\n</div>"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "如默认结构不满足需求，可以自定义该模板，但是",
          [
            "strong",
            "自定义模板时必须包含各个 dom 节点的 class"
          ],
          "，样式可以自定义。"
        ]
      ],
      [
        "p",
        [
          "span",
          {
            "id": "itemTpl"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "5、itemTpl \t",
        [
          "em",
          "String"
        ]
      ],
      [
        "p",
        "tooltip 每项记录的模版，这个属性可以格式化 tooltip 的显示内容。\n默认值:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<li data-index={index}>\n  <!-- 每项记录的 marker -->\n  <span style=\"background-color:{color};width:8px;height:8px;border-radius:50%;display:inline-block;margin-right:8px;\"></span>\n  {name}: {value}\n</li>"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "如默认结构不满足需求，可以自定义该模板，但是",
          [
            "strong",
            "自定义模板时必须包含各个 dom 节点的 class"
          ],
          "，样式可以自定义。"
        ]
      ],
      [
        "h3",
        "6、 g2-tooltip | g2-tooltip-title | g2-tooltip-list | g2-tooltip-list-item | g2-tooltip-marker  ",
        [
          "em",
          "Object"
        ]
      ],
      [
        "p",
        "可以设置以上属性来自定义tooltip的样式"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "    <Tooltip \n      containerTpl='<div class=\"g2-tooltip\"><p class=\"g2-tooltip-title\"></p><table class=\"g2-tooltip-list\"></table></div>'\n      itemTpl='<tr class=\"g2-tooltip-list-item\"><td style=\"color:{color}\">{name}</td><td>{value}</td></tr>'\n      offset={50}\n      g2-tooltip={{\n        position: 'absolute',\n        visibility: 'hidden',\n        border : '1px solid #efefef',\n        backgroundColor: 'white',\n        color: '#000',\n        opacity: \"0.8\",\n        padding: '5px 15px',\n        'transition': 'top 200ms,left 200ms'\n      }}  \n      g2-tooltip-list={{\n        margin: '10px'\n      }}\n    />"
        ]
      ],
      [
        "p",
        "预知详情如何，请",
        [
          "a",
          {
            "title": null,
            "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/other/cutomize-tooltip"
          },
          "点击这里"
        ]
      ],
      [
        "h3",
        "7、inPlot \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "设置是否将 tooltip 限定在绘图区域内，默认为 true，即限定在绘图区域内。"
      ],
      [
        "h3",
        "8、follow \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "设置 tooltip 是否跟随鼠标移动。默认为 true，即跟随。"
      ],
      [
        "h3",
        "9、shared \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "是否展示多条 tooltip。\n默认值:true，false 表示只展示单条 tooltip。"
      ],
      [
        "h3",
        "10、position \t",
        [
          "em",
          " 'top'|'bottom'|'left'|'right' "
        ]
      ],
      [
        "p",
        "  该属性设置之后，就会在固定位置展示 tooltip，可设置的值为：",
        [
          "code",
          "left"
        ],
        "、",
        [
          "code",
          "right"
        ],
        "、",
        [
          "code",
          "top"
        ],
        "、",
        [
          "code",
          "bottom"
        ],
        "。"
      ],
      [
        "h3",
        "11. triggerOn ",
        [
          "em",
          " String:",
          [
            "span",
            "'mousemove'|'click'|'none'"
          ],
          " "
        ]
      ],
      [
        "p",
        "tooltip 的触发方式，可配置的值为：'mousemove'、'click'、'none'，默认为 ",
        [
          "code",
          "mousemove"
        ],
        "。 "
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "'mousemove': 鼠标移动触发；"
          ]
        ],
        [
          "li",
          [
            "p",
            "'click': 鼠标点击出发；"
          ]
        ],
        [
          "li",
          [
            "p",
            "'none': 不触发 tooltip，用户通过 ",
            [
              "code",
              "chart.showTooltip()"
            ],
            " 和 ",
            [
              "code",
              "chart.hideTooltip()"
            ],
            " 来控制 tooltip 的显示和隐藏。"
          ]
        ]
      ],
      [
        "h3",
        "12、 title ",
        [
          "em",
          " string "
        ]
      ],
      [
        "p",
        "设置 tooltip 的标题展示的数据字段，设置该字段后，该标题即会展示该字段对应的数值。",
        [
          "code",
          "showTitle"
        ],
        " 为 false 时，该设置不生效。"
      ],
      [
        "h3",
        "13、 enterable ",
        [
          "em",
          " boolean "
        ]
      ],
      [
        "p",
        "用于控制是否允许鼠标进入 tooltip，默认为 false，即不允许进入。"
      ],
      [
        "h2",
        "其他配置"
      ],
      [
        "p",
        [
          "span",
          {
            "id": "format"
          }
        ],
        [
          ""
        ]
      ],
      [
        "h3",
        "格式化 tooltip 显示内容"
      ],
      [
        "p",
        "1、通过 ",
        [
          "code",
          "<Geom />"
        ],
        " 上的 ",
        [
          "em",
          "tooltip"
        ],
        " 属性的回调函数来配置。"
      ],
      [
        "p",
        "示例代码:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<Chart>\n  <Geom\n    tooltip={['time*sold', (time, sold) => {\n\t  return {\n\t    //自定义 tooltip 上显示的 title 显示内容等。\n\t\tname: 'sold',\n\t\ttitle: 'dddd' + time,\n\t\tvalue: sold\n\t  };\n\t}]}\n  />\n</Chart>"
        ]
      ],
      [
        "p",
        "2、通过 ",
        [
          "code",
          "<Tooltip />"
        ],
        " 上的 itemTpl 来格式化显示内容，详见",
        [
          "a",
          {
            "title": null,
            "href": "#itemTpl"
          },
          "itemTpl属性说明"
        ],
        "。"
      ],
      [
        "p",
        "3、特别复杂的场景可以通过 ",
        [
          "code",
          "<Chart>"
        ],
        " 上的 onTooltipChange  事件来格式化 ",
        [
          "code",
          "<Tooltip />"
        ],
        " 显示内容;详见 ",
        [
          "a",
          {
            "title": null,
            "href": "chart.md#onTooltipChange"
          },
          "onTooltipChange"
        ]
      ],
      [
        "h3",
        "固定位置显示 tooltip"
      ],
      [
        "p",
        "可以通过",
        [
          "code",
          "<Chart />"
        ],
        "组件上的 showTooltip 属性来控制在固定的位置显示提示信息，详见",
        [
          "a",
          {
            "title": null,
            "href": "chart.md#showTooltip"
          },
          "chart showTooltip 属性说明"
        ],
        "。"
      ],
      [
        "h1",
        "示例"
      ],
      [
        "h2",
        "样式配置"
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 略...\nimport { Chart, Geom, Axis, Tooltip } from 'bizcharts';\n\nconst data = [{ genre: 'Sports', sold: 275 } /* 略... */];\nconst cols = {sold: { alias: '销售量' }, genre: { alias: '游戏种类' }};\n\nReactDOM.render((\n  <Chart width={600} height={400} data={data} cols={cols}>\n    <Axis name=\"sold\" />\n    <Axis name=\"genre\" />\n    <Tooltip title={null} crossLine={{ stroke: '#f00' }} />\n    <Geom type=\"line\" position=\"genre*sold\" shape=\"smooth\" />\n  </Chart>\n), document.getElementById('mountNode'));"
        ]
      ],
      [
        "h2",
        "自定义"
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 略...\nimport { Chart, Geom, Axis, Tooltip } from 'bizcharts';\n\nconst data = [{ genre: 'Sports', sold: 275 } /* 略... */];\nconst tooltipCfg = {\n  custom: true,\n  containerTpl: '<div class=\"ac-tooltip\" style=\"position:absolute;visibility: hidden;background: rgba(255, 44, 52, 0.5);color: #fff;border-radius: 50%;padding: 10px 20px;text-align: center;\"><h4 class=\"ac-title\" style=\"margin: 0;padding: 5px 0;border-bottom: 1px solid #fff;\"></h4><table class=\"ac-list custom-table\" style=\"padding: 5px 0;\"></table></div>',\n  itemTpl: '<tr><td style=\"display:none\">{index}</td><td style=\"color:{color}\">{name}</td><td>{value}k</td></tr>'\n};\n\nReactDOM.render((\n  <Chart width={600} height={400} data={data}>\n    <Axis name=\"genre\" />\n    <Axis name=\"sold\" />\n    <Tooltip {...tooltipCfg} />\n    <Geom type=\"line\" position=\"genre*sold\" shape=\"smooth\" />\n  </Chart>\n), document.getElementById('mountNode'));"
        ]
      ]
    ]
  },
  {
    "filename": "api/transform.md",
    "path": "api/transform",
    "jsonml": [
      "article",
      [
        "h1",
        "Transform 数据转换"
      ],
      [
        "p",
        "一个数据视图（DataSet.View）通过 Transform 来进行数据转换操作，其语法如下："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: connectorName,\n  ...otherOptions\n});"
        ]
      ],
      [
        "p",
        "举个例子："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const testCSV = `Expt,Run,Speed\n 1,1,850\n 1,2,740\n 1,3,900\n 1,4,1070`;\n\nconst dv = new DataSet.View().source(testCSV, {\n  type: 'csv'\n});\nconsole.log(dv.rows);\n/*\n * dv.rows:\n * [\n *   {Expt: \" 1\", Run: \"1\", Speed: \"850\"}\n *   {Expt: \" 1\", Run: \"2\", Speed: \"740\"}\n *   {Expt: \" 1\", Run: \"3\", Speed: \"900\"}\n *   {Expt: \" 1\", Run: \"4\", Speed: \"1070\"}\n * ]\n */\n\ndv.transform({\n  type: 'filter',\n  callback(row) {\n    return row.Run !== \"1\";\n  }\n});\nconsole.log(dv.rows);\n/*\n * dv.rows:\n * [\n *   {Expt: \" 1\", Run: \"2\", Speed: \"740\"}\n *   {Expt: \" 1\", Run: \"3\", Speed: \"900\"}\n *   {Expt: \" 1\", Run: \"4\", Speed: \"1070\"}\n * ]\n */"
        ]
      ],
      [
        "p",
        "上述代码中，数据视图实例 ",
        [
          "code",
          "dv"
        ],
        " 使用 ",
        [
          "code",
          "csv"
        ],
        " 类型的 Connector 载入了一段 CSV 文本，之后执行 ",
        [
          "code",
          "filter"
        ],
        " Transform，过滤了某些数据。"
      ],
      [
        "p",
        "目前 DataSet 支持以下 Transform："
      ],
      [
        "h2",
        "静态处理相关"
      ],
      [
        "h3",
        "filter 数据过滤"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'filter',\n  callback(row) { // 判断某一行是否保留，默认返回true\n    return row.year > 1998;\n  }\n});"
        ]
      ],
      [
        "h3",
        "map 数据加工"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'map',\n  callback(row) { // 加工数据后返回新的一行，默认返回行数据本身\n    row.newCol = row.xxx + row.yyy;\n    return row;\n  }\n});"
        ]
      ],
      [
        "h3",
        "pick 字段过滤"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'pick',\n  fields: [ 'xxx', 'yyy' ] // 决定保留哪些字段，如果不传，则返回所有字段\n});"
        ]
      ],
      [
        "h3",
        "rename 字段重命名"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: rename-fields"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'rename',\n  map: {\n    xxx: 'yyy' // row.xxx 会被替换成 row.yyy\n  }\n});"
        ]
      ],
      [
        "h3",
        "reverse 逆序排列"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({ // 把数据行逆序排列\n  type: 'reverse',\n});"
        ]
      ],
      [
        "h3",
        "sort 数据排序"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'sort',\n  callback(a, b) { // 排序依据，和原生js的排序callback一致\n    return a.year - b.year;\n  }\n});"
        ]
      ],
      [
        "h3",
        "sort-by 按字段排序"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: sortBy"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'sort-by',\n  fields: [ 'year' ], // 根据指定的字段集进行排序，与lodash的sortBy行为一致\n  order: 'DESC'        // 默认为 ASC，DESC 则为逆序\n})"
        ]
      ],
      [
        "h3",
        "subset 获取子集"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'subset',\n  startRowIndex: 1,  // 保留行的起始索引\n  endRowIndex: 2,    // 保留行的结束索引\n  fields: [ 'year' ] // 保留字段集\n})"
        ]
      ],
      [
        "h3",
        "partition 数据分组"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: group | groups"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'partition',\n  groupBy: [ 'year' ], // 以year字段进行分组\n  orderBy: [ 'month' ] // 以month字段进行排序\n});"
        ]
      ],
      [
        "h2",
        "数据形变/数据补全相关"
      ],
      [
        "h3",
        "fill-rows 补全行"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: fillRows"
        ]
      ],
      [
        "p",
        "先按照 ",
        [
          "code",
          "groupBy"
        ],
        " 和 ",
        [
          "code",
          "orderBy"
        ],
        " 进行分组，如果以分组作为补全依据（",
        [
          "code",
          "fillBy: 'group'"
        ],
        "），那么就对比每个分组，以 ",
        [
          "code",
          "orderBy"
        ],
        " 序列字段值最全的分组为标准补全数据行数不足的分组。如果以序列作为补全依据（",
        [
          "code",
          "fillBy: 'order'"
        ],
        "），那么就取所有 ",
        [
          "code",
          "orderBy"
        ],
        " 序列字段的组合，为每个分组都补充全量的序列。"
      ],
      [
        "blockquote",
        [
          "p",
          "注意！如果原始数据有除 groupBy 和 orderBy 指定的字段以外的字段，那么补充的数据行里会缺失这些字段。这时可以结合 impute Transform 来做字段数据补全。"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "blockquote",
        [
          "p",
          "fillBy: group"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const data = [\n  { a: 0, b: 0 },\n  { a: 0, b: 1 },\n  { a: 0, b: 2 },\n  { a: 1, b: 1 },\n  { a: 1, b: 2 },\n  { a: 1, b: 3 },\n  { a: 2, b: 0 }\n];\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'fill-rows',\n    groupBy: [ 'a' ],\n    orderBy: [ 'b' ],\n    fillBy: 'group' // 默认为 group，可选值：order\n  });\nconsole.log(dv.rows);\n/*\n * dv.rows 变为:\n * [\n *   { a: 0, b: 0 }, // 分组1 作为第一个序列字段最全（b）的组，被选为基准\n *   { a: 0, b: 1 },\n *   { a: 0, b: 2 },\n *   { a: 1, b: 1 }, // 分组2 序列字段个数和基准组一致，所以不补充数据\n *   { a: 1, b: 2 },\n *   { a: 1, b: 3 },\n *   { a: 2, b: 0 }, // 分组3 缺省数据，根据基准组进行数据补全\n *   { a: 2, b: 1 }, // 这行数据被补充\n *   { a: 2, b: 2 }, // 这行数据被补充\n * ]\n */"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "fillBy: order"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "// 使用和上例同样的数据\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'fill-rows',\n    groupBy: [ 'a' ],\n    orderBy: [ 'b' ],\n    fillBy: 'order' // 默认为 group，可选值：order\n  });\nconsole.log(dv.rows);\n/*\n * dv.rows 变为:\n * [\n *   { a: 0, b: 0 }, // 分组1\n *   { a: 0, b: 1 },\n *   { a: 0, b: 2 },\n *   { a: 0, b: 3 }, // 分组1 补充了这行数据，因为全量的序列字段（b）有这个值\n *   { a: 1, b: 0 }, // 分组2 补充了这行数据，因为全量的序列字段（b）有这个值\n *   { a: 1, b: 1 },\n *   { a: 1, b: 2 },\n *   { a: 1, b: 3 },\n *   { a: 2, b: 0 }, // 分组3 缺省数据，根据基准组进行数据补全\n *   { a: 2, b: 1 }, // 这行数据被补充\n *   { a: 2, b: 2 }, // 这行数据被补充\n *   { a: 2, b: 3 }, // 这行数据被补充\n * ]\n */"
        ]
      ],
      [
        "h3",
        "impute 补全列/补全字段"
      ],
      [
        "p",
        "根据配置规则为某个字段补全缺失值。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const data = [\n  { x: 0, y: 1 },\n  { x: 0, y: 2 },\n  { x: 0, y: 3 },\n  { x: 0 },\n  { x: 1, y: 5 },\n  { x: 1, y: 6 },\n  { x: 1, y: 7 },\n  { x: 1 },\n  { x: 1, y: 9 },\n  { x: 2 }\n];\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'impute',\n    field: 'y',       // 待补全字段\n    groupBy: [ 'x' ], // 分组字段集（传空则不分组）\n    method: 'max'     // 补全字段值时执行的规则\n  });\n/*\n dv.rows 变为\n[\n  { x: 0, y: 1 },\n  { x: 0, y: 2 },\n  { x: 0, y: 3 },\n  { x: 0, y: 3 },\n  { x: 1, y: 5 },\n  { x: 1, y: 6 },\n  { x: 1, y: 7 },\n  { x: 1, y: 7 },\n  { x: 1, y: 9 },\n  { x: 2, y: 9 }\n]\n */"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "补全字段的规则（method）有常见的统计函数：max, min, median, mean"
        ],
        [
          "p",
          "还有补充固定值的写法：method 指定为 value，然后 value 指定为填充的常量，譬如"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'impute',\n  field: 'y',       // 待补全字段\n  groupBy: [ 'x' ], // 分组字段集（传空则不分组）\n  method: 'value',  // 补全常量\n  value: 10         // 补全的常量为10\n});"
        ]
      ],
      [
        "h3",
        "fold 字段展开"
      ],
      [
        "p",
        "以指定字段集为key，展开数据。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const data = [\n  { country: \"USA\", gold: 10, silver: 20 },\n  { country: \"Canada\", gold: 7, silver: 26 }\n];\nconst dv = ds.createView()\n  .source(data)\n  .transform({\n    type: 'fold',\n    fields: [ 'gold', 'silver' ], // 展开字段集\n    key: 'key',                   // key字段\n    value: 'value',               // value字段\n    retains: [ 'country' ]        // 保留字段集，默认为除 fields 以外的所有字段\n  });\n/*\n dv.rows 变为\n[\n  { key: gold, value: 10, country: \"USA\" },\n  { key: silver, value: 20, country: \"USA\" },\n  { key: gold, value: 7, country: \"Canada\" },\n  { key: silver, value: 26, country: \"Canada\" }\n]\n */"
        ]
      ],
      [
        "h2",
        "数据比例（百分比）相关 Transform"
      ],
      [
        "h3",
        "percent 总和百分比"
      ],
      [
        "p",
        "统计某个维度下某个字段的值的和占总和的比例（可以分组）。"
      ],
      [
        "p",
        [
          "code",
          "field"
        ],
        " 是统计发生的字段（求和，求百分比），",
        [
          "code",
          "dimension"
        ],
        " 是统计的维度字段，也就是\"每个不同的 ",
        [
          "code",
          "dimension"
        ],
        " 下，",
        [
          "code",
          "field"
        ],
        " 值占总和的百分比\"，",
        [
          "code",
          "groupBy"
        ],
        " 则是分组字段，每一个分组内部独立求百分比（每一个分组内，最后的 ",
        [
          "code",
          "percent"
        ],
        " 字段相加之和为 1）。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'percent',\n  field: 'sold',           // 统计销量\n  dimension: 'year',       // 每年的占比\n  groupBy: [ 'category' ], // 以不同产品类别为分组\n  as: 'percent'            // 结果存储在 percent 字段\n});"
        ]
      ],
      [
        "h3",
        "proportion 行数百分比"
      ],
      [
        "p",
        "统计某个维度下某个字段的数据条数占总条数的比例（可以分组）。和 percent Transform 类似，但统计的是数据条目的占比，而不是数据总和的占比。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'proportion',\n  field: 'id',             // 统计条数\n  dimension: 'year',       // 每年的占比\n  groupBy: [ 'category' ], // 以不同产品类别为分组\n  as: 'proportion'         // 结果存储在proportion字段\n});"
        ]
      ],
      [
        "h2",
        "数据统计相关"
      ],
      [
        "h3",
        "aggregate 聚合统计"
      ],
      [
        "p",
        "统计处理，支持并行的多种统计。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'aggregate', // 别名summary\n  fields: [],        // 统计字段集\n  operations: [],    // 统计操作集\n  as: [],            // 存储字段集\n  groupBy: []        // 分组字段集\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "以上fields/operations/as这三个数组元素一一对应。“对某个字段field进行某种统计操作operation结果存储在某个字段上as”"
        ]
      ],
      [
        "p",
        "支持的operations: ",
        [
          "a",
          {
            "title": null,
            "href": "https://simplestatistics.org/"
          },
          "详见simple-statistics"
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "count"
          ]
        ],
        [
          "li",
          [
            "p",
            "max"
          ]
        ],
        [
          "li",
          [
            "p",
            "min"
          ]
        ],
        [
          "li",
          [
            "p",
            "mean"
          ]
        ],
        [
          "li",
          [
            "p",
            "median"
          ]
        ],
        [
          "li",
          [
            "p",
            "mode"
          ]
        ],
        [
          "li",
          [
            "p",
            "product"
          ]
        ],
        [
          "li",
          [
            "p",
            "standardDeviation"
          ]
        ],
        [
          "li",
          [
            "p",
            "sum"
          ]
        ],
        [
          "li",
          [
            "p",
            "sumSimple"
          ]
        ],
        [
          "li",
          [
            "p",
            "variance"
          ]
        ]
      ],
      [
        "h3",
        "regression 回归曲线"
      ],
      [
        "p",
        "计算两个字段的回归拟合曲线。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'regression',\n  method: 'linear',     // 回归算法类型\n  fields: [ 'x', 'y' ], // 统计字段\n  bandwidth: 0.1,       // 步长\n  extent: [ 0, 4 ],     // 结果集里，x的数值范围\n  as: [ 'x', 'y' ]      // 结果字段\n});"
        ]
      ],
      [
        "p",
        "支持的回归算法类型："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "linear"
          ]
        ],
        [
          "li",
          [
            "p",
            "exponential"
          ]
        ],
        [
          "li",
          [
            "p",
            "logarithmic"
          ]
        ],
        [
          "li",
          [
            "p",
            "power"
          ]
        ],
        [
          "li",
          [
            "p",
            "polynomial"
          ]
        ]
      ],
      [
        "h2",
        "数据分箱相关"
      ],
      [
        "h3",
        "bin.histogram 直方图分箱"
      ],
      [
        "p",
        "单字段"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: bin.dot"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'bin.histogram',\n  field: 'a',             // 对应数轴上的一个点\n  bins: 30,               // 分箱个数\n  binWidth: 10,           // 分箱步长（会覆盖bins选项）\n  offset: 0,              // 分箱偏移量\n  groupBy: [],            // 分组（用于层叠直方图）\n  as: [ 'x', 'count' ],   // x 为数组，存储了某个分箱的上下限 [x0, x1]\n});"
        ]
      ],
      [
        "h3",
        "bin.quantile 分位值分箱"
      ],
      [
        "p",
        "单字段"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'bin.quantile',\n  field: 'y',    // 计算分为值的字段\n  as: '_bin',    // 保存分为值的数组字段\n  groupBy: [],   // 分组\n  fraction: 4,   // 可选，默认四分位\n  p: [ 0.5, 0.3 ]  // 可选，p参数列表，与 fraction 二选一\n});"
        ]
      ],
      [
        "h3",
        "bin.hexagon 六边形分箱"
      ],
      [
        "p",
        "双字段"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: bin.hex | hexbin"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'bin.hexagon',\n  fields: [ 'a', 'b' ],      // 对应坐标轴上的一个点\n  bins: [ 30, 30 ],          // 两个方向上的分箱个数\n  binWidth: [ 10, 1000 ],    // 两个方向上的分箱步长（会覆盖bins的配置）\n  offset: [ 0, 0 ],          // 两个方向上的分箱偏移量\n  sizeByCount: false,        // 是否根据分箱个数调整分箱大小（六边形的半径）\n  as: [ 'x', 'y', 'count' ], // 这个点落在的六边形的顶点坐标集，以及每个分箱内的数据条数\n                               // x: [ x0, x1, x2, x3, x4, x5 ], y: [ y0, y1, y2, y3, y4, y5 ]\n                               // count: Number\n});\n/*\n * 顶点顺序：\n *      3\n * 4          2\n *\n * 5          1\n *      0\n */"
        ]
      ],
      [
        "h3",
        "bin.rectangle 矩形分箱"
      ],
      [
        "p",
        "双字段"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: bin.rect"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'bin.rectangle',\n  fields: [ 'a', 'b' ],        // 对应坐标轴上的一个点\n  bins: [ 30, 30 ],          // 两个方向上的分箱个数\n  binsWidth: [ 10, 10 ],     // 两个方向上的分箱步长（会覆盖bins配置）\n  offset: [ 0, 0 ],          // 两个方向上的分箱偏移量\n  sizeByCount: false,        // 是否根据分箱个数调整分箱大小\n  as: [ 'x', 'y', 'count' ], // 这个点落在的六边形的顶点坐标集\n                               // x: [ x0, x1, x2, x3 ], y: [ y0, y1, y2, y3 ]\n                               // count: Number\n});\n/*\n * 顶点顺序：\n * 3 - 2\n * |   |\n * 0 - 1\n */"
        ]
      ],
      [
        "h2",
        "核函数相关"
      ],
      [
        "h3",
        "kernel-smooth.regression 核函数概率密度回归"
      ],
      [
        "p",
        "用于画核函数概率密度回归曲线，支持单字段或者双字段。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'kernel-smooth.regression',\n  fields: [ 'x', 'y' ],             // 必填，1 或 2 字段\n  method: 'gaussian',               // 采用的核函数类型。也可以指定为自定义的函数\n  extent: [ min(x), max(x) ],       // 数值范围，默认为 x 字段的数值范围\n  bandwidth: 0.4,                   // 步长，默认采用 silverman 的算法计算\n  as: [ 'x', 'y' ],                 // 结果字段，单字段时，y 为 x 值对应的概率\n});"
        ]
      ],
      [
        "p",
        "支持的核函数类型："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "cosine"
          ]
        ],
        [
          "li",
          [
            "p",
            "epanechnikov"
          ]
        ],
        [
          "li",
          [
            "p",
            "gaussian (default)"
          ]
        ],
        [
          "li",
          [
            "p",
            "quartic"
          ]
        ],
        [
          "li",
          [
            "p",
            "triangular"
          ]
        ],
        [
          "li",
          [
            "p",
            "tricube"
          ]
        ],
        [
          "li",
          [
            "p",
            "triweight"
          ]
        ],
        [
          "li",
          [
            "p",
            "uniform"
          ]
        ]
      ],
      [
        "h3",
        "kernel-smooth.density 核函数概率密度分布"
      ],
      [
        "p",
        "用于画核函数概率密度分布热力图，双字段。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'kernel-smooth.density',\n  fields: [ 'x', 'y' ],                            // 必填\n  method: 'gaussian',                              // 采用的核函数类型。也可以指定为自定义的函数\n  extent: [ [ min(x), max(x) ], [ min(y), max(y)] ], // 数值范围，默认为 x 以及 y 字段各自的数值范围\n  bandwidth: 0.4,                                  // 步长，默认采用 silverman 的算法计算\n  as: [ 'x', 'y' ],                                // 结果字段，单字段时，y 为 x 值对应的概率\n});"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "silverman 提出的 bandwidth 计算算法: ",
          [
            "a",
            {
              "title": null,
              "href": "https://ned.ipac.caltech.edu/level5/March02/Silverman/paper.pdf"
            },
            "paper"
          ]
        ]
      ],
      [
        "p",
        "支持的核函数类型同上"
      ],
      [
        "h2",
        "树相关"
      ],
      [
        "h3",
        "hierarchy.treemap 树形图"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: treemap"
        ]
      ],
      [
        "p",
        "根据树形数据生成树形图 Treemap 布局。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'hierarchy.treemap',\n  field: 'value',\n  tile: 'treemapSquarify',     // 布局类型\n  size: [ 1, 1 ],              // width, height\n  round: false,\n  // ratio: 1.618033988749895, // golden ratio\n  padding: 0,                  // 各种 padding 配置\n  paddingInner: 0,\n  paddingOuter: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  as: [ 'x', 'y' ]             // 矩形的顶点集\n                               // x: [ x0, x1, x2, x3 ], y: [ y0, y1, y2, y3 ]\n});"
        ]
      ],
      [
        "p",
        "支持的布局类型："
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "treemapBinary"
          ]
        ],
        [
          "li",
          [
            "p",
            "treemapDice"
          ]
        ],
        [
          "li",
          [
            "p",
            "treemapSlice"
          ]
        ],
        [
          "li",
          [
            "p",
            "treemapSliceDice"
          ]
        ],
        [
          "li",
          [
            "p",
            "treemapSquarify"
          ]
        ],
        [
          "li",
          [
            "p",
            "treemapResquarify"
          ]
        ]
      ],
      [
        "h3",
        "hierarchy.partition 相邻层次图"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: adjacency"
        ]
      ],
      [
        "p",
        "根据树形数据生成相邻层次图 Adjacency Diagram 布局，可以通过坐标变换变形为 Sunburst 图。"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'hierarchy.partition',\n  field: 'value',\n  size: [ 1, 1 ],              // width, height\n  round: false,\n  // ratio: 1.618033988749895, // golden ratio\n  padding: 0,                  // 各种 padding 配置\n  as: [ 'x', 'y' ],            // 矩形的顶点集\n                               // x: [ x0, x1, x2, x3 ], y: [ y0, y1, y2, y3 ]\n});"
        ]
      ],
      [
        "h2",
        "图相关"
      ],
      [
        "h3",
        "diagram.arc 弧长链接图"
      ],
      [
        "p",
        "弧长链接图（Arc Diagram）可以变形为和弦图（Chord Diagram）。"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: arc"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'diagram.arc',\n  y: 0,\n  thickness: 0.05,                   // 节点高度，区间 (0, 1)\n  weight: false,                     // 是否带权重，无权重为弧长链接图，带权重为和弦图\n  marginRatio: 0.1,                  // 空隙比例，区间[0, 1)\n  id: node => node.id,               // 获取节点id\n  source: edge => edge.source,       // 获取边起始点id\n  target: edge => edge.target,       // 获取边结束点id\n  sourceWeight: edge => edge.value,  // 获取边起始点权重\n  targetWeight: edge => edge.value1, // 获取边结束点权重\n  sortBy: null,                      // 排序，可以按照id，权重（'weight'）或者边数量（'frequency'）排序，也可以自定排序函数\n});"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "注意！这个 Transform 做完之后，有两部分数据（顶点和边数据），G2 在使用是不能直接通过 chart.source(dv) 来导入数据，只能分别导入顶点和边集合，例如："
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const nodeView = chart.view();\nnodeView.source(dv.nodes);\n\nconst edgeView = chart.view();\nedgeView.source(dv.edges);"
        ]
      ],
      [
        "h3",
        "diagram.sankey 桑基图"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: sankey"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'diagram.sankey',\n  value: node => node.value,    // 权重\n  source: edge => edge.source,  // 边起点id\n  target: edge => edge.target,  // 边终点id\n  nodeAlign: 'sankeyJustify',   // sankeyLeft / sankeyRight / sankeyCenter\n  nodeWidth: 0.02,              // 节点宽，范围：(0, 1)\n  nodePadding: 0.02,            // 节点上下间距，范围：(0, 1)\n});"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "注意！这个 Transform 做完后同样需要注意上述 arc transform 一样的数据导入问题"
        ]
      ],
      [
        "h3",
        "diagram.voronoi"
      ],
      [
        "p",
        "voronoi 图"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: voronoi"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'diagram.voronoi',\n  fields: [ 'field0', 'field1' ], // 对应坐标轴上的一个点\n  extend: [ [ x0, y0 ], [ x1, y1 ] ], // 范围\n  size: [ width, height ],        // 范围\n  as: [ 'x', 'y' ],             // 每个点包围多边形的顶点集\n                                // x: [ x0, x1, x2, ... ], y: [ y0, y1, y2, ... ]\n})"
        ]
      ],
      [
        "h2",
        "Geo 地理数据相关"
      ],
      [
        "h3",
        "geo.projection 地理映射"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'geo.projection',\n  projection: 'geoAiry',                        // 指定映射类型\n  as: [ 'x', 'y', 'centroid_x', 'centroid_y' ], // x，y是对应多边形的顶点集\n                                                // centroid_x是中心点的x坐标\n                                                // centroid_y是中心点y坐标\n});"
        ]
      ],
      [
        "h3",
        "geo.centroid 由地名获取地理位置点"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'geo.centroid',\n  field: 'name',                        // 标注地名的字段\n  geoDataView: geoDataView,             // 使用的geo数据来源，可以是DataView实例，也可以是DataView实例的name\n  as: [ '_centroid_x', '_centroid_y' ], // _centroid_x是中心点的x坐标\n                                        // _centroid_y是中心点y坐标\n});"
        ]
      ],
      [
        "h3",
        "geo.region 由地名获取地理位置区域"
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'geo.region',\n  field: 'name',            // 标注地名的字段\n  geoDataView: geoDataView, // 使用的geo数据来源，可以是DataView实例，也可以是DataView实例的name\n  as: [ '_x', '_y' ],       // 多边形的顶点集\n                            // _x: [ x0, x1, x2, ... ], _y: [ y0, y1, y2, ... ]\n});"
        ]
      ],
      [
        "h2",
        "其他"
      ],
      [
        "h3",
        "tag-cloud 词云布局"
      ],
      [
        "blockquote",
        [
          "p",
          "alias: word-cloud"
        ]
      ],
      [
        "p",
        "具体用法见示例："
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "dv.transform({\n  type: 'tag-cloud',\n  fields: [ 'text', 'value' ],    // 参与标签云layout的字段集\n  font: 'serif',                  // 标签字体\n  size: [ 500, 500 ],             // 画布size，[ width, height ]\n  padding: 0,\n  spiral: 'archimedean',          // 标签螺旋排布规律函数 'archimedean' || 'rectangular' || {function}\n  fontSize(d) { return d.value }, // 计算标签字体大小的回调函数，d为一行数据\n  text(d) { return d.text },      // 生成标签文本的回调函数，d为一行数据\n  timeInterval: Infinity,         // 最大迭代时间\n  imageMask: {Image},             // Image的实例，必须是loaded状态\n})"
        ]
      ],
      [
        "blockquote",
        [
          "p",
          "带图片形状的词云布局实例"
        ]
      ],
      [
        "pre",
        {
          "lang": "js"
        },
        [
          "code",
          "const imageMask = new Image()\nimageMask.crossOrigin = ''\nimageMask.src = 'https://zos.alipayobjects.com/rmsportal/EEFqYWuloqIHRnh.jpg'\nimageMask.onload = () => {\n  dv.transform({\n    type: 'tag-cloud',\n    imageMask\n  });\n};"
        ]
      ]
    ]
  },
  {
    "filename": "api/view.md",
    "path": "api/view",
    "jsonml": [
      "article",
      [
        "h1",
        "View"
      ],
      [
        "p",
        "视图，由 Chart 生成和管理，拥有自己独立的数据源、坐标系和图层，用于异构数据的可视化以及图表组合，一个 Chart 由一个或者多个视图 View 组成。因此 view 上的 api 同 chart 基本相同。"
      ],
      [
        "h2",
        "使用说明"
      ],
      [
        "h3",
        "Parent Components"
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            [
              "code",
              "<Chart />"
            ]
          ],
          [
            "h3",
            "Child Components"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "coord.md"
              },
              [
                "code",
                "<Coord/>"
              ]
            ],
            " 坐标系组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "axis.md"
              },
              [
                "code",
                "<Axis/>"
              ]
            ],
            " 坐标轴组件,特性跟",
            [
              "code",
              "<Chart/>"
            ],
            "一样，默认全部不显示，若配置一个轴显示，则全部轴显示。"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "geom.md"
              },
              [
                "code",
                "<Geom/>"
              ]
            ],
            " 几何标记组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "legend.md"
              },
              [
                "code",
                "<Legend/>"
              ]
            ],
            " 图例组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "tooltip.md"
              },
              [
                "code",
                "<Tooltip/>"
              ]
            ],
            " 提示框组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "guide.md"
              },
              [
                "code",
                "<Guide/>"
              ]
            ],
            " 辅助标记组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "facet.md"
              },
              [
                "code",
                "<Facet/>"
              ]
            ],
            " 分面组件"
          ]
        ],
        [
          "li",
          [
            "p",
            [
              "a",
              {
                "title": null,
                "href": "view.md"
              },
              [
                "code",
                "<View/>"
              ]
            ],
            " 视图组件"
          ]
        ]
      ],
      [
        "p",
        [
          "strong",
          "实际开发过程中，很多图表都可以采用View组件来实现，包含但不限于以下几个方面："
        ]
      ],
      [
        "ul",
        [
          "li",
          [
            "p",
            "在同一个容器中出现两个或者更多不同坐标系的图表时，可以采用View组件来实现，如下图所示；",
            [
              "a",
              {
                "title": null,
                "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/pie/sunburst"
              },
              "Demo"
            ],
            "\n",
            [
              "img",
              {
                "title": null,
                "src": "https://img.alicdn.com/tfs/TB1GqOTa4rI8KJjy0FpXXb5hVXa-1600-856.png",
                "alt": "image | center"
              }
            ]
          ]
        ],
        [
          "li",
          [
            "p",
            "同一个容器中的两个图表需要采用不同的数据源时，如下图所示：",
            [
              "a",
              {
                "title": null,
                "href": "https://alibaba.github.io/BizCharts/demo-detail.html?code=demo/funnel/symmetric"
              },
              "Demo"
            ],
            "\n",
            [
              "img",
              {
                "title": null,
                "src": "https://img.alicdn.com/tfs/TB1w1flbhrI8KJjy0FpXXb5hVXa-1600-856.png",
                "alt": "image | center"
              }
            ]
          ]
        ]
      ],
      [
        "pre",
        {
          "lang": "html"
        },
        [
          "code",
          "// 这里只显示部分核心代码\n<Chart width={600} height={400} data={data}>\n<Coord type=\"theta\" radius={0.5} />\n<Geom\n  type=\"pie\"\n  position={Stat.summary.percent('value')}\n  color={['type', ['#4E7CCC', '#36B3C3', '#F9815C']]}\n/>\n<View data={data}>\n  <Coord type=\"theta\" inner={0.75} />\n  <Geom\n    type=\"pie\"\n    position={Stat.summary.percent('value')}\n    color=\"name\"\n  />\n</View>\n</Chart>"
        ]
      ],
      [
        "h2",
        "属性"
      ],
      [
        "h3",
        "1、id \t",
        [
          "em",
          " String "
        ]
      ],
      [
        "p",
        "视图的 id 标识，用于唯一标定视图，如果用户不指定，G2 会默认提供一套 id 生成机制（‘view’ + views.length，如 view0, view1, …, viewN)。"
      ],
      [
        "h3",
        "2、start \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "绘制区域的起始坐标，x和y的取值范围均为0 -1。\n我们的起始点是从",
        [
          "strong",
          "左上角"
        ],
        "开始的。\n参见:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<View start={{x:0.5, y:0.5}} />"
        ]
      ],
      [
        "h3",
        "3、end \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "绘制区域的结束坐标，x和y的取值范围均为0 -1。"
      ],
      [
        "p",
        "参见:"
      ],
      [
        "pre",
        {
          "lang": "jsx"
        },
        [
          "code",
          "<View end={{x:0.5, y:0.5}} />"
        ]
      ],
      [
        "h3",
        "4、data \t",
        [
          "em",
          " Array | DataSet "
        ]
      ],
      [
        "p",
        "使用同 ",
        [
          "code",
          "Chart"
        ],
        " 的 ",
        [
          "a",
          {
            "title": null,
            "href": "chart.md#data"
          },
          "data 属性"
        ],
        "。"
      ],
      [
        "h3",
        "5、animate \t",
        [
          "em",
          " Boolean "
        ]
      ],
      [
        "p",
        "视图是否执行动画。\n默认值:true。"
      ],
      [
        "h3",
        "6、scale \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "使用同 ",
        [
          "code",
          "Chart"
        ],
        " 的 ",
        [
          "a",
          {
            "title": null,
            "href": "chart.md#scale"
          },
          "scale 属性"
        ],
        "。"
      ],
      [
        "h3",
        "7、filter \t",
        [
          "em",
          " Object "
        ]
      ],
      [
        "p",
        "使用同 ",
        [
          "code",
          "Chart"
        ],
        " 的 ",
        [
          "a",
          {
            "title": null,
            "href": "chart.md#filter"
          },
          "filer 属性"
        ],
        "。"
      ]
    ]
  }
]